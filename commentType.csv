file,name,start_line,end_line,comment,params
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js,ThemeManager.onDidChangeActiveThemes,55,57,"
  Section: Event Subscription
  . Essential: Invoke `callback` when style sheet changes associated with. updating the list of active themes have completed... * `callback` {Function}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.showUpdateMenuItem,109,140, Sets the proper visible state the update menu items,state:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/context-menu.js,ContextMenu.createClickHandlers,15,32," It's necessary to build the event handlers in this process, otherwise. closures are dragged across processes and failed to be garbage collected. appropriately.",template:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/win-powershell.js,spawnPowershell,13,28, Spawn powershell.exe and callback when it completes,args:;callback:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.acceleratorForCommand,221,224, Determine the accelerator for a given command... command - The name of the command.. keystrokesByCommand - An Object where the keys are commands and the values.                       are Arrays containing the keystroke... Returns a String containing the keystroke in a format that can be interpreted.   by Electron to provide nice icons where available.,command:object;keystrokesByCommand:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.translateTemplate,198,211, Combines a menu template with the appropriate keystroke... template - An Object conforming to atom-shell's menu api but lacking.            accelerator and click properties.. keystrokesByCommand - An Object where the keys are commands and the values.                       are Arrays containing the keystroke... Returns a complete menu configuration object for atom-shell's menu API.,template:object;keystrokesByCommand:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.compare,654,656,"
  Section: Visibility
  .
  Section: Comparing to another cursor
  . Public: Compare this cursor's buffer position to another cursor's buffer position... See {Point::compare} for more details... * `otherCursor`{Cursor} to compare against",otherCursor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.compare,654,656,"
  Section: Visibility
  .
  Section: Comparing to another cursor
  . Public: Compare this cursor's buffer position to another cursor's buffer position... See {Point::compare} for more details... * `otherCursor`{Cursor} to compare against",otherCursor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.compare,654,656,"
  Section: Visibility
  .
  Section: Comparing to another cursor
  . Public: Compare this cursor's buffer position to another cursor's buffer position... See {Point::compare} for more details... * `otherCursor`{Cursor} to compare against",otherCursor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js,TextEditorComponent.didBlur,1500,1504," Called by TextEditorElement so that this function is always the first. listener to be fired, even if other listeners are bound before creating. the component.",event:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selectors.js,parse,10,14," Private: Parse a selector into parts..          If already parsed, returns the selector unmodified... * `selector` a {String|Array<String>} specifying what to match. Returns selector parts, an {Array<String>}.","selector:string,array"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/view-registry.js,ViewRegistry.getView,122,131," Essential: Get the view associated with an object in the workspace... If you're just *using* the workspace, you shouldn't need to access the view. layer, but view layer access may be necessary if you want to perform DOM. manipulation that isn't supported via the model API... ## View Resolution Algorithm.. The view associated with the object is resolved using the following. sequence..  1. Is the object an instance of `HTMLElement`? If true, return the object..  2. Does the object have a method named `getElement` that returns an.     instance of `HTMLElement`? If true, return that value..  3. Does the object have a property named `element` with a value which is.     an instance of `HTMLElement`? If true, return the property value..  4. Is the object a jQuery object, indicated by the presence of a `jquery`.     property? If true, return the root DOM element (i.e. `object[0]`)..  5. Has a view provider been registered for the object? If true, use the.     provider to create a view associated with the object, and return the.     view... If no associated view is returned by the sequence an error is thrown... Returns a DOM element.",object:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.selectToScreenPosition,211,231," Public: Selects the text from the current cursor position to a given screen. position... * `position` An instance of {Point}, with a given `row` and `column`.",position:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setScreenRange,74,76, Public: Modifies the screen range for the selection... * `screenRange` The new {Range} to use.. * `options` (optional) {Object} options matching those found in {::setBufferRange}.,"screenRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.unset,730,766, Essential: Restore the setting at `keyPath` to its default value... * `keyPath` The {String} name of the key.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. See {::set}.   * `source` (optional) {String}. See {::set},"keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,Dock.onDidChangeHovered,631,633, Extended: Invoke the given callback when the hovered state of the dock changes... * `callback` {Function} to be called when the hovered state changes..   * `hovered` {Boolean} Is the dock now hovered?.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setScreenRange,74,76, Public: Modifies the screen range for the selection... * `screenRange` The new {Range} to use.. * `options` (optional) {Object} options matching those found in {::setBufferRange}.,"screenRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setScreenRange,74,76, Public: Modifies the screen range for the selection... * `screenRange` The new {Range} to use.. * `options` (optional) {Object} options matching those found in {::setBufferRange}.,"screenRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.expandOverLine,403,408, Public: Expands the newest selection to include the entire line on which. the cursor currently rests... It also includes the newline character.,options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.expandOverWord,376,380, Public: Expands the newest selection to include the entire word on which. the cursors rests.,options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getPathStatus,374,390, Public: Get the status of a single path in the repository... * `path` A {String} repository-relative path... Returns a {Number} representing the status. This value can be passed to. {::isStatusModified} or {::isStatusNew} to get more information.,path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,Dock.pointWithinHoverArea,333,405," Determine whether the cursor is within the dock hover area. This isn't as simple as just using. mouseenter/leave because we want to be a little more forgiving. For example, if the cursor is. over the footer, we want to show the bottom dock's toggle button. Also note that our criteria. for detecting entry are different than detecting exit but, in order for us to avoid jitter, the. area considered when detecting exit MUST fully encompass the area considered when detecting. entry.",point:;detectingExit:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.moveRight,305,327," Public: Moves the cursor right one screen column... * `columnCount` (optional) {Number} number of columns to move (default: 1). * `options` (optional) {Object} with the following keys:.   * `moveToEndOfSelection` if true, move to the right of the selection if a.     selection exists.","columnCount:number,optional;moveToEndOfSelection:"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.moveLeft,281,297," Public: Moves the cursor left one screen column... * `columnCount` (optional) {Number} number of columns to move (default: 1). * `options` (optional) {Object} with the following keys:.   * `moveToEndOfSelection` if true, move to the left of the selection if a.     selection exists.","columnCount:number,optional;moveToEndOfSelection:"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.setScopedDefaultsFromSchema,1131,1151, `schema` will look something like this.. ```coffee. type: 'string'. default: 'ok'. scopes:.   '.source.js':.     default: 'omg'. ```,keyPath:;schema:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.resetSettingsForSchemaChange,1182,1194," When the schema is changed / added, there may be values set in the config. that do not conform to the schema. This will reset make them conform.",source:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.maintainConfig,145,177, Keep a {TextEditor}'s configuration in sync with Atom's settings... * `editor` The editor whose configuration will be maintained... Returns a {Disposable} that can be used to stop updating the editor's. configuration.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.observeGrammar,747,750, Extended: Calls your `callback` when the grammar that interprets and. colorizes the text has been changed. Immediately calls your callback with. the current grammar... * `callback` {Function}.   * `grammar` {Grammar}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.moveUp,241,253,"
  Section: Moving the Cursor
  . Public: Moves the cursor up one screen row... * `rowCount` (optional) {Number} number of rows to move (default: 1). * `options` (optional) {Object} with the following keys:.   * `moveToEndOfSelection` if true, move to the left of the selection if a.     selection exists.","rowCount:number,optional;moveToEndOfSelection:"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.moveDown,261,273," Public: Moves the cursor down one screen row... * `rowCount` (optional) {Number} number of rows to move (default: 1). * `options` (optional) {Object} with the following keys:.   * `moveToEndOfSelection` if true, move to the left of the selection if a.     selection exists.","rowCount:number,optional;moveToEndOfSelection:"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.transact,816,823," Extended: Suppress calls to handler functions registered with {::onDidChange}. and {::observe} for the duration of `callback`. After `callback` executes,. handlers will be called once if the value for their key-path has changed... * `callback` {Function} to execute while suppressing calls to handlers.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/view-registry.js,ViewRegistry.getView,122,131," Essential: Get the view associated with an object in the workspace... If you're just *using* the workspace, you shouldn't need to access the view. layer, but view layer access may be necessary if you want to perform DOM. manipulation that isn't supported via the model API... ## View Resolution Algorithm.. The view associated with the object is resolved using the following. sequence..  1. Is the object an instance of `HTMLElement`? If true, return the object..  2. Does the object have a method named `getElement` that returns an.     instance of `HTMLElement`? If true, return that value..  3. Does the object have a property named `element` with a value which is.     an instance of `HTMLElement`? If true, return the property value..  4. Is the object a jQuery object, indicated by the presence of a `jquery`.     property? If true, return the root DOM element (i.e. `object[0]`)..  5. Has a view provider been registered for the object? If true, use the.     provider to create a view associated with the object, and return the.     view... If no associated view is returned by the sequence an error is thrown... Returns a DOM element.",object:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-watcher-registry.js,absolute,4,7, Private: re-join the segments split from an absolute path to form another absolute path.,parts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip-manager.js,TooltipManager.add,114,177," Essential: Add a tooltip to the given element... * `target` An `HTMLElement`. * `options` An object with one or more of the following options:.   * `title` A {String} or {Function} to use for the text in the tip. If.     a function is passed, `this` will be set to the `target` element. This.     option is mutually exclusive with the `item` option..   * `html` A {Boolean} affecting the interpretation of the `title` option..     If `true` (the default), the `title` string will be interpreted as HTML..     Otherwise it will be interpreted as plain text..   * `item` A view (object with an `.element` property) or a DOM element.     containing custom content for the tooltip. This option is mutually.     exclusive with the `title` option..   * `class` A {String} with a class to apply to the tooltip element to.     enable custom styling..   * `placement` A {String} or {Function} returning a string to indicate.     the position of the tooltip relative to `element`. Can be `'top'`,.     `'bottom'`, `'left'`, `'right'`, or `'auto'`. When `'auto'` is.     specified, it will dynamically reorient the tooltip. For example, if.     placement is `'auto left'`, the tooltip will display to the left when.     possible, otherwise it will display right..     When a function is used to determine the placement, it is called with.     the tooltip DOM node as its first argument and the triggering element.     DOM node as its second. The `this` context is set to the tooltip.     instance..   * `trigger` A {String} indicating how the tooltip should be displayed..     Choose from one of the following options:.       * `'hover'` Show the tooltip when the mouse hovers over the element..         This is the default..       * `'click'` Show the tooltip when the element is clicked. The tooltip.         will be hidden after clicking the element again or anywhere else.         outside of the tooltip itself..       * `'focus'` Show the tooltip when the element is focused..       * `'manual'` Show the tooltip immediately and only hide it when the.         returned disposable is disposed..   * `delay` An object specifying the show and hide delay in milliseconds..     Defaults to `{show: 1000, hide: 100}` if the `trigger` is `hover` and.     otherwise defaults to `0` for both values..   * `keyBindingCommand` A {String} containing a command name. If you specify.     this option and a key binding exists that matches the command, it will.     be appended to the title or rendered alone if no title is specified..   * `keyBindingTarget` An `HTMLElement` on which to look up the key binding..     If this option is not supplied, the first of all matching key bindings.     for the given command will be rendered... Returns a {Disposable} on which `.dispose()` can be called to remove the. tooltip.",target:function;options:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/gutter.js,Gutter.decorateMarker,105,107," Essential: Add a decoration that tracks a {DisplayMarker}. When the marker moves,. is invalidated, or is destroyed, the decoration will be updated to reflect. the marker's state... ## Arguments.. * `marker` A {DisplayMarker} you want this decoration to follow.. * `decorationParams` An {Object} representing the decoration. It is passed.   to {TextEditor::decorateMarker} as its `decorationParams` and so supports.   all options documented there..   * `type` __Caveat__: set to `'line-number'` if this is the line-number.     gutter, `'gutter'` otherwise. This cannot be overridden... Returns a {Decoration} object",marker:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.enableWindowSpecificItems,96,100," Public: Used to make all window related menu items are active... enable - If true enables all window specific items, if false disables all.          window specific items.",enable:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.selectLeft,251,253, Public: Selects the text one position left of the cursor... * `columnCount` (optional) {Number} number of columns to select (default: 1),"columnCount:number,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.checkoutHead,472,477,"
  Section: Checking Out
  . Public: Restore the contents of a path in the working directory and index. to the version at `HEAD`... This is essentially the same as running:.. ```sh.   git reset HEAD -- <path>.   git checkout HEAD -- <path>. ```.. * `path` The {String} path to checkout... Returns a {Boolean} that's true if the method was successful.",path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getPathStatus,374,390, Public: Get the status of a single path in the repository... * `path` A {String} repository-relative path... Returns a {Number} representing the status. This value can be passed to. {::isStatusModified} or {::isStatusNew} to get more information.,path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.checkoutHead,472,477,"
  Section: Checking Out
  . Public: Restore the contents of a path in the working directory and index. to the version at `HEAD`... This is essentially the same as running:.. ```sh.   git reset HEAD -- <path>.   git checkout HEAD -- <path>. ```.. * `path` The {String} path to checkout... Returns a {Boolean} that's true if the method was successful.",path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.checkoutReference,486,488," Public: Checks out a branch in your repository... * `reference` The {String} reference to checkout.. * `create`    A {Boolean} value which, if true creates the new reference if.   it doesn't exist... Returns a Boolean that's true if the method was successful.","reference:string,boolean;create:boolean"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.getAll,613,643," Extended: Get all of the values for the given key-path, along with their. associated scope selector... * `keyPath` The {String} name of the key to retrieve. * `options` (optional) {Object} see the `options` argument to {::get}.. Returns an {Array} of {Object}s with the following keys:.  * `scopeDescriptor` The {ScopeDescriptor} with which the value is associated.  * `value` The value for the key-path","keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.getAll,613,643," Extended: Get all of the values for the given key-path, along with their. associated scope selector... * `keyPath` The {String} name of the key to retrieve. * `options` (optional) {Object} see the `options` argument to {::get}.. Returns an {Array} of {Object}s with the following keys:.  * `scopeDescriptor` The {ScopeDescriptor} with which the value is associated.  * `value` The value for the key-path","keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.compare,654,656,"
  Section: Visibility
  .
  Section: Comparing to another cursor
  . Public: Compare this cursor's buffer position to another cursor's buffer position... See {Point::compare} for more details... * `otherCursor`{Cursor} to compare against",otherCursor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.onDidChangePaths,168,170,"
  Section: Event Subscription
  . Public: Invoke the given callback when the project paths change... * `callback` {Function} to be called after the project paths change..    * `projectPaths` An {Array} of {String} project paths... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration.js,Decoration.setProperties,164,173," Essential: Update the marker with new Properties. Allows you to change the decoration's class... ## Examples.. ```coffee. decoration.setProperties({type: 'line-number', class: 'my-new-class'}). ```.. * `newProperties` {Object} eg. `{type: 'line-number', class: 'my-new-class'}`","newProperties:number,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.onDidAddBuffer,179,181, Public: Invoke the given callback when a text buffer is added to the. project... * `callback` {Function} to be called when a text buffer is added..   * `buffer` A {TextBuffer} item... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/gutter.js,Gutter.decorateMarker,105,107," Essential: Add a decoration that tracks a {DisplayMarker}. When the marker moves,. is invalidated, or is destroyed, the decoration will be updated to reflect. the marker's state... ## Arguments.. * `marker` A {DisplayMarker} you want this decoration to follow.. * `decorationParams` An {Object} representing the decoration. It is passed.   to {TextEditor::decorateMarker} as its `decorationParams` and so supports.   all options documented there..   * `type` __Caveat__: set to `'line-number'` if this is the line-number.     gutter, `'gutter'` otherwise. This cannot be overridden... Returns a {Decoration} object",marker:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/context-menu.js,ContextMenu.createClickHandlers,15,32," It's necessary to build the event handlers in this process, otherwise. closures are dragged across processes and failed to be garbage collected. appropriately.",template:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js,TextEditorComponent.didKeydown,1672,1690," We need to get clever to detect when the accented character menu is. opened on macOS. Usually, every keydown event that could cause input is. followed by a corresponding keypress. However, pressing and holding. long enough to open the accented character menu causes additional keydown. events to fire that aren't followed by their own keypress and textInput. events... Therefore, we assume the accented character menu has been deployed if,. before observing any keyup event, we observe events in the following. sequence:.. keydown(code: X), keypress, keydown(code: X).. The code X must be the same in the keydown events that bracket the. keypress, meaning we're *holding* the _same_ key we intially pressed.. Got that?",event:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js,ThemeManager.onDidChangeActiveThemes,55,57,"
  Section: Event Subscription
  . Essential: Invoke `callback` when style sheet changes associated with. updating the list of active themes have completed... * `callback` {Function}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js,AutoUpdateManager.onUpdateError,162,173, noop callback to get async behavior,event:;message:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/gutter-container.js,GutterContainer.addGutterDecoration,99,107, The public interface is Gutter::decorateMarker or TextEditor::decorateMarker.,gutter:;marker:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.selectLeft,251,253, Public: Selects the text one position left of the cursor... * `columnCount` (optional) {Number} number of columns to select (default: 1),"columnCount:number,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/gutter-container.js,GutterContainer.removeGutter,85,96,"
  Section: Private Methods
  . Processes the destruction of the gutter. Throws an error if this gutter is. not within this gutterContainer.",gutter:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.selectLeft,251,253, Public: Selects the text one position left of the cursor... * `columnCount` (optional) {Number} number of columns to select (default: 1),"columnCount:number,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.insertText,451,513,"
  Section: Modifying the selected text
  . Public: Replaces text at the current selection... * `text` A {String} representing the text to add. * `options` (optional) {Object} with keys:.   * `select` If `true`, selects the newly added text..   * `autoIndent` If `true`, indents all inserted text appropriately..   * `autoIndentNewline` If `true`, indent newline appropriately..   * `autoDecreaseIndent` If `true`, decreases indent level appropriately.     (for example, when a closing bracket is inserted)..   * `preserveTrailingLineIndentation` By default, when pasting multiple.   lines, Atom attempts to preserve the relative indent level between the.   first line and trailing lines, even if the indent level of the first.   line has changed from the copied text. If this option is `true`, this.   behavior is suppressed..     level between the first lines and the trailing lines..   * `normalizeLineEndings` (optional) {Boolean} (default: true).   * `undo` *Deprecated* If `skip`, skips the undo stack for this operation. This property is deprecated. Call groupLastChanges() on the {TextBuffer} afterward instead..   * `bypassReadOnly` (optional) {Boolean} Must be `true` to modify a read-only editor. (default: false)","text:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.setVisible,991,996, Controls visibility based on the given {Boolean}.,visible:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.setVisible,991,996, Controls visibility based on the given {Boolean}.,visible:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.selectLeft,251,253, Public: Selects the text one position left of the cursor... * `columnCount` (optional) {Number} number of columns to select (default: 1),"columnCount:number,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.insertText,451,513,"
  Section: Modifying the selected text
  . Public: Replaces text at the current selection... * `text` A {String} representing the text to add. * `options` (optional) {Object} with keys:.   * `select` If `true`, selects the newly added text..   * `autoIndent` If `true`, indents all inserted text appropriately..   * `autoIndentNewline` If `true`, indent newline appropriately..   * `autoDecreaseIndent` If `true`, decreases indent level appropriately.     (for example, when a closing bracket is inserted)..   * `preserveTrailingLineIndentation` By default, when pasting multiple.   lines, Atom attempts to preserve the relative indent level between the.   first line and trailing lines, even if the indent level of the first.   line has changed from the copied text. If this option is `true`, this.   behavior is suppressed..     level between the first lines and the trailing lines..   * `normalizeLineEndings` (optional) {Boolean} (default: true).   * `undo` *Deprecated* If `skip`, skips the undo stack for this operation. This property is deprecated. Call groupLastChanges() on the {TextBuffer} afterward instead..   * `bypassReadOnly` (optional) {Boolean} Must be `true` to modify a read-only editor. (default: false)","text:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.flattenMenuItems,67,76, Flattens the given menu and submenu items into an single Array... menu - A complete menu configuration object for atom-shell's menu API... Returns an Array of native menu items.,"menu:array,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getCurrentLineBufferRange,623,625, Public: Returns the buffer Range for the current line... * `options` (optional) {Object}.   * `includeNewline` A {Boolean} which controls whether the Range should.     include the newline.,"options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getCurrentWordBufferRange,606,616," Public: Returns the buffer Range occupied by the word located under the cursor... * `options` (optional) {Object}.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp}).""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.flattenMenuItems,67,76, Flattens the given menu and submenu items into an single Array... menu - A complete menu configuration object for atom-shell's menu API... Returns an Array of native menu items.,"menu:array,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.flattenMenuTemplate,83,90, Flattens the given menu template into an single Array... template - An object describing the menu item... Returns an Array of native menu items.,"template:array,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/scope-descriptor.js,ScopeDescriptor.constructor,38,40,"
  Section: Construction and Destruction
  . Public: Create a {ScopeDescriptor} object... * `object` {Object}.   * `scopes` {Array} of {String}s","scopes:string,array"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getAheadBehindCount,254,256," Public: Returns the number of commits behind the current branch is from the. its upstream remote branch... * `reference` The {String} branch reference name.. * `path`      The {String} path in the repository to get this information for,.   only needed if the repository contains submodules.",reference:string;path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.getAll,613,643," Extended: Get all of the values for the given key-path, along with their. associated scope selector... * `keyPath` The {String} name of the key to retrieve. * `options` (optional) {Object} see the `options` argument to {::get}.. Returns an {Array} of {Object}s with the following keys:.  * `scopeDescriptor` The {ScopeDescriptor} with which the value is associated.  * `value` The value for the key-path","keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.getAll,613,643," Extended: Get all of the values for the given key-path, along with their. associated scope selector... * `keyPath` The {String} name of the key to retrieve. * `options` (optional) {Object} see the `options` argument to {::get}.. Returns an {Array} of {Object}s with the following keys:.  * `scopeDescriptor` The {ScopeDescriptor} with which the value is associated.  * `value` The value for the key-path","keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.isInsideWord,178,183," Public: Returns whether this cursor is between a word's start and end... * `options` (optional) {Object}.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp})... Returns a {Boolean}""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getEndOfCurrentWordBufferPosition,559,578," Public: Retrieves the buffer position of where the current word ends... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp}).   * `includeNonWordCharacters` A Boolean indicating whether to include.     non-word characters in the default word regex. Has no effect if.     wordRegex is set... Returns a {Range}.""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.resetUserSettings,936,938,"
  Section: Private methods managing global settings
  ",newSettings:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getConfigValue,276,278," Public: Returns the git configuration value specified by the key... * `key`  The {String} key for the configuration to lookup.. * `path` An optional {String} path in the repository to get this information.   for, only needed if the repository has submodules.","key:string;path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getBeginningOfCurrentWordBufferPosition,527,547," Public: Retrieves the buffer position of where the current word starts... * `options` (optional) An {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp})..   * `includeNonWordCharacters` A {Boolean} indicating whether to include.     non-word characters in the default word regex..     Has no effect if wordRegex is set..   * `allowPrevious` A {Boolean} indicating whether the beginning of the.     previous word can be returned... Returns a {Range}.""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getDiffStats,431,434,"
  Section: Retrieving Diffs
  . Public: Retrieves the number of lines added and removed to a path... This compares the working directory contents of the path to the `HEAD`. version... * `path` The {String} path to check... Returns an {Object} with the following keys:.   * `added` The {Number} of added lines..   * `deleted` The {Number} of deleted lines.","path:number,string"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/view-registry.js,ViewRegistry.getView,122,131," Essential: Get the view associated with an object in the workspace... If you're just *using* the workspace, you shouldn't need to access the view. layer, but view layer access may be necessary if you want to perform DOM. manipulation that isn't supported via the model API... ## View Resolution Algorithm.. The view associated with the object is resolved using the following. sequence..  1. Is the object an instance of `HTMLElement`? If true, return the object..  2. Does the object have a method named `getElement` that returns an.     instance of `HTMLElement`? If true, return that value..  3. Does the object have a property named `element` with a value which is.     an instance of `HTMLElement`? If true, return the property value..  4. Is the object a jQuery object, indicated by the presence of a `jquery`.     property? If true, return the root DOM element (i.e. `object[0]`)..  5. Has a view provider been registered for the object? If true, use the.     provider to create a view associated with the object, and return the.     view... If no associated view is returned by the sequence an error is thrown... Returns a DOM element.",object:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getLineDiffs,447,453, Public: Retrieves the line diffs comparing the `HEAD` version of the given. path and the given text... * `path` The {String} path relative to the repository.. * `text` The {String} to compare against the `HEAD` contents.. Returns an {Array} of hunk {Object}s with the following keys:.   * `oldStart` The line {Number} of the old hunk..   * `newStart` The line {Number} of the new hunk..   * `oldLines` The {Number} of lines in the old hunk..   * `newLines` The {Number} of lines in the new hunk,path:string;text:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getConfigValue,276,278," Public: Returns the git configuration value specified by the key... * `key`  The {String} key for the configuration to lookup.. * `path` An optional {String} path in the repository to get this information.   for, only needed if the repository has submodules.","key:string;path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getReferences,308,310," Public: Gets all the local and remote references... * `path` An optional {String} path in the repository to get this information.   for, only needed if the repository has submodules... Returns an {Object} with the following keys:.  * `heads`   An {Array} of head reference names..  * `remotes` An {Array} of remote reference names..  * `tags`    An {Array} of tag reference names.","path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getReferenceTarget,317,319, Public: Returns the current {String} SHA for the given reference... * `reference` The {String} reference to get the target of.. * `path` An optional {String} path in the repo to get the reference target.   for. Only needed if the repository contains submodules.,"reference:string,optional;path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getShortHead,227,229," Public: Retrieves a shortened version of the HEAD reference value... This removes the leading segments of `refs/heads`, `refs/tags`, or. `refs/remotes`.  It also shortens the SHA-1 of a detached `HEAD` to 7. characters... * `path` An optional {String} path in the repository to get this information.   for, only needed if the repository contains submodules... Returns a {String}.","path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getUpstreamBranch,295,297," Public: Returns the upstream branch for the current HEAD, or null if there. is no upstream branch for the current HEAD... * `path` An optional {String} path in the repo to get this information for,.   only needed if the repository contains submodules... Returns a {String} branch name such as `refs/remotes/origin/master`.","path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,Dock.pointWithinHoverArea,333,405," Determine whether the cursor is within the dock hover area. This isn't as simple as just using. mouseenter/leave because we want to be a little more forgiving. For example, if the cursor is. over the footer, we want to show the bottom dock's toggle button. Also note that our criteria. for detecting entry are different than detecting exit but, in order for us to avoid jitter, the. area considered when detecting exit MUST fully encompass the area considered when detecting. entry.",point:;detectingExit:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js,BufferedProcess.bufferStream,134,157,"
  Section: Helper Methods
  . Helper method to pass data line by line... * `stream` The Stream to read from.. * `onLines` The callback to call with each line of data.. * `onDone` The callback to call when the stream has closed.",stream:;onLines:;onDone:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js,BufferedProcess.bufferStream,134,157,"
  Section: Helper Methods
  . Helper method to pass data line by line... * `stream` The Stream to read from.. * `onLines` The callback to call with each line of data.. * `onDone` The callback to call when the stream has closed.",stream:;onLines:;onDone:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getReferenceTarget,317,319, Public: Returns the current {String} SHA for the given reference... * `reference` The {String} reference to get the target of.. * `path` An optional {String} path in the repo to get the reference target.   for. Only needed if the repository contains submodules.,"reference:string,optional;path:string,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/panel-container.js,PanelContainer.onDidAddPanel,34,36,"
  Section: Event Subscription
  ",callback:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.resetUserSettings,936,938,"
  Section: Private methods managing global settings
  ",newSettings:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/style-manager.js,StyleManager.onDidAddStyleElement,72,74," Extended: Invoke `callback` when a style element is added... * `callback` {Function} that is called with style elements..   * `styleElement` An `HTMLStyleElement` instance. The `.sheet` property.     will be null because this element isn't attached to the DOM. If you want.     to attach this element to the DOM, be sure to clone it first by calling.     `.cloneNode(true)` on it. The style element will also have the following.     non-standard properties:.     * `sourcePath` A {String} containing the path from which the style.       element was loaded..     * `context` A {String} indicating the target context of the style.       element... Returns a {Disposable} on which `.dispose()` can be called to cancel the. subscription.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/style-manager.js,StyleManager.onDidUpdateStyleElement,100,102, Extended: Invoke `callback` when an existing style element is updated... * `callback` {Function} that is called with style elements..   * `styleElement` An `HTMLStyleElement` instance. The `.sheet` property.      will be null because this element isn't attached to the DOM. The style.      element will also have the following non-standard properties:.     * `sourcePath` A {String} containing the path from which the style.       element was loaded..     * `context` A {String} indicating the target context of the style.       element... Returns a {Disposable} on which `.dispose()` can be called to cancel the. subscription.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/style-manager.js,StyleManager.onDidRemoveStyleElement,83,85, Extended: Invoke `callback` when a style element is removed... * `callback` {Function} that is called with style elements..   * `styleElement` An `HTMLStyleElement` instance... Returns a {Disposable} on which `.dispose()` can be called to cancel the. subscription.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/protocol-handler-installer.js,ProtocolHandlerInstaller.promptToBecomeProtocolClient,54,100, Do nothing,config:;notifications:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.ensureWritable,412,427," Private: Ensure that the {TextEditor} is not marked read-only before allowing a buffer modification to occur. if. the editor is read-only, require an explicit opt-in option to proceed (`bypassReadOnly`) or throw an Error.",methodName:;opts:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.clear,197,205,"
  Section: Modifying the selected range
  . Public: Clears the selection, moving the marker to the head... * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.intersectsWith,183,185, Public: Identifies if a selection intersects with another selection... * `otherSelection` A {Selection} to check against... Returns a {Boolean},otherSelection:;exclusive:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.intersectsWith,183,185, Public: Identifies if a selection intersects with another selection... * `otherSelection` A {Selection} to check against... Returns a {Boolean},otherSelection:;exclusive:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getCurrentLineBufferRange,623,625, Public: Returns the buffer Range for the current line... * `options` (optional) {Object}.   * `includeNewline` A {Boolean} which controls whether the Range should.     include the newline.,"options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.isStatusModified,406,406, Public: Returns true if the given status indicates modification... * `status` A {Number} representing the status... Returns a {Boolean} that's true if the `status` indicates modification.,status:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getPathStatus,374,390, Public: Get the status of a single path in the repository... * `path` A {String} repository-relative path... Returns a {Number} representing the status. This value can be passed to. {::isStatusModified} or {::isStatusNew} to get more information.,path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.isStatusNew,413,415, Public: Returns true if the given status indicates a new path... * `status` A {Number} representing the status... Returns a {Boolean} that's true if the `status` indicates a new path.,status:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getPathStatus,374,390, Public: Get the status of a single path in the repository... * `path` A {String} repository-relative path... Returns a {Number} representing the status. This value can be passed to. {::isStatusModified} or {::isStatusNew} to get more information.,path:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.isStatusModified,406,406, Public: Returns true if the given status indicates modification... * `status` A {Number} representing the status... Returns a {Boolean} that's true if the `status` indicates modification.,status:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.isStatusNew,413,415, Public: Returns true if the given status indicates a new path... * `status` A {Number} representing the status... Returns a {Boolean} that's true if the `status` indicates a new path.,status:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.isSubmodule,236,246, Public: Is the given path a submodule in the repository?.. * `path` The {String} path to check... Returns a {Boolean}.,filePath:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration.js,Decoration.isType,49,68," Private: Check if the `decorationProperties.type` matches `type`.. * `decorationProperties` {Object} eg. `{type: 'line-number', class: 'my-new-class'}`. * `type` {String} type like `'line-number'`, `'line'`, etc. `type` can also.   be an {Array} of {String}s, where it will return true if the decoration's.   type matches any in the array... Returns {Boolean}. Note: 'line-number' is a special subtype of the 'gutter' type. I.e., a. 'line-number' is a 'gutter', but a 'gutter' is not a 'line-number'.","decorationProperties:number,object;type:number,object,string,array"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/notification-manager.js,NotificationManager.addError,153,155," Public: Add an error notification... * `message` A {String} message. * `options` (optional) An options {Object} with the following keys:.    * `buttons` (optional) An {Array} of {Object} where each {Object} has.      the following options:.      * `className` (optional) {String} a class name to add to the button's.        default class name (`btn btn-error`)..      * `onDidClick` (optional) {Function} callback to call when the button.        has been clicked. The context will be set to the.        {NotificationElement} instance..      * `text` {String} inner text for the button.    * `description` (optional) A Markdown {String} containing a longer.      description about the notification. By default, this **will not**.      preserve newlines and whitespace when it is rendered..    * `detail` (optional) A plain-text {String} containing additional.      details about the notification. By default, this **will** preserve.      newlines and whitespace when it is rendered..    * `dismissable` (optional) A {Boolean} indicating whether this.      notification can be dismissed by the user. Defaults to `false`..    * `icon` (optional) A {String} name of an icon from Octicons to display.      in the notification header. Defaults to `'flame'`..    * `stack` (optional) A preformatted {String} with stack trace.      information describing the location of the error... Returns the {Notification} that was added.","message:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/notification-manager.js,NotificationManager.addError,153,155," Public: Add an error notification... * `message` A {String} message. * `options` (optional) An options {Object} with the following keys:.    * `buttons` (optional) An {Array} of {Object} where each {Object} has.      the following options:.      * `className` (optional) {String} a class name to add to the button's.        default class name (`btn btn-error`)..      * `onDidClick` (optional) {Function} callback to call when the button.        has been clicked. The context will be set to the.        {NotificationElement} instance..      * `text` {String} inner text for the button.    * `description` (optional) A Markdown {String} containing a longer.      description about the notification. By default, this **will not**.      preserve newlines and whitespace when it is rendered..    * `detail` (optional) A plain-text {String} containing additional.      details about the notification. By default, this **will** preserve.      newlines and whitespace when it is rendered..    * `dismissable` (optional) A {Boolean} indicating whether this.      notification can be dismissed by the user. Defaults to `false`..    * `icon` (optional) A {String} name of an icon from Octicons to display.      in the notification header. Defaults to `'flame'`..    * `stack` (optional) A preformatted {String} with stack trace.      information describing the location of the error... Returns the {Notification} that was added.","message:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.getSchema,783,805," Extended: Retrieve the schema for a specific key path. The schema will tell. you what type the keyPath expects, and other metadata about the config. option... * `keyPath` The {String} name of the key... Returns an {Object} eg. `{type: 'integer', default: 23, minimum: 1}`.. Returns `null` when the keyPath has no schema specified, but is accessible. from the root schema.",keyPath:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selectors.js,parse,10,14," Private: Parse a selector into parts..          If already parsed, returns the selector unmodified... * `selector` a {String|Array<String>} specifying what to match. Returns selector parts, an {Array<String>}.","selector:string,array"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/menu-helpers.js,addItemToMenu,6,12," Add an item to a menu, ensuring separators are not duplicated.",item:;menu:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getBeginningOfNextWordBufferPosition,587,599," Public: Retrieves the buffer position of where the next word starts... * `options` (optional) {Object}.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp})... Returns a {Range}""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getBeginningOfCurrentWordBufferPosition,527,547," Public: Retrieves the buffer position of where the current word starts... * `options` (optional) An {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp})..   * `includeNonWordCharacters` A {Boolean} indicating whether to include.     non-word characters in the default word regex..     Has no effect if wordRegex is set..   * `allowPrevious` A {Boolean} indicating whether the beginning of the.     previous word can be returned... Returns a {Range}.""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getEndOfCurrentWordBufferPosition,559,578," Public: Retrieves the buffer position of where the current word ends... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp}).   * `includeNonWordCharacters` A Boolean indicating whether to include.     non-word characters in the default word regex. Has no effect if.     wordRegex is set... Returns a {Range}.""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getNextWordBoundaryBufferPosition,493,513," Public: Returns buffer position of the next word boundary. It might be on. the current word, or the previous word... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp})""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getNextWordBoundaryBufferPosition,493,513," Public: Returns buffer position of the next word boundary. It might be on. the current word, or the previous word... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp})""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getPreviousWordBoundaryBufferPosition,463,485,"
  Section: Local Positions and Ranges
  . Public: Returns buffer position of previous word boundary. It might be on. the current word, or the previous word... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp})""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getPreviousWordBoundaryBufferPosition,463,485,"
  Section: Local Positions and Ranges
  . Public: Returns buffer position of previous word boundary. It might be on. the current word, or the previous word... * `options` (optional) {Object} with the following keys:.   * `wordRegex` A {RegExp} indicating what constitutes a word"".      (default: {::wordRegExp})""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setScreenPosition,66,70,"
  Section: Managing Cursor Position
  . Public: Moves a cursor to a given screen position... * `screenPosition` {Array} of two numbers: the screen row, and the screen column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever.     the cursor moves to.","screenPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.onDidAddBuffer,179,181, Public: Invoke the given callback when a text buffer is added to the. project... * `callback` {Function} to be called when a text buffer is added..   * `buffer` A {TextBuffer} item... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidAddCursor,845,847, Extended: Calls your `callback` when a {Cursor} is added to the editor... * `callback` {Function}.   * `cursor` {Cursor} that was added.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidChangeGrammar,759,763, Extended: Calls your `callback` when the grammar that interprets and. colorizes the text has been changed... * `callback` {Function}.   * `grammar` {Grammar}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.get,585,602,"
  Section: Managing Settings
  . Essential: Retrieves the setting for the given key... ### Examples.. You might want to know what themes are enabled, so check `core.themes`.. ```coffee. atom.config.get('core.themes'). ```.. With scope descriptors you can get settings within a specific editor. scope. For example, you might want to know `editor.tabLength` for ruby. files... ```coffee. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. ```.. This setting in ruby files might be different than the global tabLength setting.. ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. ```.. You can get the language scope descriptor via. {TextEditor::getRootScopeDescriptor}. This will get the setting specifically. for the editor's language... ```coffee. atom.config.get('editor.tabLength', scope: @editor.getRootScopeDescriptor()) # => 2. ```.. Additionally, you can get the setting at the specific cursor position... ```coffee. scopeDescriptor = @editor.getLastCursor().getScopeDescriptor(). atom.config.get('editor.tabLength', scope: scopeDescriptor) # => 2. ```.. * `keyPath` The {String} name of the key to retrieve.. * `options` (optional) {Object}.   * `sources` (optional) {Array} of {String} source names. If provided, only.     values that were associated with these sources during {::set} will be used..   * `excludeSources` (optional) {Array} of {String} source names. If provided,.     values that  were associated with these sources during {::set} will not.     be used..   * `scope` (optional) {ScopeDescriptor} describing a path from.     the root of the syntax tree to a token. Get one by calling.     {editor.getLastCursor().getScopeDescriptor()}.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information... Returns the value from Atom's default settings, the user's configuration. file in the type specified by the configuration schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.get,585,602,"
  Section: Managing Settings
  . Essential: Retrieves the setting for the given key... ### Examples.. You might want to know what themes are enabled, so check `core.themes`.. ```coffee. atom.config.get('core.themes'). ```.. With scope descriptors you can get settings within a specific editor. scope. For example, you might want to know `editor.tabLength` for ruby. files... ```coffee. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. ```.. This setting in ruby files might be different than the global tabLength setting.. ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. ```.. You can get the language scope descriptor via. {TextEditor::getRootScopeDescriptor}. This will get the setting specifically. for the editor's language... ```coffee. atom.config.get('editor.tabLength', scope: @editor.getRootScopeDescriptor()) # => 2. ```.. Additionally, you can get the setting at the specific cursor position... ```coffee. scopeDescriptor = @editor.getLastCursor().getScopeDescriptor(). atom.config.get('editor.tabLength', scope: scopeDescriptor) # => 2. ```.. * `keyPath` The {String} name of the key to retrieve.. * `options` (optional) {Object}.   * `sources` (optional) {Array} of {String} source names. If provided, only.     values that were associated with these sources during {::set} will be used..   * `excludeSources` (optional) {Array} of {String} source names. If provided,.     values that  were associated with these sources during {::set} will not.     be used..   * `scope` (optional) {ScopeDescriptor} describing a path from.     the root of the syntax tree to a token. Get one by calling.     {editor.getLastCursor().getScopeDescriptor()}.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information... Returns the value from Atom's default settings, the user's configuration. file in the type specified by the configuration schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidAddSelection,877,879, Extended: Calls your `callback` when a {Selection} is added to the editor... * `callback` {Function}.   * `selection` {Selection} that was added.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/style-manager.js,StyleManager.onDidAddStyleElement,72,74," Extended: Invoke `callback` when a style element is added... * `callback` {Function} that is called with style elements..   * `styleElement` An `HTMLStyleElement` instance. The `.sheet` property.     will be null because this element isn't attached to the DOM. If you want.     to attach this element to the DOM, be sure to clone it first by calling.     `.cloneNode(true)` on it. The style element will also have the following.     non-standard properties:.     * `sourcePath` A {String} containing the path from which the style.       element was loaded..     * `context` A {String} indicating the target context of the style.       element... Returns a {Disposable} on which `.dispose()` can be called to cancel the. subscription.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-center.js,WorkspaceCenter.onDidAddTextEditor,241,247, Extended: Invoke the given callback when a text editor is added to the. workspace center... * `callback` {Function} to be called when panes are added..   * `event` {Object} with the following keys:.     * `textEditor` {TextEditor} that was added..     * `pane` {Pane} containing the added text editor..     * `index` {Number} indicating the index of the added text editor in its.        pane... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,Dock.onDidChangeVisible,444,446,"
  Section: Event Subscription
  . Essential: Invoke the given callback when the visibility of the dock changes... * `callback` {Function} to be called when the visibility changes..   * `visible` {Boolean} Is the dock now visible?.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-center.js,WorkspaceCenter.onDidAddPaneItem,197,199, Extended: Invoke the given callback when a pane item is added to the. workspace center... * `callback` {Function} to be called when pane items are added..   * `event` {Object} with the following keys:.     * `item` The added pane item..     * `pane` {Pane} containing the added item..     * `index` {Number} indicating the index of the added item in its pane... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidConflict,780,782, Extended: Calls your `callback` when the buffer's underlying file changes on. disk at a moment when the result of {::isModified} is true... * `callback` {Function}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidSave,814,816, Essential: Invoke the given callback after the buffer is saved to disk... * `callback` {Function} to be called after the buffer is saved..   * `event` {Object} with the following keys:.     * `path` The path to which the buffer was saved... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidStopChanging,685,687, Essential: Invoke `callback` when the buffer's contents change. It is. emit asynchronously 300ms after the last buffer change. This is a good place. to handle changes to the buffer without compromising typing performance... * `callback` {Function}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/core-uri-handlers.js,getLineColNumber,3,6, Converts a query string parameter for a line or column number. to a zero-based line or column number for the Atom API.,numStr:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/core-uri-handlers.js,getLineColNumber,3,6, Converts a query string parameter for a line or column number. to a zero-based line or column number for the Atom API.,numStr:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window.js,window.measure,8,14, Public: Measure how long a function takes to run... description - A {String} description that will be logged to the console when.               the function completes.. fn - A {Function} to measure the duration of... Returns the value returned by the given function.,description:string;fn:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/notification-manager.js,NotificationManager.addInfo,95,97," Public: Add an informational notification... * `message` A {String} message. * `options` (optional) An options {Object} with the following keys:.    * `buttons` (optional) An {Array} of {Object} where each {Object} has.      the following options:.      * `className` (optional) {String} a class name to add to the button's.        default class name (`btn btn-info`)..      * `onDidClick` (optional) {Function} callback to call when the button.        has been clicked. The context will be set to the.        {NotificationElement} instance..      * `text` {String} inner text for the button.    * `description` (optional) A Markdown {String} containing a longer.      description about the notification. By default, this **will not**.      preserve newlines and whitespace when it is rendered..    * `detail` (optional) A plain-text {String} containing additional.      details about the notification. By default, this **will** preserve.      newlines and whitespace when it is rendered..    * `dismissable` (optional) A {Boolean} indicating whether this.      notification can be dismissed by the user. Defaults to `false`..    * `icon` (optional) A {String} name of an icon from Octicons to display.      in the notification header. Defaults to `'info'`... Returns the {Notification} that was added.","message:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.set,687,722," Essential: Sets the value for a configuration setting... This value is stored in Atom's internal configuration file... ### Examples.. You might want to change the themes programmatically:.. ```coffee. atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax']). ```.. You can also set scoped settings. For example, you might want change the. `editor.tabLength` only for ruby files... ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4.. # Set ruby to 2. atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true.. # Notice it's only set to 2 in the case of ruby. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4. ```.. * `keyPath` The {String} name of the key.. * `value` The value of the setting. Passing `undefined` will revert the.   setting to the default value.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. eg. '.source.ruby'.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information..   * `source` (optional) {String} The name of a file with which the setting.     is associated. Defaults to the user's config file... Returns a {Boolean}. * `true` if the value was set.. * `false` if the value was not able to be coerced to the type specified in the setting's schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.md5,31,33, Creates an `md5` hash of some text... * `text` A {String} to hash... Returns a hashed {String}.,text:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.getRepo,524,530, Returns the corresponding {Repository},path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js,GitRepository.relativize,208,210, Public: Makes a path relative to the repository's working directory.,path:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js,ThemeManager.requireStylesheet,167,175,"
  Section: Private
  . Resolve and apply the stylesheet specified by the path... This supports both CSS and Less stylesheets... * `stylesheetPath` A {String} path to the stylesheet that can be an absolute.   path or a relative path that will be resolved against the load path... Returns a {Disposable} on which `.dispose()` can be called to remove the. required stylesheet.",stylesheetPath:string;priority:;skipDeprecatedSelectorsTransformation:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.set,687,722," Essential: Sets the value for a configuration setting... This value is stored in Atom's internal configuration file... ### Examples.. You might want to change the themes programmatically:.. ```coffee. atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax']). ```.. You can also set scoped settings. For example, you might want change the. `editor.tabLength` only for ruby files... ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4.. # Set ruby to 2. atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true.. # Notice it's only set to 2 in the case of ruby. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4. ```.. * `keyPath` The {String} name of the key.. * `value` The value of the setting. Passing `undefined` will revert the.   setting to the default value.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. eg. '.source.ruby'.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information..   * `source` (optional) {String} The name of a file with which the setting.     is associated. Defaults to the user's config file... Returns a {Boolean}. * `true` if the value was set.. * `false` if the value was not able to be coerced to the type specified in the setting's schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,isItemAllowed,858,861, Is the item allowed in the given location?,item:;location:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.priorityForSource,1200,1209,"
  Section: Private Scoped Settings
  ",source:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.transact,816,823," Extended: Suppress calls to handler functions registered with {::onDidChange}. and {::observe} for the duration of `callback`. After `callback` executes,. handlers will be called once if the value for their key-path has changed... * `callback` {Function} to execute while suppressing calls to handlers.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/view-registry.js,ViewRegistry.getView,122,131," Essential: Get the view associated with an object in the workspace... If you're just *using* the workspace, you shouldn't need to access the view. layer, but view layer access may be necessary if you want to perform DOM. manipulation that isn't supported via the model API... ## View Resolution Algorithm.. The view associated with the object is resolved using the following. sequence..  1. Is the object an instance of `HTMLElement`? If true, return the object..  2. Does the object have a method named `getElement` that returns an.     instance of `HTMLElement`? If true, return that value..  3. Does the object have a property named `element` with a value which is.     an instance of `HTMLElement`? If true, return the property value..  4. Is the object a jQuery object, indicated by the presence of a `jquery`.     property? If true, return the root DOM element (i.e. `object[0]`)..  5. Has a view provider been registered for the object? If true, use the.     provider to create a view associated with the object, and return the.     view... If no associated view is returned by the sequence an error is thrown... Returns a DOM element.",object:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selectors.js,matcherForSelector,23,29," Essential: Return a matcher function for a selector... * selector, a {String} selector. Returns {(scope: String) -> Boolean}, a matcher function returning. true iff the scope matches the selector.",selector:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getCurrentWordBufferRange,606,616," Public: Returns the buffer Range occupied by the word located under the cursor... * `options` (optional) {Object}.   * `wordRegex` A {RegExp} indicating what constitutes a word"".     (default: {::wordRegExp}).""","options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.showUpdateMenuItem,109,140, Sets the proper visible state the update menu items,state:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/view-registry.js,ViewRegistry.getView,122,131," Essential: Get the view associated with an object in the workspace... If you're just *using* the workspace, you shouldn't need to access the view. layer, but view layer access may be necessary if you want to perform DOM. manipulation that isn't supported via the model API... ## View Resolution Algorithm.. The view associated with the object is resolved using the following. sequence..  1. Is the object an instance of `HTMLElement`? If true, return the object..  2. Does the object have a method named `getElement` that returns an.     instance of `HTMLElement`? If true, return that value..  3. Does the object have a property named `element` with a value which is.     an instance of `HTMLElement`? If true, return the property value..  4. Is the object a jQuery object, indicated by the presence of a `jquery`.     property? If true, return the root DOM element (i.e. `object[0]`)..  5. Has a view provider been registered for the object? If true, use the.     provider to create a view associated with the object, and return the.     view... If no associated view is returned by the sequence an error is thrown... Returns a DOM element.",object:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.transact,816,823," Extended: Suppress calls to handler functions registered with {::onDidChange}. and {::observe} for the duration of `callback`. After `callback` executes,. handlers will be called once if the value for their key-path has changed... * `callback` {Function} to execute while suppressing calls to handlers.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration.js,translateDecorationParamsOldToNew,8,13, Applies changes to a decorationsParam {Object} to make it possible to. differentiate decorations on custom gutters versus the line-number gutter.,decorationParams:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.priorityForSource,1200,1209,"
  Section: Private Scoped Settings
  ",source:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.transact,816,823," Extended: Suppress calls to handler functions registered with {::onDidChange}. and {::observe} for the duration of `callback`. After `callback` executes,. handlers will be called once if the value for their key-path has changed... * `callback` {Function} to execute while suppressing calls to handlers.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.setScopedDefaultsFromSchema,1131,1151, `schema` will look something like this.. ```coffee. type: 'string'. default: 'ok'. scopes:.   '.source.js':.     default: 'omg'. ```,keyPath:;schema:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js,Selection.setBufferRange,92,104," Public: Modifies the buffer {Range} for the selection... * `bufferRange` The new {Range} to select.. * `options` (optional) {Object} with the keys:.   * `preserveFolds` if `true`, the fold settings are preserved after the.     selection moves..   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     range. Defaults to `true` if this is the most recently added selection,.     `false` otherwise.","bufferRange:;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.flattenMenuItems,67,76, Flattens the given menu and submenu items into an single Array... menu - A complete menu configuration object for atom-shell's menu API... Returns an Array of native menu items.,"menu:array,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.getCurrentLineBufferRange,623,625, Public: Returns the buffer Range for the current line... * `options` (optional) {Object}.   * `includeNewline` A {Boolean} which controls whether the Range should.     include the newline.,"options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js,Cursor.setBufferPosition,84,88," Public: Moves a cursor to a given buffer position... * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.. * `options` (optional) {Object} with the following keys:.   * `autoscroll` {Boolean} indicating whether to autoscroll to the new.     position. Defaults to `true` if this is the most recently added cursor,.     `false` otherwise.","bufferPosition:number,array;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js,BufferedProcess.spawnWithEscapedWindowsArgs,79,103, Windows has a bunch of special rules that node still doesn't take care of for you,command:;args:;options:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.replace,82,99, Layers the contents of a project's file's config. on top of the current global config.,projectSpecification:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidSave,814,816, Essential: Invoke the given callback after the buffer is saved to disk... * `callback` {Function} to be called after the buffer is saved..   * `event` {Object} with the following keys:.     * `path` The path to which the buffer was saved... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.onDidChangeEncoding,735,737, Extended: Calls your `callback` when the buffer's encoding has changed... * `callback` {Function}.. Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.,callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js,Project.onDidChangePaths,168,170,"
  Section: Event Subscription
  . Public: Invoke the given callback when the project paths change... * `callback` {Function} to be called after the project paths change..    * `projectPaths` An {Array} of {String} project paths... Returns a {Disposable} on which `.dispose()` can be called to unsubscribe.",callback:function
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.flattenMenuTemplate,83,90, Flattens the given menu template into an single Array... template - An object describing the menu item... Returns an Array of native menu items.,"template:array,object"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.set,687,722," Essential: Sets the value for a configuration setting... This value is stored in Atom's internal configuration file... ### Examples.. You might want to change the themes programmatically:.. ```coffee. atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax']). ```.. You can also set scoped settings. For example, you might want change the. `editor.tabLength` only for ruby files... ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4.. # Set ruby to 2. atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true.. # Notice it's only set to 2 in the case of ruby. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4. ```.. * `keyPath` The {String} name of the key.. * `value` The value of the setting. Passing `undefined` will revert the.   setting to the default value.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. eg. '.source.ruby'.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information..   * `source` (optional) {String} The name of a file with which the setting.     is associated. Defaults to the user's config file... Returns a {Boolean}. * `true` if the value was set.. * `false` if the value was not able to be coerced to the type specified in the setting's schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.priorityForSource,1200,1209,"
  Section: Private Scoped Settings
  ",source:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.unset,730,766, Essential: Restore the setting at `keyPath` to its default value... * `keyPath` The {String} name of the key.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. See {::set}.   * `source` (optional) {String}. See {::set},"keyPath:string;options:object,optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.set,687,722," Essential: Sets the value for a configuration setting... This value is stored in Atom's internal configuration file... ### Examples.. You might want to change the themes programmatically:.. ```coffee. atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax']). ```.. You can also set scoped settings. For example, you might want change the. `editor.tabLength` only for ruby files... ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4.. # Set ruby to 2. atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true.. # Notice it's only set to 2 in the case of ruby. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4. ```.. * `keyPath` The {String} name of the key.. * `value` The value of the setting. Passing `undefined` will revert the.   setting to the default value.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. eg. '.source.ruby'.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information..   * `source` (optional) {String} The name of a file with which the setting.     is associated. Defaults to the user's config file... Returns a {Boolean}. * `true` if the value was set.. * `false` if the value was not able to be coerced to the type specified in the setting's schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js,Config.set,687,722," Essential: Sets the value for a configuration setting... This value is stored in Atom's internal configuration file... ### Examples.. You might want to change the themes programmatically:.. ```coffee. atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax']). ```.. You can also set scoped settings. For example, you might want change the. `editor.tabLength` only for ruby files... ```coffee. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4.. # Set ruby to 2. atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true.. # Notice it's only set to 2 in the case of ruby. atom.config.get('editor.tabLength') # => 4. atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2. atom.config.get('editor.tabLength', scope: ['source.js']) # => 4. ```.. * `keyPath` The {String} name of the key.. * `value` The value of the setting. Passing `undefined` will revert the.   setting to the default value.. * `options` (optional) {Object}.   * `scopeSelector` (optional) {String}. eg. '.source.ruby'.     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/).     for more information..   * `source` (optional) {String} The name of a file with which the setting.     is associated. Defaults to the user's config file... Returns a {Boolean}. * `true` if the value was set.. * `false` if the value was not able to be coerced to the type specified in the setting's schema.",args:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.translateTemplate,198,211, Combines a menu template with the appropriate keystroke... template - An Object conforming to atom-shell's menu api but lacking.            accelerator and click properties.. keystrokesByCommand - An Object where the keys are commands and the values.                       are Arrays containing the keystroke... Returns a complete menu configuration object for atom-shell's menu API.,template:object;keystrokesByCommand:object
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/application-menu.js,ApplicationMenu.substituteVersion,103,106, Replaces VERSION with the current version.,template:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js,TextEditorRegistry.remove,122,126, Remove a `TextEditor`... * `editor` The editor to remove... Returns a {Boolean} indicating whether the editor was successfully removed.,editor:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js,Dock.pointWithinHoverArea,333,405," Determine whether the cursor is within the dock hover area. This isn't as simple as just using. mouseenter/leave because we want to be a little more forgiving. For example, if the cursor is. over the footer, we want to show the bottom dock's toggle button. Also note that our criteria. for detecting entry are different than detecting exit but, in order for us to avoid jitter, the. area considered when detecting exit MUST fully encompass the area considered when detecting. entry.",point:;detectingExit:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.setEditorWidthInChars,1068,1068, Set the number of characters that can be displayed horizontally in the. editor... * `editorWidthInChars` A {Number} representing the width of the. {TextEditorElement} in characters.,editorWidthInChars:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js,TextEditorComponent.populateVisibleRowRange,2896,2908, Ensure the spatial index is populated with rows that are currently visible,renderedStartRow:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js,TextEditor.setEditorWidthInChars,1068,1068, Set the number of characters that can be displayed horizontally in the. editor... * `editorWidthInChars` A {Number} representing the width of the. {TextEditorElement} in characters.,editorWidthInChars:number
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js,TextEditorComponent.populateVisibleRowRange,2896,2908, Ensure the spatial index is populated with rows that are currently visible,renderedStartRow:
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js,Color.parse,14,36," Essential: Parse a {String} or {Object} into a {Color}... * `value` A {String} such as `'white'`, `#ff00ff`, or.   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,.   and `alpha` properties... Returns a {Color} or `null` if it cannot be parsed.",value:string
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.write,42,46, Public: Write the given text to the clipboard... The metadata associated with the text is available by calling. {::readWithMetadata}... * `text` The {String} to store.. * `metadata` (optional) The additional info to associate with the text.,"text:string,optional;metadata:optional"
E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js,Clipboard.md5,31,33, Creates an `md5` hash of some text... * `text` A {String} to hash... Returns a hashed {String}.,text:string
