[
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-element.js",
            "name": "didFocus",
            "line": 36,
            "func_location": "TextEditorElement.createdCallback.(unnamed_function_1)",
            "func_start_line": 36,
            "func_end_line": 36,
            "args": [
                "event"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.didFocus",
            "start_line": 1476,
            "end_line": 1495,
            "comment": [
                " Called by TextEditorElement so that focus events can be handled before",
                " the element is attached to the DOM."
            ],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "emitWindowEvent",
            "line": 39,
            "func_location": "AutoUpdateManager.initialize.(unnamed_function_1)",
            "func_start_line": 37,
            "func_end_line": 41,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.emitWindowEvent",
            "start_line": 97,
            "end_line": 101,
            "comment": [],
            "params": [
                "eventName",
                "payload"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "setRawScopedValue",
            "line": 1191,
            "func_location": "Config.resetSettingsForSchemaChange.(unnamed_function_14)",
            "func_start_line": 1184,
            "func_end_line": 1193,
            "args": [
                {
                    "type": "object"
                },
                "settings",
                "source",
                "scopeSelector"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.setRawScopedValue",
            "start_line": 1231,
            "end_line": 1242,
            "comment": [],
            "params": [
                "keyPath",
                "value",
                "source",
                "selector",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/win-powershell.js",
            "name": "replace",
            "line": 42,
            "func_location": "(unnamed_function_1).(unnamed_function_2)",
            "func_start_line": 37,
            "func_end_line": 44,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/package.js",
            "name": "handleError",
            "line": 140,
            "func_location": "Package.load.(unnamed_function_2)",
            "func_start_line": 123,
            "func_end_line": 142,
            "args": [
                null,
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleError",
            "start_line": 297,
            "end_line": 312,
            "comment": [],
            "params": [
                "error"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-package.js",
            "name": "handleError",
            "line": 47,
            "func_location": "ThemePackage.activate.(unnamed_function_1).(unnamed_function_2)",
            "func_start_line": 42,
            "func_end_line": 49,
            "args": [
                null,
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleError",
            "start_line": 297,
            "end_line": 312,
            "comment": [],
            "params": [
                "error"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "emitWindowEvent",
            "line": 47,
            "func_location": "AutoUpdateManager.initialize.(unnamed_function_2)",
            "func_start_line": 45,
            "func_end_line": 48,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.emitWindowEvent",
            "start_line": 97,
            "end_line": 101,
            "comment": [],
            "params": [
                "eventName",
                "payload"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "autoscrollOnMouseDrag",
            "line": 1815,
            "func_location": "didDrag.(unnamed_function_26)",
            "func_start_line": 1814,
            "func_end_line": 1819,
            "args": [
                "event"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.autoscrollOnMouseDrag",
            "start_line": 1922,
            "end_line": 1959,
            "comment": [],
            "params": [
                [
                    "clientX",
                    "clientY"
                ],
                "verticalOnly"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1818,
            "func_location": "didDrag.(unnamed_function_26)",
            "func_start_line": 1814,
            "func_end_line": 1819,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1823,
            "func_location": "didStopDragging.(unnamed_function_27)",
            "func_start_line": 1820,
            "func_end_line": 1824,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1877,
            "func_location": "didDrag.(unnamed_function_28)",
            "func_start_line": 1868,
            "func_end_line": 1878,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1881,
            "func_location": "didStopDragging.(unnamed_function_29)",
            "func_start_line": 1879,
            "func_end_line": 1882,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/package.js",
            "name": "handleError",
            "line": 184,
            "func_location": "Package.initializeIfNeeded.(unnamed_function_3)",
            "func_start_line": 172,
            "func_end_line": 186,
            "args": [
                null,
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleError",
            "start_line": 297,
            "end_line": 312,
            "comment": [],
            "params": [
                "error"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "emitWindowEvent",
            "line": 52,
            "func_location": "AutoUpdateManager.initialize.(unnamed_function_3)",
            "func_start_line": 50,
            "func_end_line": 53,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.emitWindowEvent",
            "start_line": 97,
            "end_line": 101,
            "comment": [],
            "params": [
                "eventName",
                "payload"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2535,
            "func_location": "TextEditorComponent.addBlockDecoration.didUpdateDisposable.(unnamed_function_37)",
            "func_start_line": 2526,
            "func_end_line": 2543,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2541,
            "func_location": "TextEditorComponent.addBlockDecoration.didUpdateDisposable.(unnamed_function_37)",
            "func_start_line": 2526,
            "func_end_line": 2543,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2556,
            "func_location": "TextEditorComponent.addBlockDecoration.didDestroyDisposable.(unnamed_function_38)",
            "func_start_line": 2545,
            "func_end_line": 2558,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/state-store.js",
            "name": "error",
            "line": 24,
            "func_location": "StateStore.get.(unnamed_function_1).(unnamed_function_4)",
            "func_start_line": 23,
            "func_end_line": 27,
            "args": [
                {
                    "type": "string"
                },
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.error",
            "start_line": 86,
            "end_line": 89,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/storage-folder.js",
            "name": "warn",
            "line": 27,
            "func_location": "StorageFolder.load.(unnamed_function_3).(unnamed_function_4)",
            "func_start_line": 25,
            "func_end_line": 38,
            "args": [
                null,
                "error.stack",
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/storage-folder.js",
            "name": "warn",
            "line": 35,
            "func_location": "StorageFolder.load.(unnamed_function_3).(unnamed_function_4)",
            "func_start_line": 25,
            "func_end_line": 38,
            "args": [
                null,
                "error.stack",
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "emitWindowEvent",
            "line": 61,
            "func_location": "AutoUpdateManager.initialize.(unnamed_function_4)",
            "func_start_line": 55,
            "func_end_line": 63,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.emitWindowEvent",
            "start_line": 97,
            "end_line": 101,
            "comment": [],
            "params": [
                "eventName",
                "payload"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3858,
            "func_location": "LinesTileComponent.updateBlockDecorations.(unnamed_function_47)",
            "func_start_line": 3849,
            "func_end_line": 3860,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "setBufferPosition",
            "line": 238,
            "func_location": "Selection.selectToBufferPosition.(unnamed_function_5)",
            "func_start_line": 238,
            "func_end_line": 238,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/package.js",
            "name": "handleError",
            "line": 203,
            "func_location": "Package.activate.(unnamed_function_4).(unnamed_function_5)",
            "func_start_line": 194,
            "func_end_line": 205,
            "args": [
                null,
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleError",
            "start_line": 297,
            "end_line": 312,
            "comment": [],
            "params": [
                "error"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "pointWithinHoverArea",
            "line": 200,
            "func_location": "WorkspaceElement.updateHoveredDock.nextHoveredDock.(unnamed_function_5)",
            "func_start_line": 200,
            "func_end_line": 200,
            "args": [
                "mousePosition"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/dock.js",
            "name": "Dock.pointWithinHoverArea",
            "start_line": 333,
            "end_line": 405,
            "comment": [
                " Determine whether the cursor is within the dock hover area. This isn't as simple as just using",
                " mouseenter/leave because we want to be a little more forgiving. For example, if the cursor is",
                " over the footer, we want to show the bottom dock's toggle button. Also note that our criteria",
                " for detecting entry are different than detecting exit but, in order for us to avoid jitter, the",
                " area considered when detecting exit MUST fully encompass the area considered when detecting",
                " entry."
            ],
            "params": [
                "point",
                "detectingExit"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "moveRight",
            "line": 245,
            "func_location": "Selection.selectRight.(unnamed_function_6)",
            "func_start_line": 245,
            "func_end_line": 245,
            "args": [
                "columnCount"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.moveRight",
            "start_line": 305,
            "end_line": 327,
            "comment": [
                " Public: Moves the cursor right one screen column.",
                "",
                " * `columnCount` (optional) {Number} number of columns to move (default: 1)",
                " * `options` (optional) {Object} with the following keys:",
                "   * `moveToEndOfSelection` if true, move to the right of the selection if a",
                "     selection exists."
            ],
            "params": [
                "columnCount",
                [
                    "moveToEndOfSelection"
                ]
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "moveLeft",
            "line": 252,
            "func_location": "Selection.selectLeft.(unnamed_function_7)",
            "func_start_line": 252,
            "func_end_line": 252,
            "args": [
                "columnCount"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.moveLeft",
            "start_line": 281,
            "end_line": 297,
            "comment": [
                " Public: Moves the cursor left one screen column.",
                "",
                " * `columnCount` (optional) {Number} number of columns to move (default: 1)",
                " * `options` (optional) {Object} with the following keys:",
                "   * `moveToEndOfSelection` if true, move to the left of the selection if a",
                "     selection exists."
            ],
            "params": [
                "columnCount",
                [
                    "moveToEndOfSelection"
                ]
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "resetSettingsForSchemaChange",
            "line": 919,
            "func_location": "Config.setSchema.(unnamed_function_7)",
            "func_start_line": 916,
            "func_end_line": 920,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.resetSettingsForSchemaChange",
            "start_line": 1182,
            "end_line": 1194,
            "comment": [
                " When the schema is changed / added, there may be values set in the config",
                " that do not conform to the schema. This will reset make them conform."
            ],
            "params": [
                "source"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "kill",
            "line": 199,
            "func_location": "BufferedProcess.killOnWindows.(unnamed_function_7)",
            "func_start_line": 191,
            "func_end_line": 204,
            "args": [
                "pid"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.kill",
            "start_line": 233,
            "end_line": 242,
            "comment": [
                " Public: Terminate the process."
            ],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "moveUp",
            "line": 259,
            "func_location": "Selection.selectUp.(unnamed_function_8)",
            "func_start_line": 259,
            "func_end_line": 259,
            "args": [
                "rowCount"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.moveUp",
            "start_line": 241,
            "end_line": 253,
            "comment": [
                "\r\n  Section: Moving the Cursor\r\n  ",
                " Public: Moves the cursor up one screen row.",
                "",
                " * `rowCount` (optional) {Number} number of rows to move (default: 1)",
                " * `options` (optional) {Object} with the following keys:",
                "   * `moveToEndOfSelection` if true, move to the left of the selection if a",
                "     selection exists."
            ],
            "params": [
                "rowCount",
                [
                    "moveToEndOfSelection"
                ]
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 356,
            "func_location": "TextEditorComponent.measureBlockDecorations.(unnamed_function_8)",
            "func_start_line": 356,
            "func_end_line": 356,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "moveDown",
            "line": 266,
            "func_location": "Selection.selectDown.(unnamed_function_9)",
            "func_start_line": 266,
            "func_end_line": 266,
            "args": [
                "rowCount"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.moveDown",
            "start_line": 261,
            "end_line": 273,
            "comment": [
                " Public: Moves the cursor down one screen row.",
                "",
                " * `rowCount` (optional) {Number} number of rows to move (default: 1)",
                " * `options` (optional) {Object} with the following keys:",
                "   * `moveToEndOfSelection` if true, move to the left of the selection if a",
                "     selection exists."
            ],
            "params": [
                "rowCount",
                [
                    "moveToEndOfSelection"
                ]
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/package.js",
            "name": "handleError",
            "line": 232,
            "func_location": "Package.activateNow",
            "func_start_line": 212,
            "func_end_line": 236,
            "args": [
                null,
                "error"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleError",
            "start_line": 297,
            "end_line": 312,
            "comment": [],
            "params": [
                "error"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-watcher-registry.js",
            "name": "remove",
            "line": 49,
            "func_location": "RegistryTree.add",
            "func_start_line": 38,
            "func_end_line": 54,
            "args": [
                "pathSegments",
                ".createNative"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2520,
            "func_location": "TextEditorComponent.addBlockDecoration",
            "func_start_line": 2508,
            "func_end_line": 2560,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "addEventListener",
            "line": 103,
            "func_location": "WindowEventHandler.addEventListener",
            "func_start_line": 102,
            "func_end_line": 107,
            "args": [
                "eventName",
                "handler"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "addEventListener",
            "line": 14,
            "func_location": "WorkspaceElement.attachedCallback",
            "func_start_line": 11,
            "func_end_line": 15,
            "args": [
                {
                    "type": "string"
                },
                ".handleCenterLeave"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1958,
            "func_location": "TextEditorComponent.autoscrollOnMouseDrag",
            "func_start_line": 1922,
            "func_end_line": 1959,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "selectLeft",
            "line": 522,
            "func_location": "Selection.backspace",
            "func_start_line": 520,
            "func_end_line": 524,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "Selection.selectLeft",
            "start_line": 251,
            "end_line": 253,
            "comment": [
                " Public: Selects the text one position left of the cursor.",
                "",
                " * `columnCount` (optional) {Number} number of columns to select (default: 1)"
            ],
            "params": [
                "columnCount"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 487,
            "func_location": "GitRepository.checkoutReference",
            "func_start_line": 486,
            "func_end_line": 488,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/babel.js",
            "name": "replace",
            "line": 54,
            "func_location": "exports.compile",
            "func_start_line": 44,
            "func_end_line": 62,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/coffee-script.js",
            "name": "replace",
            "line": 33,
            "func_location": "exports.compile",
            "func_start_line": 21,
            "func_end_line": 45,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/coffee-script.js",
            "name": "replace",
            "line": 44,
            "func_location": "exports.compile",
            "func_start_line": 21,
            "func_end_line": 45,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/typescript.js",
            "name": "replace",
            "line": 41,
            "func_location": "exports.compile",
            "func_start_line": 35,
            "func_end_line": 46,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/atom-environment.js",
            "name": "clone",
            "line": 93,
            "func_location": "AtomEnvironment.constructor",
            "func_start_line": 57,
            "func_end_line": 199,
            "args": [
                "ConfigSchema"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js",
            "name": "Color.clone",
            "start_line": 111,
            "end_line": 113,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/atom-window.js",
            "name": "handleEvents",
            "line": 66,
            "func_location": "AtomWindow.constructor",
            "func_start_line": 14,
            "func_end_line": 91,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleEvents",
            "start_line": 252,
            "end_line": 295,
            "comment": [],
            "params": [
                "stdout",
                "stderr",
                "exit"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/title-bar.js",
            "name": "addEventListener",
            "line": 15,
            "func_location": "TitleBar.constructor",
            "func_start_line": 3,
            "func_end_line": 22,
            "args": [
                {
                    "type": "string"
                },
                ".dblclickHandler"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/atom-application.js",
            "name": "clone",
            "line": 124,
            "func_location": "AtomApplication.constructor",
            "func_start_line": 91,
            "func_end_line": 136,
            "args": [
                "ConfigSchema"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js",
            "name": "Color.clone",
            "start_line": 111,
            "end_line": 113,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/atom-application.js",
            "name": "handleEvents",
            "line": 135,
            "func_location": "AtomApplication.constructor",
            "func_start_line": 91,
            "func_end_line": 136,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "BufferedProcess.handleEvents",
            "start_line": 252,
            "end_line": 295,
            "comment": [],
            "params": [
                "stdout",
                "stderr",
                "exit"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/pane-axis.js",
            "name": "addChild",
            "line": 25,
            "func_location": "PaneAxis.constructor",
            "func_start_line": 12,
            "func_end_line": 28,
            "args": [
                "child"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/pane-axis.js",
            "name": "PaneAxis.addChild",
            "start_line": 117,
            "end_line": 123,
            "comment": [],
            "params": [
                "child",
                "index"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "resolve",
            "line": 24,
            "func_location": "AutoUpdateManager.constructor",
            "func_start_line": 16,
            "func_end_line": 25,
            "args": [
                "__dirname",
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-compile-cache.js",
            "name": "require.resolve",
            "start_line": 49,
            "end_line": 51,
            "comment": [],
            "params": [
                "request"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-element.js",
            "name": "addEventListener",
            "line": 36,
            "func_location": "TextEditorElement.createdCallback",
            "func_start_line": 32,
            "func_end_line": 38,
            "args": [
                {
                    "type": "string"
                },
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-element.js",
            "name": "addEventListener",
            "line": 37,
            "func_location": "TextEditorElement.createdCallback",
            "func_start_line": 32,
            "func_end_line": 38,
            "args": [
                {
                    "type": "string"
                },
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "deepDefaults",
            "line": 1111,
            "func_location": "Config.deepDefaults",
            "func_start_line": 1104,
            "func_end_line": 1120,
            "args": [
                "result.key",
                "object.key"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.deepDefaults",
            "start_line": 1104,
            "end_line": 1120,
            "comment": [],
            "params": [
                "target"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "selectLeft",
            "line": 569,
            "func_location": "Selection.deleteToBeginningOfLine",
            "func_start_line": 566,
            "func_end_line": 574,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "Selection.selectLeft",
            "start_line": 251,
            "end_line": 253,
            "comment": [
                " Public: Selects the text one position left of the cursor.",
                "",
                " * `columnCount` (optional) {Number} number of columns to select (default: 1)"
            ],
            "params": [
                "columnCount"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/deserializer-manager.js",
            "name": "warn",
            "line": 76,
            "func_location": "DeserializerManager.deserialize",
            "func_start_line": 59,
            "func_end_line": 78,
            "args": [
                {
                    "type": "string"
                },
                "state"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "remove",
            "line": 502,
            "func_location": "Tooltip.prototype.destroy",
            "func_start_line": 500,
            "func_end_line": 504,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3407,
            "func_location": "LineNumberComponent.destroy",
            "func_start_line": 3406,
            "func_end_line": 3409,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3971,
            "func_location": "LineComponent.destroy",
            "func_start_line": 3964,
            "func_end_line": 3973,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/panel.js",
            "name": "remove",
            "line": 32,
            "func_location": "Panel.destroy",
            "func_start_line": 28,
            "func_end_line": 35,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "addBlockDecoration",
            "line": 925,
            "func_location": "TextEditor.didAddDecoration",
            "func_start_line": 923,
            "func_end_line": 927,
            "args": [
                "decoration"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.addBlockDecoration",
            "start_line": 2508,
            "end_line": 2560,
            "comment": [],
            "params": [
                "decoration",
                "subscribeToChanges"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1510,
            "func_location": "TextEditorComponent.didBlurHiddenInput",
            "func_start_line": 1506,
            "func_end_line": 1513,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2473,
            "func_location": "TextEditorComponent.didChangeDisplayLayer",
            "func_start_line": 2463,
            "func_end_line": 2474,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "selectLeft",
            "line": 1732,
            "func_location": "TextEditorComponent.didCompositionStart",
            "func_start_line": 1716,
            "func_end_line": 1734,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "Selection.selectLeft",
            "start_line": 251,
            "end_line": 253,
            "comment": [
                " Public: Selects the text one position left of the cursor.",
                "",
                " * `columnCount` (optional) {Number} number of columns to select (default: 1)"
            ],
            "params": [
                "columnCount"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1491,
            "func_location": "TextEditorComponent.didFocus",
            "func_start_line": 1476,
            "func_end_line": 1495,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1525,
            "func_location": "TextEditorComponent.didFocusHiddenInput",
            "func_start_line": 1515,
            "func_end_line": 1527,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2014,
            "func_location": "TextEditorComponent.didRequestAutoscroll",
            "func_start_line": 2012,
            "func_end_line": 2015,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2460,
            "func_location": "TextEditorComponent.didResetDisplayLayer",
            "func_start_line": 2458,
            "func_end_line": 2461,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1566,
            "func_location": "TextEditorComponent.didResize",
            "func_start_line": 1554,
            "func_end_line": 1570,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1577,
            "func_location": "TextEditorComponent.didResizeGutterContainer",
            "func_start_line": 1572,
            "func_end_line": 1580,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 1462,
            "func_location": "TextEditorComponent.didShow",
            "func_start_line": 1456,
            "func_end_line": 1465,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "selectLeft",
            "line": 1649,
            "func_location": "TextEditorComponent.didTextInput",
            "func_start_line": 1617,
            "func_end_line": 1654,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "Selection.selectLeft",
            "start_line": 251,
            "end_line": 253,
            "comment": [
                " Public: Selects the text one position left of the cursor.",
                "",
                " * `columnCount` (optional) {Number} number of columns to select (default: 1)"
            ],
            "params": [
                "columnCount"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1603,
            "func_location": "TextEditorComponent.didUpdateScrollbarStyles",
            "func_start_line": 1600,
            "func_end_line": 1605,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1978,
            "func_location": "TextEditorComponent.didUpdateSelections",
            "func_start_line": 1976,
            "func_end_line": 1979,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1597,
            "func_location": "TextEditorComponent.didUpdateStyles",
            "func_start_line": 1594,
            "func_end_line": 1598,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 316,
            "func_location": "TextEditor.doBackgroundWork",
            "func_start_line": 307,
            "func_end_line": 318,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "write",
            "line": 88,
            "func_location": "console.error",
            "func_start_line": 86,
            "func_end_line": 89,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js",
            "name": "Clipboard.write",
            "start_line": 42,
            "end_line": 46,
            "comment": [
                " Public: Write the given text to the clipboard.",
                "",
                " The metadata associated with the text is available by calling",
                " {::readWithMetadata}.",
                "",
                " * `text` The {String} to store.",
                " * `metadata` (optional) The additional info to associate with the text."
            ],
            "params": [
                "text",
                "metadata"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "getCurrentWordBufferRange",
            "line": 377,
            "func_location": "Selection.expandOverWord",
            "func_start_line": 376,
            "func_end_line": 380,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getCurrentWordBufferRange",
            "start_line": 606,
            "end_line": 616,
            "comment": [
                " Public: Returns the buffer Range occupied by the word located under the cursor.",
                "",
                " * `options` (optional) {Object}",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "     (default: {::wordRegExp})."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 2031,
            "func_location": "TextEditorComponent.flushPendingLogicalScrollPosition",
            "func_start_line": 2017,
            "func_end_line": 2033,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "focusPaneViewInDirection",
            "line": 226,
            "func_location": "WorkspaceElement.focusPaneViewAbove",
            "func_start_line": 226,
            "func_end_line": 226,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "WorkspaceElement.focusPaneViewInDirection",
            "start_line": 234,
            "end_line": 238,
            "comment": [],
            "params": [
                "direction",
                "pane"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "focusPaneViewInDirection",
            "line": 228,
            "func_location": "WorkspaceElement.focusPaneViewBelow",
            "func_start_line": 228,
            "func_end_line": 228,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "WorkspaceElement.focusPaneViewInDirection",
            "start_line": 234,
            "end_line": 238,
            "comment": [],
            "params": [
                "direction",
                "pane"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "focusPaneViewInDirection",
            "line": 230,
            "func_location": "WorkspaceElement.focusPaneViewOnLeft",
            "func_start_line": 230,
            "func_end_line": 230,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "WorkspaceElement.focusPaneViewInDirection",
            "start_line": 234,
            "end_line": 238,
            "comment": [],
            "params": [
                "direction",
                "pane"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "focusPaneViewInDirection",
            "line": 232,
            "func_location": "WorkspaceElement.focusPaneViewOnRight",
            "func_start_line": 232,
            "func_end_line": 232,
            "args": [
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "WorkspaceElement.focusPaneViewInDirection",
            "start_line": 234,
            "end_line": 238,
            "comment": [],
            "params": [
                "direction",
                "pane"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getAheadBehindCount",
            "line": 255,
            "func_location": "GitRepository.getAheadBehindCount",
            "func_start_line": 254,
            "func_end_line": 256,
            "args": [
                "reference"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getAheadBehindCount",
            "start_line": 254,
            "end_line": 256,
            "comment": [
                " Public: Returns the number of commits behind the current branch is from the",
                " its upstream remote branch.",
                "",
                " * `reference` The {String} branch reference name.",
                " * `path`      The {String} path in the repository to get this information for,",
                "   only needed if the repository contains submodules."
            ],
            "params": [
                "reference",
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/start.js",
            "name": "resetUserSettings",
            "line": 118,
            "func_location": "getConfig",
            "func_start_line": 106,
            "func_end_line": 122,
            "args": [
                "configFileData"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.resetUserSettings",
            "start_line": 936,
            "end_line": 938,
            "comment": [
                "\r\n  Section: Private methods managing global settings\r\n  "
            ],
            "params": [
                "newSettings",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getConfigValue",
            "line": 277,
            "func_location": "GitRepository.getConfigValue",
            "func_start_line": 276,
            "func_end_line": 278,
            "args": [
                "key"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getConfigValue",
            "start_line": 276,
            "end_line": 278,
            "comment": [
                " Public: Returns the git configuration value specified by the key.",
                "",
                " * `key`  The {String} key for the configuration to lookup.",
                " * `path` An optional {String} path in the repository to get this information",
                "   for, only needed if the repository has submodules."
            ],
            "params": [
                "key",
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getBeginningOfCurrentWordBufferPosition",
            "line": 638,
            "func_location": "Cursor.getCurrentWordPrefix",
            "func_start_line": 637,
            "func_end_line": 639,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getBeginningOfCurrentWordBufferPosition",
            "start_line": 527,
            "end_line": 547,
            "comment": [
                " Public: Retrieves the buffer position of where the current word starts.",
                "",
                " * `options` (optional) An {Object} with the following keys:",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "     (default: {::wordRegExp}).",
                "   * `includeNonWordCharacters` A {Boolean} indicating whether to include",
                "     non-word characters in the default word regex.",
                "     Has no effect if wordRegex is set.",
                "   * `allowPrevious` A {Boolean} indicating whether the beginning of the",
                "     previous word can be returned.",
                "",
                " Returns a {Range}."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getLineDiffs",
            "line": 452,
            "func_location": "GitRepository.getLineDiffs",
            "func_start_line": 447,
            "func_end_line": 453,
            "args": [
                null,
                "text",
                "options"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getLineDiffs",
            "start_line": 447,
            "end_line": 453,
            "comment": [
                " Public: Retrieves the line diffs comparing the `HEAD` version of the given",
                " path and the given text.",
                "",
                " * `path` The {String} path relative to the repository.",
                " * `text` The {String} to compare against the `HEAD` contents",
                "",
                " Returns an {Array} of hunk {Object}s with the following keys:",
                "   * `oldStart` The line {Number} of the old hunk.",
                "   * `newStart` The line {Number} of the new hunk.",
                "   * `oldLines` The {Number} of lines in the old hunk.",
                "   * `newLines` The {Number} of lines in the new hunk"
            ],
            "params": [
                "path",
                "text"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "extend",
            "line": 131,
            "func_location": "Tooltip.prototype.getOptions",
            "func_start_line": 130,
            "func_end_line": 141,
            "args": [
                null,
                null,
                "options"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "extend",
            "start_line": 550,
            "end_line": 561,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 188,
            "func_location": "GitRepository.getPath",
            "func_start_line": 186,
            "func_end_line": 191,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "deepDefaults",
            "line": 1012,
            "func_location": "Config.getRawValue",
            "func_start_line": 994,
            "func_end_line": 1018,
            "args": [
                "value",
                "defaultValue"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.deepDefaults",
            "start_line": 1104,
            "end_line": 1120,
            "comment": [],
            "params": [
                "target"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getReferences",
            "line": 309,
            "func_location": "GitRepository.getReferences",
            "func_start_line": 308,
            "func_end_line": 310,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getReferences",
            "start_line": 308,
            "end_line": 310,
            "comment": [
                " Public: Gets all the local and remote references.",
                "",
                " * `path` An optional {String} path in the repository to get this information",
                "   for, only needed if the repository has submodules.",
                "",
                " Returns an {Object} with the following keys:",
                "  * `heads`   An {Array} of head reference names.",
                "  * `remotes` An {Array} of remote reference names.",
                "  * `tags`    An {Array} of tag reference names."
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getReferenceTarget",
            "line": 318,
            "func_location": "GitRepository.getReferenceTarget",
            "func_start_line": 317,
            "func_end_line": 319,
            "args": [
                "reference"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getReferenceTarget",
            "start_line": 317,
            "end_line": 319,
            "comment": [
                " Public: Returns the current {String} SHA for the given reference.",
                "",
                " * `reference` The {String} reference to get the target of.",
                " * `path` An optional {String} path in the repo to get the reference target",
                "   for. Only needed if the repository contains submodules."
            ],
            "params": [
                "reference",
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getShortHead",
            "line": 228,
            "func_location": "GitRepository.getShortHead",
            "func_start_line": 227,
            "func_end_line": 229,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getShortHead",
            "start_line": 227,
            "end_line": 229,
            "comment": [
                " Public: Retrieves a shortened version of the HEAD reference value.",
                "",
                " This removes the leading segments of `refs/heads`, `refs/tags`, or",
                " `refs/remotes`.  It also shortens the SHA-1 of a detached `HEAD` to 7",
                " characters.",
                "",
                " * `path` An optional {String} path in the repository to get this information",
                "   for, only needed if the repository contains submodules.",
                "",
                " Returns a {String}."
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getUpstreamBranch",
            "line": 296,
            "func_location": "GitRepository.getUpstreamBranch",
            "func_start_line": 295,
            "func_end_line": 297,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getUpstreamBranch",
            "start_line": 295,
            "end_line": 297,
            "comment": [
                " Public: Returns the upstream branch for the current HEAD, or null if there",
                " is no upstream branch for the current HEAD.",
                "",
                " * `path` An optional {String} path in the repo to get this information for,",
                "   only needed if the repository contains submodules.",
                "",
                " Returns a {String} branch name such as `refs/remotes/origin/master`."
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/style-manager.js",
            "name": "resolve",
            "line": 253,
            "func_location": "StyleManager.getUserStyleSheetPath",
            "func_start_line": 249,
            "func_end_line": 260,
            "args": [
                null,
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-compile-cache.js",
            "name": "require.resolve",
            "start_line": 49,
            "end_line": 51,
            "comment": [],
            "params": [
                "request"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 195,
            "func_location": "GitRepository.getWorkingDirectory",
            "func_start_line": 194,
            "func_end_line": 196,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/uri-handler-registry.js",
            "name": "parse",
            "line": 93,
            "func_location": "URIHandlerRegistry.handleURI",
            "func_start_line": 92,
            "func_end_line": 113,
            "args": [
                "uri",
                {
                    "type": "boolean"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js",
            "name": "Color.parse",
            "start_line": 14,
            "end_line": 36,
            "comment": [
                " Essential: Parse a {String} or {Object} into a {Color}.",
                "",
                " * `value` A {String} such as `'white'`, `#ff00ff`, or",
                "   `'rgba(255, 15, 60, .75)'` or an {Object} with `red`, `green`, `blue`,",
                "   and `alpha` properties.",
                "",
                " Returns a {Color} or `null` if it cannot be parsed."
            ],
            "params": [
                "value"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getReferenceTarget",
            "line": 214,
            "func_location": "GitRepository.hasBranch",
            "func_start_line": 213,
            "func_end_line": 215,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getReferenceTarget",
            "start_line": 317,
            "end_line": 319,
            "comment": [
                " Public: Returns the current {String} SHA for the given reference.",
                "",
                " * `reference` The {String} reference to get the target of.",
                " * `path` An optional {String} path in the repo to get the reference target",
                "   for. Only needed if the repository contains submodules."
            ],
            "params": [
                "reference",
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "remove",
            "line": 374,
            "func_location": "Tooltip.prototype.hide",
            "func_start_line": 360,
            "func_end_line": 391,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "extend",
            "line": 104,
            "func_location": "Tooltip.prototype.init",
            "func_start_line": 44,
            "func_end_line": 106,
            "args": [
                null,
                ".options",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "extend",
            "start_line": 550,
            "end_line": 561,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/atom-environment.js",
            "name": "resetUserSettings",
            "line": 224,
            "func_location": "AtomEnvironment.initialize",
            "func_start_line": 201,
            "func_end_line": 274,
            "args": [
                "userSettings"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.resetUserSettings",
            "start_line": 936,
            "end_line": 938,
            "comment": [
                "\r\n  Section: Private methods managing global settings\r\n  "
            ],
            "params": [
                "newSettings",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "addEventListener",
            "line": 109,
            "func_location": "WorkspaceElement.initialize",
            "func_start_line": 67,
            "func_end_line": 140,
            "args": [
                {
                    "type": "string"
                },
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "addEventListener",
            "line": 136,
            "func_location": "WorkspaceElement.initialize",
            "func_start_line": 67,
            "func_end_line": 140,
            "args": [
                {
                    "type": "string"
                },
                ".handleCenterEnter"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/workspace-element.js",
            "name": "addEventListener",
            "line": 137,
            "func_location": "WorkspaceElement.initialize",
            "func_start_line": 67,
            "func_end_line": 140,
            "args": [
                {
                    "type": "string"
                },
                ".handleCenterLeave"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "setState",
            "line": 84,
            "func_location": "AutoUpdateManager.initialize",
            "func_start_line": 27,
            "func_end_line": 90,
            "args": [
                "UnsupportedState"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.setState",
            "start_line": 103,
            "end_line": 108,
            "comment": [],
            "params": [
                "state",
                "errorMessage"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "setState",
            "line": 88,
            "func_location": "AutoUpdateManager.initialize",
            "func_start_line": 27,
            "func_end_line": 90,
            "args": [
                "UnsupportedState"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/auto-update-manager.js",
            "name": "AutoUpdateManager.setState",
            "start_line": 103,
            "end_line": 108,
            "comment": [],
            "params": [
                "state",
                "errorMessage"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "setBufferPosition",
            "line": 496,
            "func_location": "Selection.insertText",
            "func_start_line": 451,
            "func_end_line": 513,
            "args": [
                "newBufferRange.end"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "intersectsWith",
            "line": 167,
            "func_location": "Selection.intersectsBufferRange",
            "func_start_line": 166,
            "func_end_line": 168,
            "args": [
                "bufferRange"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selection.js",
            "name": "Selection.intersectsWith",
            "start_line": 183,
            "end_line": 185,
            "comment": [
                " Public: Identifies if a selection intersects with another selection.",
                "",
                " * `otherSelection` A {Selection} to check against.",
                "",
                " Returns a {Boolean}"
            ],
            "params": [
                "otherSelection",
                "exclusive"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2577,
            "func_location": "TextEditorComponent.invalidateBlockDecorationDimensions",
            "func_start_line": 2575,
            "func_end_line": 2578,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getCurrentLineBufferRange",
            "line": 128,
            "func_location": "Cursor.isAtEndOfLine",
            "func_start_line": 127,
            "func_end_line": 129,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getCurrentLineBufferRange",
            "start_line": 623,
            "end_line": 625,
            "comment": [
                " Public: Returns the buffer Range for the current line.",
                "",
                " * `options` (optional) {Object}",
                "   * `includeNewline` A {Boolean} which controls whether the Range should",
                "     include the newline."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getNonWordCharacters",
            "line": 167,
            "func_location": "Cursor.isBetweenWordAndNonWord",
            "func_start_line": 159,
            "func_end_line": 169,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-mate-language-mode.js",
            "name": "TextMateLanguageMode.getNonWordCharacters",
            "start_line": 63,
            "end_line": 66,
            "comment": [],
            "params": [
                "position"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/protocol-handler-installer.js",
            "name": "isDefaultProtocolClient",
            "line": 15,
            "func_location": "ProtocolHandlerInstaller.isDefaultProtocolClient",
            "func_start_line": 14,
            "func_end_line": 16,
            "args": [
                {
                    "type": "string"
                },
                "process.execPath",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/protocol-handler-installer.js",
            "name": "ProtocolHandlerInstaller.isDefaultProtocolClient",
            "start_line": 14,
            "end_line": 16,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 349,
            "func_location": "GitRepository.isPathIgnored",
            "func_start_line": 348,
            "func_end_line": 350,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 406,
            "func_location": "GitRepository.isStatusModified",
            "func_start_line": 406,
            "func_end_line": 406,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 414,
            "func_location": "GitRepository.isStatusNew",
            "func_start_line": 413,
            "func_end_line": 415,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 244,
            "func_location": "GitRepository.isSubmodule",
            "func_start_line": 236,
            "func_end_line": 246,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/delegated-listener.js",
            "name": "addEventListener",
            "line": 36,
            "func_location": "listen",
            "func_start_line": 4,
            "func_end_line": 41,
            "args": [
                "eventName",
                "innerHandler"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js",
            "name": "read",
            "line": 279,
            "func_location": "ThemeManager.loadLessStylesheet",
            "func_start_line": 249,
            "func_end_line": 298,
            "args": [
                "lessStylesheetPath"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js",
            "name": "Clipboard.read",
            "start_line": 51,
            "end_line": 53,
            "comment": [
                " Public: Read the text from the clipboard.",
                "",
                " Returns a {String}."
            ],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "write",
            "line": 80,
            "func_location": "console.log",
            "func_start_line": 78,
            "func_end_line": 81,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js",
            "name": "Clipboard.write",
            "start_line": 42,
            "end_line": 46,
            "comment": [
                " Public: Write the given text to the clipboard.",
                "",
                " The metadata associated with the text is available by calling",
                " {::readWithMetadata}.",
                "",
                " * `text` The {String} to store.",
                " * `metadata` (optional) The additional info to associate with the text."
            ],
            "params": [
                "text",
                "metadata"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "makeValueConformToSchema",
            "line": 1167,
            "func_location": "Config.makeValueConformToSchema",
            "func_start_line": 1164,
            "func_end_line": 1178,
            "args": [
                "keyPath",
                "value"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.makeValueConformToSchema",
            "start_line": 1164,
            "end_line": 1178,
            "comment": [],
            "params": [
                "keyPath",
                "value",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window.js",
            "name": "log",
            "line": 12,
            "func_location": "window.measure",
            "func_start_line": 8,
            "func_end_line": 14,
            "args": [
                "description",
                "result"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.log",
            "start_line": 78,
            "end_line": 81,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "getDecorations",
            "line": 295,
            "func_location": "TextEditorComponent.measureBlockDecorations",
            "func_start_line": 291,
            "func_end_line": 362,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration-manager.js",
            "name": "DecorationManager.getDecorations",
            "start_line": 40,
            "end_line": 56,
            "comment": [],
            "params": [
                "propertyFilter"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 358,
            "func_location": "TextEditorComponent.measureBlockDecorations",
            "func_start_line": 291,
            "func_end_line": 362,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "line": 159,
            "func_location": "mergeTable",
            "func_start_line": 154,
            "func_end_line": 174,
            "args": [
                "table.indices.key",
                "defaultTable.indices.key"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "start_line": 154,
            "end_line": 174,
            "comment": [],
            "params": [
                "table",
                "defaultTable",
                "mergeIndices"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "line": 167,
            "func_location": "mergeTable",
            "func_start_line": 154,
            "func_end_line": 174,
            "args": [
                "table.parents.key",
                "defaultTable.parents.key"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "start_line": 154,
            "end_line": 174,
            "comment": [],
            "params": [
                "table",
                "defaultTable",
                "mergeIndices"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setScreenPosition",
            "line": 284,
            "func_location": "Cursor.moveLeft",
            "func_start_line": 281,
            "func_end_line": 297,
            "args": [
                "range.start"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setScreenPosition",
            "start_line": 66,
            "end_line": 70,
            "comment": [
                "\r\n  Section: Managing Cursor Position\r\n  ",
                " Public: Moves a cursor to a given screen position.",
                "",
                " * `screenPosition` {Array} of two numbers: the screen row, and the screen column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever",
                "     the cursor moves to."
            ],
            "params": [
                "screenPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setScreenPosition",
            "line": 308,
            "func_location": "Cursor.moveRight",
            "func_start_line": 305,
            "func_end_line": 327,
            "args": [
                "range.end"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setScreenPosition",
            "start_line": 66,
            "end_line": 70,
            "comment": [
                "\r\n  Section: Managing Cursor Position\r\n  ",
                " Public: Moves a cursor to a given screen position.",
                "",
                " * `screenPosition` {Array} of two numbers: the screen row, and the screen column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever",
                "     the cursor moves to."
            ],
            "params": [
                "screenPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 348,
            "func_location": "Cursor.moveToBeginningOfLine",
            "func_start_line": 347,
            "func_end_line": 349,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 444,
            "func_location": "Cursor.moveToBeginningOfNextParagraph",
            "func_start_line": 442,
            "func_end_line": 445,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getBeginningOfNextWordBufferPosition",
            "line": 398,
            "func_location": "Cursor.moveToBeginningOfNextWord",
            "func_start_line": 397,
            "func_end_line": 400,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getBeginningOfNextWordBufferPosition",
            "start_line": 587,
            "end_line": 599,
            "comment": [
                " Public: Retrieves the buffer position of where the next word starts.",
                "",
                " * `options` (optional) {Object}",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "     (default: {::wordRegExp}).",
                "",
                " Returns a {Range}"
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 399,
            "func_location": "Cursor.moveToBeginningOfNextWord",
            "func_start_line": 397,
            "func_end_line": 400,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 450,
            "func_location": "Cursor.moveToBeginningOfPreviousParagraph",
            "func_start_line": 448,
            "func_end_line": 451,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setScreenPosition",
            "line": 343,
            "func_location": "Cursor.moveToBeginningOfScreenLine",
            "func_start_line": 342,
            "func_end_line": 344,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setScreenPosition",
            "start_line": 66,
            "end_line": 70,
            "comment": [
                "\r\n  Section: Managing Cursor Position\r\n  ",
                " Public: Moves a cursor to a given screen position.",
                "",
                " * `screenPosition` {Array} of two numbers: the screen row, and the screen column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever",
                "     the cursor moves to."
            ],
            "params": [
                "screenPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 387,
            "func_location": "Cursor.moveToBeginningOfWord",
            "func_start_line": 386,
            "func_end_line": 388,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getBeginningOfCurrentWordBufferPosition",
            "line": 387,
            "func_location": "Cursor.moveToBeginningOfWord",
            "func_start_line": 386,
            "func_end_line": 388,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getBeginningOfCurrentWordBufferPosition",
            "start_line": 527,
            "end_line": 547,
            "comment": [
                " Public: Retrieves the buffer position of where the current word starts.",
                "",
                " * `options` (optional) An {Object} with the following keys:",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "     (default: {::wordRegExp}).",
                "   * `includeNonWordCharacters` A {Boolean} indicating whether to include",
                "     non-word characters in the default word regex.",
                "     Has no effect if wordRegex is set.",
                "   * `allowPrevious` A {Boolean} indicating whether the beginning of the",
                "     previous word can be returned.",
                "",
                " Returns a {Range}."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 337,
            "func_location": "Cursor.moveToBottom",
            "func_start_line": 335,
            "func_end_line": 339,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 382,
            "func_location": "Cursor.moveToEndOfLine",
            "func_start_line": 381,
            "func_end_line": 383,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setScreenPosition",
            "line": 377,
            "func_location": "Cursor.moveToEndOfScreenLine",
            "func_start_line": 376,
            "func_end_line": 378,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setScreenPosition",
            "start_line": 66,
            "end_line": 70,
            "comment": [
                "\r\n  Section: Managing Cursor Position\r\n  ",
                " Public: Moves a cursor to a given screen position.",
                "",
                " * `screenPosition` {Array} of two numbers: the screen row, and the screen column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` A Boolean which, if `true`, scrolls the {TextEditor} to wherever",
                "     the cursor moves to."
            ],
            "params": [
                "screenPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getEndOfCurrentWordBufferPosition",
            "line": 392,
            "func_location": "Cursor.moveToEndOfWord",
            "func_start_line": 391,
            "func_end_line": 394,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getEndOfCurrentWordBufferPosition",
            "start_line": 559,
            "end_line": 578,
            "comment": [
                " Public: Retrieves the buffer position of where the current word ends.",
                "",
                " * `options` (optional) {Object} with the following keys:",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "      (default: {::wordRegExp})",
                "   * `includeNonWordCharacters` A Boolean indicating whether to include",
                "     non-word characters in the default word regex. Has no effect if",
                "     wordRegex is set.",
                "",
                " Returns a {Range}."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 393,
            "func_location": "Cursor.moveToEndOfWord",
            "func_start_line": 391,
            "func_end_line": 394,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 372,
            "func_location": "Cursor.moveToFirstCharacterOfLine",
            "func_start_line": 353,
            "func_end_line": 373,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 425,
            "func_location": "Cursor.moveToNextSubwordBoundary",
            "func_start_line": 422,
            "func_end_line": 426,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getNextWordBoundaryBufferPosition",
            "line": 410,
            "func_location": "Cursor.moveToNextWordBoundary",
            "func_start_line": 409,
            "func_end_line": 412,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getNextWordBoundaryBufferPosition",
            "start_line": 493,
            "end_line": 513,
            "comment": [
                " Public: Returns buffer position of the next word boundary. It might be on",
                " the current word, or the previous word.",
                "",
                " * `options` (optional) {Object} with the following keys:",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "      (default: {::wordRegExp})"
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 411,
            "func_location": "Cursor.moveToNextWordBoundary",
            "func_start_line": 409,
            "func_end_line": 412,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 418,
            "func_location": "Cursor.moveToPreviousSubwordBoundary",
            "func_start_line": 415,
            "func_end_line": 419,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getPreviousWordBoundaryBufferPosition",
            "line": 404,
            "func_location": "Cursor.moveToPreviousWordBoundary",
            "func_start_line": 403,
            "func_end_line": 406,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getPreviousWordBoundaryBufferPosition",
            "start_line": 463,
            "end_line": 485,
            "comment": [
                "\r\n  Section: Local Positions and Ranges\r\n  ",
                " Public: Returns buffer position of previous word boundary. It might be on",
                " the current word, or the previous word.",
                "",
                " * `options` (optional) {Object} with the following keys:",
                "   * `wordRegex` A {RegExp} indicating what constitutes a \"word\"",
                "      (default: {::wordRegExp})"
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 405,
            "func_location": "Cursor.moveToPreviousWordBoundary",
            "func_start_line": 403,
            "func_end_line": 406,
            "args": [
                "position"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 331,
            "func_location": "Cursor.moveToTop",
            "func_start_line": 330,
            "func_end_line": 332,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/start.js",
            "name": "replace",
            "line": 126,
            "func_location": "normalizeDriveLetterName",
            "func_start_line": 124,
            "func_end_line": 130,
            "args": [
                {
                    "type": "object"
                },
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/menu-helpers.js",
            "name": "replace",
            "line": 72,
            "func_location": "normalizeLabel",
            "func_start_line": 68,
            "func_end_line": 73,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "addBlockDecoration",
            "line": 2504,
            "func_location": "TextEditorComponent.observeBlockDecorations",
            "func_start_line": 2500,
            "func_end_line": 2506,
            "args": [
                "decorations.i"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.addBlockDecoration",
            "start_line": 2508,
            "end_line": 2560,
            "comment": [],
            "params": [
                "decoration",
                "subscribeToChanges"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration-manager.js",
            "name": "getDecorations",
            "line": 21,
            "func_location": "DecorationManager.observeDecorations",
            "func_start_line": 20,
            "func_end_line": 26,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/decoration-manager.js",
            "name": "DecorationManager.getDecorations",
            "start_line": 40,
            "end_line": 56,
            "comment": [],
            "params": [
                "propertyFilter"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "get",
            "line": 1265,
            "func_location": "Config.observeScopedKeyPath",
            "func_start_line": 1264,
            "func_end_line": 1267,
            "args": [
                "keyPath",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.get",
            "start_line": 585,
            "end_line": 602,
            "comment": [
                "\r\n  Section: Managing Settings\r\n  ",
                " Essential: Retrieves the setting for the given key.",
                "",
                " ### Examples",
                "",
                " You might want to know what themes are enabled, so check `core.themes`",
                "",
                " ```coffee",
                " atom.config.get('core.themes')",
                " ```",
                "",
                " With scope descriptors you can get settings within a specific editor",
                " scope. For example, you might want to know `editor.tabLength` for ruby",
                " files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " ```",
                "",
                " This setting in ruby files might be different than the global tabLength setting",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " ```",
                "",
                " You can get the language scope descriptor via",
                " {TextEditor::getRootScopeDescriptor}. This will get the setting specifically",
                " for the editor's language.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength', scope: @editor.getRootScopeDescriptor()) # => 2",
                " ```",
                "",
                " Additionally, you can get the setting at the specific cursor position.",
                "",
                " ```coffee",
                " scopeDescriptor = @editor.getLastCursor().getScopeDescriptor()",
                " atom.config.get('editor.tabLength', scope: scopeDescriptor) # => 2",
                " ```",
                "",
                " * `keyPath` The {String} name of the key to retrieve.",
                " * `options` (optional) {Object}",
                "   * `sources` (optional) {Array} of {String} source names. If provided, only",
                "     values that were associated with these sources during {::set} will be used.",
                "   * `excludeSources` (optional) {Array} of {String} source names. If provided,",
                "     values that  were associated with these sources during {::set} will not",
                "     be used.",
                "   * `scope` (optional) {ScopeDescriptor} describing a path from",
                "     the root of the syntax tree to a token. Get one by calling",
                "     {editor.getLastCursor().getScopeDescriptor()}",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "",
                " Returns the value from Atom's default settings, the user's configuration",
                " file in the type specified by the configuration schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/selectors.js",
            "name": "replace",
            "line": 12,
            "func_location": "parse",
            "func_start_line": 10,
            "func_end_line": 14,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/main-process/parse-command-line.js",
            "name": "write",
            "line": 78,
            "func_location": "parseCommandLine",
            "func_start_line": 7,
            "func_end_line": 127,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js",
            "name": "Clipboard.write",
            "start_line": 42,
            "end_line": 46,
            "comment": [
                " Public: Write the given text to the clipboard.",
                "",
                " The metadata associated with the text is available by calling",
                " {::readWithMetadata}.",
                "",
                " * `text` The {String} to store.",
                " * `metadata` (optional) The additional info to associate with the text."
            ],
            "params": [
                "text",
                "metadata"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 198,
            "func_location": "TextEditorComponent.pixelPositionForScreenPosition",
            "func_start_line": 193,
            "func_end_line": 202,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "set",
            "line": 875,
            "func_location": "Config.pushAtKeyPath",
            "func_start_line": 871,
            "func_end_line": 877,
            "args": [
                "keyPath",
                "arrayValue"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.set",
            "start_line": 687,
            "end_line": 722,
            "comment": [
                " Essential: Sets the value for a configuration setting.",
                "",
                " This value is stored in Atom's internal configuration file.",
                "",
                " ### Examples",
                "",
                " You might want to change the themes programmatically:",
                "",
                " ```coffee",
                " atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax'])",
                " ```",
                "",
                " You can also set scoped settings. For example, you might want change the",
                " `editor.tabLength` only for ruby files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                "",
                " # Set ruby to 2",
                " atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true",
                "",
                " # Notice it's only set to 2 in the case of ruby",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                " ```",
                "",
                " * `keyPath` The {String} name of the key.",
                " * `value` The value of the setting. Passing `undefined` will revert the",
                "   setting to the default value.",
                " * `options` (optional) {Object}",
                "   * `scopeSelector` (optional) {String}. eg. '.source.ruby'",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "   * `source` (optional) {String} The name of a file with which the setting",
                "     is associated. Defaults to the user's config file.",
                "",
                " Returns a {Boolean}",
                " * `true` if the value was set.",
                " * `false` if the value was not able to be coerced to the type specified in the setting's schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "call",
            "line": 519,
            "func_location": "Tooltip.prototype.recalculatePosition",
            "func_start_line": 515,
            "func_end_line": 548,
            "args": [
                null,
                "tip",
                ".element"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/ipc-helpers.js",
            "name": "exports.call",
            "start_line": 13,
            "end_line": 29,
            "comment": [],
            "params": [
                "channel",
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "replace",
            "line": 524,
            "func_location": "Tooltip.prototype.recalculatePosition",
            "func_start_line": 515,
            "func_end_line": 548,
            "args": [
                "autoToken",
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 535,
            "func_location": "GitRepository.refreshIndex",
            "func_start_line": 534,
            "func_end_line": 536,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "getRepo",
            "line": 209,
            "func_location": "GitRepository.relativize",
            "func_start_line": 208,
            "func_end_line": 210,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/git-repository.js",
            "name": "GitRepository.getRepo",
            "start_line": 524,
            "end_line": 530,
            "comment": [
                " Returns the corresponding {Repository}"
            ],
            "params": [
                "path"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "remove",
            "line": 890,
            "func_location": "Config.removeAtKeyPath",
            "func_start_line": 887,
            "func_end_line": 893,
            "args": [
                "arrayValue",
                "value"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "set",
            "line": 891,
            "func_location": "Config.removeAtKeyPath",
            "func_start_line": 887,
            "func_end_line": 893,
            "args": [
                "keyPath",
                "arrayValue"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.set",
            "start_line": 687,
            "end_line": 722,
            "comment": [
                " Essential: Sets the value for a configuration setting.",
                "",
                " This value is stored in Atom's internal configuration file.",
                "",
                " ### Examples",
                "",
                " You might want to change the themes programmatically:",
                "",
                " ```coffee",
                " atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax'])",
                " ```",
                "",
                " You can also set scoped settings. For example, you might want change the",
                " `editor.tabLength` only for ruby files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                "",
                " # Set ruby to 2",
                " atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true",
                "",
                " # Notice it's only set to 2 in the case of ruby",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                " ```",
                "",
                " * `keyPath` The {String} name of the key.",
                " * `value` The value of the setting. Passing `undefined` will revert the",
                "   setting to the default value.",
                " * `options` (optional) {Object}",
                "   * `scopeSelector` (optional) {String}. eg. '.source.ruby'",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "   * `source` (optional) {String} The name of a file with which the setting",
                "     is associated. Defaults to the user's config file.",
                "",
                " Returns a {Boolean}",
                " * `true` if the value was set.",
                " * `false` if the value was not able to be coerced to the type specified in the setting's schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "replace",
            "line": 492,
            "func_location": "TextEditorComponent.render",
            "func_start_line": 451,
            "func_end_line": 521,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js",
            "name": "loadStylesheet",
            "line": 170,
            "func_location": "ThemeManager.requireStylesheet",
            "func_start_line": 167,
            "func_end_line": 175,
            "args": [
                "fullPath"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js",
            "name": "ThemeManager.loadStylesheet",
            "start_line": 241,
            "end_line": 247,
            "comment": [],
            "params": [
                "stylesheetPath",
                "importFallbackVariables"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/module-cache.js",
            "name": "resolve",
            "line": 180,
            "func_location": "resolveFilePath",
            "func_start_line": 175,
            "func_end_line": 195,
            "args": [
                null,
                "relativePath"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-compile-cache.js",
            "name": "require.resolve",
            "start_line": 49,
            "end_line": 51,
            "comment": [],
            "params": [
                "request"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/compile-cache.js",
            "name": "warn",
            "line": 149,
            "func_location": "retrieveSourceMap",
            "func_start_line": 137,
            "func_end_line": 190,
            "args": [
                {
                    "type": "string"
                },
                "error.stack"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/compile-cache.js",
            "name": "warn",
            "line": 159,
            "func_location": "retrieveSourceMap",
            "func_start_line": 137,
            "func_end_line": 190,
            "args": [
                {
                    "type": "string"
                },
                "error.stack"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/compile-cache.js",
            "name": "warn",
            "line": 182,
            "func_location": "retrieveSourceMap",
            "func_start_line": 137,
            "func_end_line": 190,
            "args": [
                {
                    "type": "string"
                },
                "error.stack"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "console.warn",
            "start_line": 82,
            "end_line": 85,
            "comment": [],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/pane-container-element.js",
            "name": "remove",
            "line": 22,
            "func_location": "PaneContainerElement.rootChanged",
            "func_start_line": 19,
            "func_end_line": 31,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 542,
            "func_location": "TextEditor.scheduleComponentUpdate",
            "func_start_line": 541,
            "func_end_line": 543,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "updateSync",
            "line": 212,
            "func_location": "TextEditorComponent.scheduleUpdate",
            "func_start_line": 204,
            "func_end_line": 219,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.updateSync",
            "start_line": 221,
            "end_line": 289,
            "comment": [],
            "params": [
                "useScheduler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "makeValueConformToSchema",
            "line": 706,
            "func_location": "Config.set",
            "func_start_line": 687,
            "func_end_line": 722,
            "args": [
                "keyPath",
                "value"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.makeValueConformToSchema",
            "start_line": 1164,
            "end_line": 1178,
            "comment": [],
            "params": [
                "keyPath",
                "value",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "setRawScopedValue",
            "line": 713,
            "func_location": "Config.set",
            "func_start_line": 687,
            "func_end_line": 722,
            "args": [
                "keyPath",
                "value",
                "source",
                "scopeSelector"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.setRawScopedValue",
            "start_line": 1231,
            "end_line": 1242,
            "comment": [],
            "params": [
                "keyPath",
                "value",
                "source",
                "selector",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/protocol-handler-installer.js",
            "name": "setAsDefaultProtocolClient",
            "line": 21,
            "func_location": "ProtocolHandlerInstaller.setAsDefaultProtocolClient",
            "func_start_line": 18,
            "func_end_line": 22,
            "args": [
                {
                    "type": "string"
                },
                "process.execPath",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/protocol-handler-installer.js",
            "name": "ProtocolHandlerInstaller.setAsDefaultProtocolClient",
            "start_line": 18,
            "end_line": 22,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "remove",
            "line": 357,
            "func_location": "Tooltip.prototype.setContent",
            "func_start_line": 338,
            "func_end_line": 358,
            "args": [
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "makeValueConformToSchema",
            "line": 1084,
            "func_location": "Config.setDefaults",
            "func_start_line": 1070,
            "func_end_line": 1090,
            "args": [
                "keyPath",
                "defaults"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.makeValueConformToSchema",
            "start_line": 1164,
            "end_line": 1178,
            "comment": [],
            "params": [
                "keyPath",
                "value",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-element.js",
            "name": "scheduleUpdate",
            "line": 193,
            "func_location": "TextEditorElement.setScrollLeft",
            "func_start_line": 190,
            "func_end_line": 194,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2878,
            "func_location": "TextEditorComponent.setScrollLeftColumn",
            "func_start_line": 2874,
            "func_end_line": 2885,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-element.js",
            "name": "scheduleUpdate",
            "line": 175,
            "func_location": "TextEditorElement.setScrollTop",
            "func_start_line": 172,
            "func_end_line": 176,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 2857,
            "func_location": "TextEditorComponent.setScrollTopRow",
            "func_start_line": 2853,
            "func_end_line": 2864,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "line": 137,
            "func_location": "setTableDefaults",
            "func_start_line": 129,
            "func_end_line": 152,
            "args": [
                "typeTable",
                "defaultTypeTable"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/syntax-scope-map.js",
            "name": "mergeTable",
            "start_line": 154,
            "end_line": 174,
            "comment": [],
            "params": [
                "table",
                "defaultTable",
                "mergeIndices"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/package.js",
            "name": "getItem",
            "line": 156,
            "func_location": "Package.shouldRequireMainModuleOnLoad",
            "func_start_line": 150,
            "func_end_line": 158,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/panel.js",
            "name": "Panel.getItem",
            "start_line": 76,
            "end_line": 78,
            "comment": [
                "\r\n  Section: Panel Details\r\n  ",
                " Public: Returns the panel's item."
            ],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "replace",
            "line": 244,
            "func_location": "Tooltip.prototype.show",
            "func_start_line": 218,
            "func_end_line": 281,
            "args": [
                "autoToken",
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "remove",
            "line": 246,
            "func_location": "Tooltip.prototype.show",
            "func_start_line": 218,
            "func_end_line": 281,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "leave",
            "line": 279,
            "func_location": "Tooltip.prototype.show",
            "func_start_line": 218,
            "func_end_line": 281,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "Tooltip.prototype.leave",
            "start_line": 195,
            "end_line": 216,
            "comment": [],
            "params": [
                "event"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getCurrentLineBufferRange",
            "line": 432,
            "func_location": "Cursor.skipLeadingWhitespace",
            "func_start_line": 430,
            "func_end_line": 439,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.getCurrentLineBufferRange",
            "start_line": 623,
            "end_line": 625,
            "comment": [
                " Public: Returns the buffer Range for the current line.",
                "",
                " * `options` (optional) {Object}",
                "   * `includeNewline` A {Boolean} which controls whether the Range should",
                "     include the newline."
            ],
            "params": [
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "setBufferPosition",
            "line": 438,
            "func_location": "Cursor.skipLeadingWhitespace",
            "func_start_line": 430,
            "func_end_line": 439,
            "args": [
                "endOfLeadingWhitespace"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "Cursor.setBufferPosition",
            "start_line": 84,
            "end_line": 88,
            "comment": [
                " Public: Moves a cursor to a given buffer position.",
                "",
                " * `bufferPosition` {Array} of two numbers: the buffer row, and the buffer column.",
                " * `options` (optional) {Object} with the following keys:",
                "   * `autoscroll` {Boolean} indicating whether to autoscroll to the new",
                "     position. Defaults to `true` if this is the most recently added cursor,",
                "     `false` otherwise."
            ],
            "params": [
                "bufferPosition",
                "options"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/buffered-process.js",
            "name": "clone",
            "line": 99,
            "func_location": "BufferedProcess.spawnWithEscapedWindowsArgs",
            "func_start_line": 79,
            "func_end_line": 103,
            "args": [
                "options"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/color.js",
            "name": "Color.clone",
            "start_line": 111,
            "end_line": 113,
            "comment": [],
            "params": []
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 1997,
            "func_location": "TextEditorComponent.stopCursorBlinking",
            "func_start_line": 1991,
            "func_end_line": 1999,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/theme-manager.js",
            "name": "replace",
            "line": 229,
            "func_location": "ThemeManager.stylesheetElementForId",
            "func_start_line": 228,
            "func_end_line": 231,
            "args": [
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/project.js",
            "name": "Project.replace",
            "start_line": 82,
            "end_line": 99,
            "comment": [
                " Layers the contents of a project's file's config",
                " on top of the current global config."
            ],
            "params": [
                "projectSpecification"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/pane-element.js",
            "name": "addEventListener",
            "line": 70,
            "func_location": "PaneElement.subscribeToDOMEvents",
            "func_start_line": 32,
            "func_end_line": 72,
            "args": [
                {
                    "type": "string"
                },
                "handleDragOver"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/pane-element.js",
            "name": "addEventListener",
            "line": 71,
            "func_location": "PaneElement.subscribeToDOMEvents",
            "func_start_line": 32,
            "func_end_line": 72,
            "args": [
                {
                    "type": "string"
                },
                "handleDrop"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/window-event-handler.js",
            "name": "WindowEventHandler.addEventListener",
            "start_line": 102,
            "end_line": 107,
            "comment": [],
            "params": [
                "target",
                "eventName",
                "handler"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "enter",
            "line": 493,
            "func_location": "Tooltip.prototype.toggle",
            "func_start_line": 485,
            "func_end_line": 498,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "Tooltip.prototype.enter",
            "start_line": 157,
            "end_line": 185,
            "comment": [],
            "params": [
                "event"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "leave",
            "line": 494,
            "func_location": "Tooltip.prototype.toggle",
            "func_start_line": 485,
            "func_end_line": 498,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "Tooltip.prototype.leave",
            "start_line": 195,
            "end_line": 216,
            "comment": [],
            "params": [
                "event"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "leave",
            "line": 496,
            "func_location": "Tooltip.prototype.toggle",
            "func_start_line": 485,
            "func_end_line": 498,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "Tooltip.prototype.leave",
            "start_line": 195,
            "end_line": 216,
            "comment": [],
            "params": [
                "event"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "enter",
            "line": 496,
            "func_location": "Tooltip.prototype.toggle",
            "func_start_line": 485,
            "func_end_line": 498,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/tooltip.js",
            "name": "Tooltip.prototype.enter",
            "start_line": 157,
            "end_line": 185,
            "comment": [],
            "params": [
                "event"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "set",
            "line": 746,
            "func_location": "Config.unset",
            "func_start_line": 730,
            "func_end_line": 766,
            "args": [
                {
                    "type": "object"
                },
                "settings",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.set",
            "start_line": 687,
            "end_line": 722,
            "comment": [
                " Essential: Sets the value for a configuration setting.",
                "",
                " This value is stored in Atom's internal configuration file.",
                "",
                " ### Examples",
                "",
                " You might want to change the themes programmatically:",
                "",
                " ```coffee",
                " atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax'])",
                " ```",
                "",
                " You can also set scoped settings. For example, you might want change the",
                " `editor.tabLength` only for ruby files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                "",
                " # Set ruby to 2",
                " atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true",
                "",
                " # Notice it's only set to 2 in the case of ruby",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                " ```",
                "",
                " * `keyPath` The {String} name of the key.",
                " * `value` The value of the setting. Passing `undefined` will revert the",
                "   setting to the default value.",
                " * `options` (optional) {Object}",
                "   * `scopeSelector` (optional) {String}. eg. '.source.ruby'",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "   * `source` (optional) {String} The name of a file with which the setting",
                "     is associated. Defaults to the user's config file.",
                "",
                " Returns a {Boolean}",
                " * `true` if the value was set.",
                " * `false` if the value was not able to be coerced to the type specified in the setting's schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "set",
            "line": 763,
            "func_location": "Config.unset",
            "func_start_line": 730,
            "func_end_line": 766,
            "args": [
                "keyPath",
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.set",
            "start_line": 687,
            "end_line": 722,
            "comment": [
                " Essential: Sets the value for a configuration setting.",
                "",
                " This value is stored in Atom's internal configuration file.",
                "",
                " ### Examples",
                "",
                " You might want to change the themes programmatically:",
                "",
                " ```coffee",
                " atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax'])",
                " ```",
                "",
                " You can also set scoped settings. For example, you might want change the",
                " `editor.tabLength` only for ruby files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                "",
                " # Set ruby to 2",
                " atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true",
                "",
                " # Notice it's only set to 2 in the case of ruby",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                " ```",
                "",
                " * `keyPath` The {String} name of the key.",
                " * `value` The value of the setting. Passing `undefined` will revert the",
                "   setting to the default value.",
                " * `options` (optional) {Object}",
                "   * `scopeSelector` (optional) {String}. eg. '.source.ruby'",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "   * `source` (optional) {String} The name of a file with which the setting",
                "     is associated. Defaults to the user's config file.",
                "",
                " Returns a {Boolean}",
                " * `true` if the value was set.",
                " * `false` if the value was not able to be coerced to the type specified in the setting's schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "set",
            "line": 883,
            "func_location": "Config.unshiftAtKeyPath",
            "func_start_line": 879,
            "func_end_line": 885,
            "args": [
                "keyPath",
                "arrayValue"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/config.js",
            "name": "Config.set",
            "start_line": 687,
            "end_line": 722,
            "comment": [
                " Essential: Sets the value for a configuration setting.",
                "",
                " This value is stored in Atom's internal configuration file.",
                "",
                " ### Examples",
                "",
                " You might want to change the themes programmatically:",
                "",
                " ```coffee",
                " atom.config.set('core.themes', ['atom-light-ui', 'atom-light-syntax'])",
                " ```",
                "",
                " You can also set scoped settings. For example, you might want change the",
                " `editor.tabLength` only for ruby files.",
                "",
                " ```coffee",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                "",
                " # Set ruby to 2",
                " atom.config.set('editor.tabLength', 2, scopeSelector: '.source.ruby') # => true",
                "",
                " # Notice it's only set to 2 in the case of ruby",
                " atom.config.get('editor.tabLength') # => 4",
                " atom.config.get('editor.tabLength', scope: ['source.ruby']) # => 2",
                " atom.config.get('editor.tabLength', scope: ['source.js']) # => 4",
                " ```",
                "",
                " * `keyPath` The {String} name of the key.",
                " * `value` The value of the setting. Passing `undefined` will revert the",
                "   setting to the default value.",
                " * `options` (optional) {Object}",
                "   * `scopeSelector` (optional) {String}. eg. '.source.ruby'",
                "     See [the scopes docs](http://flight-manual.atom.io/behind-atom/sections/scoped-settings-scopes-and-scope-descriptors/)",
                "     for more information.",
                "   * `source` (optional) {String} The name of a file with which the setting",
                "     is associated. Defaults to the user's config file.",
                "",
                " Returns a {Boolean}",
                " * `true` if the value was set.",
                " * `false` if the value was not able to be coerced to the type specified in the setting's schema."
            ],
            "params": [
                "args"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "scheduleUpdate",
            "line": 190,
            "func_location": "TextEditorComponent.update",
            "func_start_line": 184,
            "func_end_line": 191,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3435,
            "func_location": "LineNumberComponent.update",
            "func_start_line": 3411,
            "func_end_line": 3445,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3959,
            "func_location": "LineComponent.update",
            "func_start_line": 3946,
            "func_end_line": 3962,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "remove",
            "line": 3530,
            "func_location": "CustomGutterDecorationComponent.update",
            "func_start_line": 3519,
            "func_end_line": 3536,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-registry.js",
            "name": "TextEditorRegistry.remove",
            "start_line": 122,
            "end_line": 126,
            "comment": [
                " Remove a `TextEditor`.",
                "",
                " * `editor` The editor to remove.",
                "",
                " Returns a {Boolean} indicating whether the editor was successfully removed."
            ],
            "params": [
                "editor"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 414,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 423,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 432,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 466,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 502,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "scheduleUpdate",
            "line": 521,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.scheduleUpdate",
            "start_line": 204,
            "end_line": 219,
            "comment": [],
            "params": [
                "nextUpdateOnlyBlinksCursors"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor.js",
            "name": "resolve",
            "line": 537,
            "func_location": "TextEditor.update",
            "func_start_line": 320,
            "func_end_line": 539,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/native-compile-cache.js",
            "name": "require.resolve",
            "start_line": 49,
            "end_line": 51,
            "comment": [],
            "params": [
                "request"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "setScrollTopRow",
            "line": 256,
            "func_location": "TextEditorComponent.updateSync",
            "func_start_line": 221,
            "func_end_line": 289,
            "args": [
                "scrollTopRow"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.setScrollTopRow",
            "start_line": 2853,
            "end_line": 2864,
            "comment": [],
            "params": [
                "scrollTopRow",
                "scheduleUpdate"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "setScrollLeftColumn",
            "line": 259,
            "func_location": "TextEditorComponent.updateSync",
            "func_start_line": 221,
            "func_end_line": 289,
            "args": [
                "scrollLeftColumn"
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-editor-component.js",
            "name": "TextEditorComponent.setScrollLeftColumn",
            "start_line": 2874,
            "end_line": 2885,
            "comment": [],
            "params": [
                "scrollLeftColumn",
                "scheduleUpdate"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/initialize-benchmark-window.js",
            "name": "write",
            "line": 84,
            "func_location": "console.warn",
            "func_start_line": 82,
            "func_end_line": 85,
            "args": [
                null
            ]
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/clipboard.js",
            "name": "Clipboard.write",
            "start_line": 42,
            "end_line": 46,
            "comment": [
                " Public: Write the given text to the clipboard.",
                "",
                " The metadata associated with the text is available by calling",
                " {::readWithMetadata}.",
                "",
                " * `text` The {String} to store.",
                " * `metadata` (optional) The additional info to associate with the text."
            ],
            "params": [
                "text",
                "metadata"
            ]
        }
    },
    {
        "call_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/cursor.js",
            "name": "getNonWordCharacters",
            "line": 675,
            "func_location": "Cursor.wordRegExp",
            "func_start_line": 674,
            "func_end_line": 679,
            "args": []
        },
        "func_info": {
            "file": "E:/research/parameterMismatch/parametermismatch/dataset/atom/src/text-mate-language-mode.js",
            "name": "TextMateLanguageMode.getNonWordCharacters",
            "start_line": 63,
            "end_line": 66,
            "comment": [],
            "params": [
                "position"
            ]
        }
    }
]