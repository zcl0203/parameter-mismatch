[{"comment": "", "kind": "function", "name": "withGL", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000107", "name": "withGL"}, "columnno": 0, "filename": "getLocalBounds.js", "range": [764, 843], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/tools/integration-tests/test/display"}, "params": [], "longname": "withGL", "scope": "global"}, {"comment": "", "kind": "function", "name": "sayHello", "memberof": "<anonymous>~renderer", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100001092", "name": "renderer.sayHello"}, "columnno": 8, "filename": "getLocalBounds.js", "range": [6009, 6050], "lineno": 209, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/tools/integration-tests/test/display"}, "longname": "<anonymous>~renderer.sayHello", "scope": "static"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["PIXI"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "module.exports"}, "columnno": 0, "filename": "deprecated.js", "range": [65, 24746], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "deprecated", "undocumented": true, "meta": {"code": {"paramnames": ["PIXI"], "type": "FunctionDeclaration", "id": "astnode100000011", "name": "deprecated"}, "vars": {"": null, "PIXI.extras": "PIXI.extras", "PIXI.loaders": "PIXI.loaders", "BaseTexture.fromCanvas": "BaseTexture.fromCanvas", "Texture.fromFrame": "Texture.fromFrame", "BaseTexture.fromImage": "BaseTexture.fromImage", "PIXI.Container.prototype.renderWebGL": "PIXI.Container#renderWebGL", "PIXI.DisplayObject.prototype.renderWebGL": "PIXI.DisplayObject#renderWebGL", "PIXI.ticker": "PIXI.ticker", "Texture.fromImage": "Texture.fromImage", "Sprite.fromCanvas": "Sprite.fromCanvas", "PIXI.Rectangle.prototype.copy": "PIXI.Rectangle#copy", "BaseTexture.fromSVG": "BaseTexture.fromSVG", "Sprite.fromVideo": "Sprite.fromVideo", "Sprite.fromSVG": "Sprite.fromSVG", "PIXI.Container.prototype._renderWebGL": "PIXI.Container#_renderWebGL", "PIXI.Loader.addPixiMiddleware": "PIXI.Loader.addPixiMiddleware", "PIXI.particles": "PIXI.particles", "BlurYFilter": null, "PIXI.Matrix.prototype.copy": "PIXI.Matrix#copy", "textureFrom": "deprecated~textureFrom", "PIXI.ObservablePoint.prototype.copy": "PIXI.ObservablePoint#copy", "BlurXFilter": null, "Texture.fromCanvas": "Texture.fromCanvas", "undefined": null, "PIXI.Point.prototype.copy": "PIXI.Point#copy", "Sprite.fromFrame": "Sprite.fromFrame", "spriteFrom": "deprecated~spriteFrom", "PIXI.Container.prototype.renderAdvancedWebGL": "PIXI.Container#renderAdvancedWebGL", "PIXI.mesh": "PIXI.mesh", "Texture.fromSVG": "Texture.fromSVG", "Texture.fromVideo": "Texture.fromVideo", "Sprite.fromImage": "Sprite.fromImage"}, "columnno": 15, "filename": "deprecated.js", "range": [80, 24746], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "params": [], "longname": "deprecated", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "memberof": "SVG_SIZE", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000024", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [350, 529], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "SVG_SIZE.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "TransformStatic", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000040", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [711, 878], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "TransformStatic.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "TransformBase", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000054", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [1056, 1221], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "TransformBase.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "TRANSFORM_MODE", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000068", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [1596, 1753], "lineno": 65, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "TRANSFORM_MODE.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "WebGLRenderer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000084", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [1930, 2084], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "WebGLRenderer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "CanvasRenderTarget", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000098", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [2287, 2478], "lineno": 93, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "CanvasRenderTarget.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "loader", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000114", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [2697, 2854], "lineno": 109, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "loader.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "FilterManager", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000130", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [3043, 3222], "lineno": 123, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "FilterManager.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "TilingSprite", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000161", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [3703, 3871], "lineno": 147, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "TilingSprite.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "TilingSpriteRenderer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000175", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [4080, 4272], "lineno": 160, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "TilingSpriteRenderer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "AnimatedSprite", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000189", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [4463, 4637], "lineno": 173, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "AnimatedSprite.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "BitmapText", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000203", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [4816, 4978], "lineno": 186, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "BitmapText.get", "scope": "static"}, {"comment": "/**\n         * @function PIXI.utils.getSvgSize\n         * @see PIXI.SVGResource.getSize\n         * @deprecated since 5.0.0\n         */", "kind": "function", "name": "getSvgSize", "deprecated": "since 5.0.0", "longname": "PIXI.utils.getSvgSize", "see": ["PIXI.SVGResource.getSize"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 196, "filename": "deprecated.js"}, "memberof": "PIXI.utils", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "getSvgSize", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000226", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [5219, 5398], "lineno": 202, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "getSvgSize.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Mesh", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000257", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [5790, 5944], "lineno": 225, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Mesh.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "NineSlicePlane", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000271", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [6133, 6305], "lineno": 238, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "NineSlicePlane.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Plane", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000285", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [6473, 6630], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Plane.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Rope", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000299", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [6795, 6949], "lineno": 264, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Rope.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "RawMesh", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000313", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [7114, 7259], "lineno": 277, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "RawMesh.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "CanvasMeshRenderer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000327", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [7460, 7644], "lineno": 290, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "CanvasMeshRenderer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "MeshRenderer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000341", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [7827, 7993], "lineno": 303, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "MeshRenderer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "ParticleContainer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000370", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [8460, 8646], "lineno": 327, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "ParticleContainer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "ParticleRenderer", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000384", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [8846, 9029], "lineno": 340, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "ParticleRenderer.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Ticker", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000413", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [9451, 9601], "lineno": 364, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Ticker.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "shared", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000427", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [9805, 9969], "lineno": 378, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "shared.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Loader", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000458", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [10373, 10524], "lineno": 401, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Loader.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "Resource", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000472", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [10704, 10873], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "Resource.get", "scope": "static"}, {"comment": "/**\n         * @function PIXI.loaders.bitmapFontParser\n         * @see PIXI.BitmapFontLoader.use\n         * @deprecated since 5.0.0\n         */", "kind": "function", "name": "bitmapFontParser", "deprecated": "since 5.0.0", "longname": "PIXI.loaders.bitmapFontParser", "see": ["PIXI.BitmapFontLoader.use"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 421, "filename": "deprecated.js"}, "memberof": "PIXI.loaders", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "bitmapFontParser", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000486", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [11078, 11267], "lineno": 427, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "bitmapFontParser.get", "scope": "static"}, {"comment": "/**\n         * @function PIXI.loaders.parseBitmapFontData\n         * @see PIXI.BitmapFontLoader.parse\n         * @deprecated since 5.0.0\n         */", "kind": "function", "name": "parseBitmapFontData", "deprecated": "since 5.0.0", "longname": "PIXI.loaders.parseBitmapFontData", "see": ["PIXI.BitmapFontLoader.parse"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 434, "filename": "deprecated.js"}, "memberof": "PIXI.loaders", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "parseBitmapFontData", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000502", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [11480, 11676], "lineno": 440, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "parseBitmapFontData.get", "scope": "static"}, {"comment": "/**\n         * @function PIXI.loaders.spritesheetParser\n         * @see PIXI.SpritesheetLoader.use\n         * @deprecated since 5.0.0\n         */", "kind": "function", "name": "spritesheetParser", "deprecated": "since 5.0.0", "longname": "PIXI.loaders.spritesheetParser", "see": ["PIXI.SpritesheetLoader.use"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 447, "filename": "deprecated.js"}, "memberof": "PIXI.loaders", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "spritesheetParser", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000518", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [11884, 12076], "lineno": 453, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "spritesheetParser.get", "scope": "static"}, {"comment": "/**\n         * @function PIXI.loaders.getResourcePath\n         * @see PIXI.SpritesheetLoader.getResourcePath\n         * @deprecated since 5.0.0\n         */", "kind": "function", "name": "getResourcePath", "deprecated": "since 5.0.0", "longname": "PIXI.loaders.getResourcePath", "see": ["PIXI.SpritesheetLoader.getResourcePath"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 460, "filename": "deprecated.js"}, "memberof": "PIXI.loaders", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "getResourcePath", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000534", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [12292, 12506], "lineno": 466, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "getResourcePath.get", "scope": "static"}, {"comment": "/**\n     * @function PIXI.loaders.Loader.addPixiMiddleware\n     * @see PIXI.Loader.registerPlugin\n     * @deprecated since 5.0.0\n     * @param {function} middleware\n     */", "kind": "function", "name": "addPixiMiddleware", "deprecated": "since 5.0.0", "longname": "PIXI.loaders.Loader.addPixiMiddleware", "see": ["PIXI.Loader.registerPlugin"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 475, "filename": "deprecated.js"}, "params": [{"type": {"names": ["function"]}, "name": "middleware"}], "memberof": "PIXI.loaders.Loader", "scope": "static"}, {"comment": "", "kind": "function", "name": "addPixiMiddleware", "memberof": "PIXI.Loader", "undocumented": true, "meta": {"code": {"paramnames": ["middleware"], "type": "FunctionExpression", "id": "astnode100000549", "value": "addPixiMiddleware", "name": "PIXI.Loader.addPixiMiddleware"}, "columnno": 4, "filename": "deprecated.js", "range": [12709, 12986], "lineno": 481, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Loader.addPixiMiddleware", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000587", "name": "get"}, "columnno": 8, "filename": "deprecated.js", "range": [13175, 13334], "lineno": 494, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "get", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000611", "name": "get"}, "columnno": 8, "filename": "deprecated.js", "range": [13531, 13690], "lineno": 508, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "get", "scope": "global"}, {"comment": "/**\n     * @method PIXI.Container#_renderWebGL\n     * @private\n     * @deprecated since 5.0.0\n     * @see PIXI.Container#render\n     * @param {PIXI.Renderer} renderer Instance of renderer\n     */", "kind": "function", "name": "_renderWebGL", "deprecated": "since 5.0.0", "longname": "PIXI.Container#_renderWebGL", "access": "private", "see": ["PIXI.Container#render"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 516, "filename": "deprecated.js"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance of renderer", "name": "renderer"}], "memberof": "PIXI.Container", "scope": "instance"}, {"comment": "", "kind": "function", "name": "_renderWebGL", "memberof": "PIXI.Container", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000626", "value": "_renderWebGL", "name": "PIXI.Container.prototype._renderWebGL"}, "columnno": 4, "filename": "deprecated.js", "range": [13905, 14113], "lineno": 523, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Container#_renderWebGL", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.Container#renderWebGL\n     * @deprecated since 5.0.0\n     * @see PIXI.Container#render\n     * @param {PIXI.Renderer} renderer Instance of renderer\n     */", "kind": "function", "name": "renderWebGL", "deprecated": "since 5.0.0", "longname": "PIXI.Container#renderWebGL", "see": ["PIXI.Container#render"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 530, "filename": "deprecated.js"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance of renderer", "name": "renderer"}], "memberof": "PIXI.Container", "scope": "instance"}, {"comment": "", "kind": "function", "name": "renderWebGL", "memberof": "PIXI.Container", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000650", "value": "renderWebGL", "name": "PIXI.Container.prototype.renderWebGL"}, "columnno": 4, "filename": "deprecated.js", "range": [14303, 14506], "lineno": 536, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Container#renderWebGL", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.DisplayObject#renderWebGL\n     * @deprecated since 5.0.0\n     * @see PIXI.DisplayObject#render\n     * @param {PIXI.Renderer} renderer Instance of renderer\n     */", "kind": "function", "name": "renderWebGL", "deprecated": "since 5.0.0", "longname": "PIXI.DisplayObject#renderWebGL", "see": ["PIXI.DisplayObject#render"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 543, "filename": "deprecated.js"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance of renderer", "name": "renderer"}], "memberof": "PIXI.DisplayObject", "scope": "instance"}, {"comment": "", "kind": "function", "name": "renderWebGL", "memberof": "PIXI.DisplayObject", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000674", "value": "renderWebGL", "name": "PIXI.DisplayObject.prototype.renderWebGL"}, "columnno": 4, "filename": "deprecated.js", "range": [14704, 14919], "lineno": 549, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.DisplayObject#renderWebGL", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.Container#renderAdvancedWebGL\n     * @deprecated since 5.0.0\n     * @see PIXI.Container#renderAdvanced\n     * @param {PIXI.Renderer} renderer Instance of renderer\n     */", "kind": "function", "name": "renderAdvancedWebGL", "deprecated": "since 5.0.0", "longname": "PIXI.Container#renderAdvancedWebGL", "see": ["PIXI.Container#renderAdvanced"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 556, "filename": "deprecated.js"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance of renderer", "name": "renderer"}], "memberof": "PIXI.Container", "scope": "instance"}, {"comment": "", "kind": "function", "name": "renderAdvancedWebGL", "memberof": "PIXI.Container", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000698", "value": "renderAdvancedWebGL", "name": "PIXI.Container.prototype.renderAdvancedWebGL"}, "columnno": 4, "filename": "deprecated.js", "range": [15125, 15368], "lineno": 562, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Container#renderAdvancedWebGL", "scope": "instance"}, {"comment": "", "kind": "function", "name": "get", "memberof": "PIXI.settings.TRANSFORM_MODE", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000732", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [15699, 15842], "lineno": 580, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.settings.TRANSFORM_MODE.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "set", "memberof": "PIXI.settings.TRANSFORM_MODE", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000742", "name": "set"}, "columnno": 12, "filename": "deprecated.js", "range": [15856, 15972], "lineno": 586, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.settings.TRANSFORM_MODE.set", "scope": "static"}, {"comment": "/**\n     * @method fromImage\n     * @static\n     * @memberof PIXI.BaseTexture\n     * @deprecated since 5.0.0\n     * @see PIXI.BaseTexture.from\n     */", "kind": "function", "name": "fromImage", "memberof": "PIXI.BaseTexture", "longname": "PIXI.BaseTexture.fromImage", "see": ["PIXI.BaseTexture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 595, "filename": "deprecated.js"}, "deprecated": "since 5.0.0", "scope": "static"}, {"comment": "", "kind": "function", "name": "fromImage", "memberof": "BaseTexture", "undocumented": true, "meta": {"code": {"paramnames": ["canvas", "crossorigin", "scaleMode", "scale"], "type": "FunctionExpression", "id": "astnode100000757", "value": "fromImage", "name": "BaseTexture.fromImage"}, "vars": {"resourceOptions": "BaseTexture.fromImage~resourceOptions"}, "columnno": 4, "filename": "deprecated.js", "range": [16188, 16512], "lineno": 602, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "BaseTexture.fromImage", "scope": "static"}, {"comment": "/**\n     * @method fromCanvas\n     * @static\n     * @memberof PIXI.BaseTexture\n     * @deprecated since 5.0.0\n     * @see PIXI.BaseTexture.from\n     */", "kind": "function", "name": "fromCanvas", "memberof": "PIXI.BaseTexture", "longname": "PIXI.BaseTexture.fromCanvas", "see": ["PIXI.BaseTexture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 611, "filename": "deprecated.js"}, "deprecated": "since 5.0.0", "scope": "static"}, {"comment": "", "kind": "function", "name": "fromCanvas", "memberof": "BaseTexture", "undocumented": true, "meta": {"code": {"paramnames": ["canvas", "scaleMode"], "type": "FunctionExpression", "id": "astnode100000793", "value": "fromCanvas", "name": "BaseTexture.fromCanvas"}, "columnno": 4, "filename": "deprecated.js", "range": [16675, 16908], "lineno": 618, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "BaseTexture.fromCanvas", "scope": "static"}, {"comment": "/**\n     * @method fromSVG\n     * @static\n     * @memberof PIXI.BaseTexture\n     * @deprecated since 5.0.0\n     * @see PIXI.BaseTexture.from\n     */", "kind": "function", "name": "fromSVG", "memberof": "PIXI.BaseTexture", "longname": "PIXI.BaseTexture.fromSVG", "see": ["PIXI.BaseTexture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 625, "filename": "deprecated.js"}, "deprecated": "since 5.0.0", "scope": "static"}, {"comment": "", "kind": "function", "name": "fromSVG", "memberof": "BaseTexture", "undocumented": true, "meta": {"code": {"paramnames": ["canvas", "crossorigin", "scaleMode", "scale"], "type": "FunctionExpression", "id": "astnode100000817", "value": "fromSVG", "name": "BaseTexture.fromSVG"}, "vars": {"resourceOptions": "BaseTexture.fromSVG~resourceOptions"}, "columnno": 4, "filename": "deprecated.js", "range": [17068, 17386], "lineno": 632, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "BaseTexture.fromSVG", "scope": "static"}, {"comment": "/**\n     * @method PIXI.Point#copy\n     * @deprecated since 5.0.0\n     * @see PIXI.Point#copyFrom\n     */", "kind": "function", "name": "copy", "deprecated": "since 5.0.0", "longname": "PIXI.Point#copy", "see": ["PIXI.Point#copyFrom"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 641, "filename": "deprecated.js"}, "memberof": "PIXI.Point", "scope": "instance"}, {"comment": "", "kind": "function", "name": "copy", "memberof": "PIXI.Point", "undocumented": true, "meta": {"code": {"paramnames": ["p"], "type": "FunctionExpression", "id": "astnode100000853", "value": "copy", "name": "PIXI.Point.prototype.copy"}, "columnno": 4, "filename": "deprecated.js", "range": [17503, 17680], "lineno": 646, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Point#copy", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.ObservablePoint#copy\n     * @deprecated since 5.0.0\n     * @see PIXI.ObservablePoint#copyFrom\n     */", "kind": "function", "name": "copy", "deprecated": "since 5.0.0", "longname": "PIXI.ObservablePoint#copy", "see": ["PIXI.ObservablePoint#copyFrom"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 653, "filename": "deprecated.js"}, "memberof": "PIXI.ObservablePoint", "scope": "instance"}, {"comment": "", "kind": "function", "name": "copy", "memberof": "PIXI.ObservablePoint", "undocumented": true, "meta": {"code": {"paramnames": ["p"], "type": "FunctionExpression", "id": "astnode100000877", "value": "copy", "name": "PIXI.ObservablePoint.prototype.copy"}, "columnno": 4, "filename": "deprecated.js", "range": [17817, 18024], "lineno": 658, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.ObservablePoint#copy", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.Rectangle#copy\n     * @deprecated since 5.0.0\n     * @see PIXI.Rectangle#copyFrom\n     */", "kind": "function", "name": "copy", "deprecated": "since 5.0.0", "longname": "PIXI.Rectangle#copy", "see": ["PIXI.Rectangle#copyFrom"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 665, "filename": "deprecated.js"}, "memberof": "PIXI.Rectangle", "scope": "instance"}, {"comment": "", "kind": "function", "name": "copy", "memberof": "PIXI.Rectangle", "undocumented": true, "meta": {"code": {"paramnames": ["p"], "type": "FunctionExpression", "id": "astnode100000901", "value": "copy", "name": "PIXI.Rectangle.prototype.copy"}, "columnno": 4, "filename": "deprecated.js", "range": [18149, 18338], "lineno": 670, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Rectangle#copy", "scope": "instance"}, {"comment": "/**\n     * @method PIXI.Matrix#copy\n     * @deprecated since 5.0.0\n     * @see PIXI.Matrix#copyTo\n     */", "kind": "function", "name": "copy", "deprecated": "since 5.0.0", "longname": "PIXI.Matrix#copy", "see": ["PIXI.Matrix#copyTo"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 677, "filename": "deprecated.js"}, "memberof": "PIXI.Matrix", "scope": "instance"}, {"comment": "", "kind": "function", "name": "copy", "memberof": "PIXI.Matrix", "undocumented": true, "meta": {"code": {"paramnames": ["p"], "type": "FunctionExpression", "id": "astnode100000925", "value": "copy", "name": "PIXI.Matrix.prototype.copy"}, "columnno": 4, "filename": "deprecated.js", "range": [18455, 18631], "lineno": 682, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "PIXI.Matrix#copy", "scope": "instance"}, {"comment": "/**\n         * @method PIXI.FilterManager#getRenderTarget\n         * @deprecated since 5.0.0\n         * @see PIXI.systems.FilterSystem#getFilterTexture\n         */", "kind": "function", "name": "getRenderTarget", "deprecated": "since 5.0.0", "longname": "PIXI.FilterManager#getRenderTarget", "see": ["PIXI.systems.FilterSystem#getFilterTexture"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 690, "filename": "deprecated.js"}, "memberof": "PIXI.FilterManager", "scope": "instance"}, {"comment": "", "kind": "function", "name": "getRenderTarget", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000961", "name": "getRenderTarget"}, "columnno": 8, "filename": "deprecated.js", "range": [18871, 19095], "lineno": 695, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "getRenderTarget", "scope": "global"}, {"comment": "/**\n         * @method PIXI.FilterManager#returnRenderTarget\n         * @deprecated since 5.0.0\n         * @see PIXI.systems.FilterSystem#returnFilterTexture\n         */", "kind": "function", "name": "returnRenderTarget", "deprecated": "since 5.0.0", "longname": "PIXI.FilterManager#returnRenderTarget", "see": ["PIXI.systems.FilterSystem#returnFilterTexture"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 8, "lineno": 702, "filename": "deprecated.js"}, "memberof": "PIXI.FilterManager", "scope": "instance"}, {"comment": "", "kind": "function", "name": "returnRenderTarget", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000977", "name": "returnRenderTarget"}, "columnno": 8, "filename": "deprecated.js", "range": [19284, 19512], "lineno": 707, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "returnRenderTarget", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "memberof": "sourceFrame", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001005", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [19780, 19939], "lineno": 723, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "sourceFrame.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "memberof": "size", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001019", "name": "get"}, "columnno": 12, "filename": "deprecated.js", "range": [20135, 20282], "lineno": 737, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "size.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "spriteFrom", "memberof": "deprecated", "undocumented": true, "meta": {"code": {"paramnames": ["name", "source", "crossorigin", "scaleMode"], "type": "FunctionDeclaration", "id": "astnode100001110", "name": "spriteFrom"}, "columnno": 4, "filename": "deprecated.js", "range": [21432, 21744], "lineno": 786, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "params": [], "longname": "deprecated~spriteFrom", "scope": "inner"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @see PIXI.Sprite.from\n     * @method PIXI.Sprite.fromImage\n     * @return {PIXI.Sprite}\n     */", "kind": "function", "name": "fromImage", "deprecated": "since 5.0.0", "longname": "PIXI.Sprite.fromImage", "returns": [{"type": {"names": ["PIXI.Sprite"]}}], "see": ["PIXI.Sprite.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 798, "filename": "deprecated.js"}, "memberof": "PIXI.Sprite", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Sprite.fromSVG\n     * @see PIXI.Sprite.from\n     * @return {PIXI.Sprite}\n     */", "kind": "function", "name": "fromSVG", "deprecated": "since 5.0.0", "longname": "PIXI.Sprite.fromSVG", "returns": [{"type": {"names": ["PIXI.Sprite"]}}], "see": ["PIXI.Sprite.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 806, "filename": "deprecated.js"}, "memberof": "PIXI.Sprite", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Sprite.fromCanvas\n     * @see PIXI.Sprite.from\n     * @return {PIXI.Sprite}\n     */", "kind": "function", "name": "fromCanvas", "deprecated": "since 5.0.0", "longname": "PIXI.Sprite.fromCanvas", "returns": [{"type": {"names": ["PIXI.Sprite"]}}], "see": ["PIXI.Sprite.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 814, "filename": "deprecated.js"}, "memberof": "PIXI.Sprite", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Sprite.fromVideo\n     * @see PIXI.Sprite.from\n     * @return {PIXI.Sprite}\n     */", "kind": "function", "name": "fromVideo", "deprecated": "since 5.0.0", "longname": "PIXI.Sprite.fromVideo", "returns": [{"type": {"names": ["PIXI.Sprite"]}}], "see": ["PIXI.Sprite.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 822, "filename": "deprecated.js"}, "memberof": "PIXI.Sprite", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Sprite.fromFrame\n     * @see PIXI.Sprite.from\n     * @return {PIXI.Sprite}\n     */", "kind": "function", "name": "fromFrame", "deprecated": "since 5.0.0", "longname": "PIXI.Sprite.fromFrame", "returns": [{"type": {"names": ["PIXI.Sprite"]}}], "see": ["PIXI.Sprite.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 830, "filename": "deprecated.js"}, "memberof": "PIXI.Sprite", "scope": "static"}, {"comment": "", "kind": "function", "name": "textureFrom", "memberof": "deprecated", "undocumented": true, "meta": {"code": {"paramnames": ["name", "source", "crossorigin", "scaleMode"], "type": "FunctionDeclaration", "id": "astnode100001193", "name": "textureFrom"}, "columnno": 4, "filename": "deprecated.js", "range": [22817, 23133], "lineno": 839, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "params": [], "longname": "deprecated~textureFrom", "scope": "inner"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Texture.fromImage\n     * @see PIXI.Texture.from\n     * @return {PIXI.Texture}\n     */", "kind": "function", "name": "fromImage", "deprecated": "since 5.0.0", "longname": "PIXI.Texture.fromImage", "returns": [{"type": {"names": ["PIXI.Texture"]}}], "see": ["PIXI.Texture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 851, "filename": "deprecated.js"}, "memberof": "PIXI.Texture", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Texture.fromSVG\n     * @see PIXI.Texture.from\n     * @return {PIXI.Texture}\n     */", "kind": "function", "name": "fromSVG", "deprecated": "since 5.0.0", "longname": "PIXI.Texture.fromSVG", "returns": [{"type": {"names": ["PIXI.Texture"]}}], "see": ["PIXI.Texture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 859, "filename": "deprecated.js"}, "memberof": "PIXI.Texture", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Texture.fromCanvas\n     * @see PIXI.Texture.from\n     * @return {PIXI.Texture}\n     */", "kind": "function", "name": "fromCanvas", "deprecated": "since 5.0.0", "longname": "PIXI.Texture.fromCanvas", "returns": [{"type": {"names": ["PIXI.Texture"]}}], "see": ["PIXI.Texture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 867, "filename": "deprecated.js"}, "memberof": "PIXI.Texture", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Texture.fromVideo\n     * @see PIXI.Texture.from\n     * @return {PIXI.Texture}\n     */", "kind": "function", "name": "fromVideo", "deprecated": "since 5.0.0", "longname": "PIXI.Texture.fromVideo", "returns": [{"type": {"names": ["PIXI.Texture"]}}], "see": ["PIXI.Texture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 875, "filename": "deprecated.js"}, "memberof": "PIXI.Texture", "scope": "static"}, {"comment": "/**\n     * @deprecated since 5.0.0\n     * @method PIXI.Texture.fromFrame\n     * @see PIXI.Texture.from\n     * @return {PIXI.Texture}\n     */", "kind": "function", "name": "fromFrame", "deprecated": "since 5.0.0", "longname": "PIXI.Texture.fromFrame", "returns": [{"type": {"names": ["PIXI.Texture"]}}], "see": ["PIXI.Texture.from"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src", "columnno": 4, "lineno": 883, "filename": "deprecated.js"}, "memberof": "PIXI.Texture", "scope": "static"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001288", "name": "get"}, "columnno": 8, "filename": "deprecated.js", "range": [24401, 24560], "lineno": 897, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "get", "scope": "global"}, {"comment": "", "kind": "function", "name": "set", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001300", "name": "set"}, "vars": {"this.autoDensity": null}, "columnno": 8, "filename": "deprecated.js", "range": [24570, 24735], "lineno": 903, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/bundles/pixi.js/src"}, "longname": "set", "scope": "global"}, {"comment": "/**\n * Default property values of accessible objects\n * used by {@link PIXI.accessibility.AccessibilityManager}.\n *\n * @function accessibleTarget\n * @memberof PIXI.accessibility\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.accessibility.accessibleTarget\n *      );\n */", "kind": "function", "description": "Default property values of accessible objects\nused by {@link PIXI.accessibility.AccessibilityManager}.", "memberof": "PIXI.accessibility", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src", "columnno": 0, "lineno": 1, "filename": "accessibleTarget.js"}, "examples": ["function MyObject() {}\n\n     Object.assign(\n         MyObject.prototype,\n         PIXI.accessibility.accessibleTarget\n     );"], "longname": "PIXI.accessibility.accessibleTarget", "scope": "static", "name": "accessibleTarget"}, {"comment": "/**\n     * Creates the touch hooks.\n     *\n     */", "kind": "function", "description": "Creates the touch hooks.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000245", "name": "createTouchHook"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [3642, 4358], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [], "longname": "createTouchHook", "scope": "global", "name": "createTouchHook"}, {"comment": "/**\n     * Activating will cause the Accessibility layer to be shown. This is called when a user\n     * presses the tab key.\n     *\n     * @private\n     */", "kind": "function", "description": "Activating will cause the Accessibility layer to be shown. This is called when a user\npresses the tab key.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000366", "name": "activate"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [4524, 4985], "lineno": 159, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [], "longname": "activate", "scope": "global", "name": "activate"}, {"comment": "/**\n     * Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\n     * the mouse.\n     *\n     * @private\n     */", "kind": "function", "description": "Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\nthe mouse.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000439", "name": "deactivate"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [5150, 5620], "lineno": 185, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [], "longname": "deactivate", "scope": "global", "name": "deactivate"}, {"comment": "/**\n     * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n     *\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */", "kind": "function", "description": "This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.", "access": "private", "meta": {"code": {"paramnames": ["displayObject"], "type": "MethodDefinition", "id": "astnode100000512", "name": "updateAccessibleObjects"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [5857, 6424], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["PIXI.Container"]}, "description": "The DisplayObject to check.", "name": "displayObject"}], "longname": "updateAccessibleObjects", "scope": "global", "name": "updateAccessibleObjects"}, {"comment": "/**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     *\n     * @private\n     */", "kind": "function", "description": "Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000580", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [6581, 9408], "lineno": 241, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * TODO: docs.\n     *\n     * @param {Rectangle} hitArea - TODO docs\n     */", "kind": "function", "description": "TODO: docs.", "meta": {"code": {"paramnames": ["hitArea"], "type": "MethodDefinition", "id": "astnode100001025", "name": "capHitArea"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [9502, 10053], "lineno": 332, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["Rectangle"]}, "description": "TODO docs", "name": "hitArea"}], "longname": "capHitArea", "scope": "global", "name": "capHitArea"}, {"comment": "/**\n     * Adds a DisplayObject to the accessibility manager\n     *\n     * @private\n     * @param {DisplayObject} displayObject - The child to make accessible.\n     */", "kind": "function", "description": "Adds a DisplayObject to the accessibility manager", "access": "private", "meta": {"code": {"paramnames": ["displayObject"], "type": "MethodDefinition", "id": "astnode100001130", "name": "addChild"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [10231, 12700], "lineno": 363, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["DisplayObject"]}, "description": "The child to make accessible.", "name": "displayObject"}], "longname": "addChild", "scope": "global", "name": "addChild"}, {"comment": "/**\n     * Maps the div button press to pixi's InteractionManager (click)\n     *\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */", "kind": "function", "description": "Maps the div button press to pixi's InteractionManager (click)", "access": "private", "meta": {"code": {"paramnames": ["e"], "type": "MethodDefinition", "id": "astnode100001416", "name": "_onClick"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [12863, 13062], "lineno": 440, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["MouseEvent"]}, "description": "The click event.", "name": "e"}], "longname": "_onClick", "scope": "global", "name": "_onClick"}, {"comment": "/**\n     * Maps the div focus events to pixi's InteractionManager (mouseover)\n     *\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */", "kind": "function", "description": "Maps the div focus events to pixi's InteractionManager (mouseover)", "access": "private", "meta": {"code": {"paramnames": ["e"], "type": "MethodDefinition", "id": "astnode100001445", "name": "_onFocus"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [13229, 13569], "lineno": 453, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["FocusEvent"]}, "description": "The focus event.", "name": "e"}], "longname": "_onFocus", "scope": "global", "name": "_onFocus"}, {"comment": "/**\n     * Maps the div focus events to pixi's InteractionManager (mouseout)\n     *\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */", "kind": "function", "description": "Maps the div focus events to pixi's InteractionManager (mouseout)", "access": "private", "meta": {"code": {"paramnames": ["e"], "type": "MethodDefinition", "id": "astnode100001494", "name": "_onFocusOut"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [13738, 14077], "lineno": 470, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["FocusEvent"]}, "description": "The focusout event.", "name": "e"}], "longname": "_onFocusOut", "scope": "global", "name": "_onFocusOut"}, {"comment": "/**\n     * Is called when a key is pressed\n     *\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */", "kind": "function", "description": "Is called when a key is pressed", "access": "private", "meta": {"code": {"paramnames": ["e"], "type": "MethodDefinition", "id": "astnode100001543", "name": "_onKeyDown"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [14214, 14345], "lineno": 487, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["KeyboardEvent"]}, "description": "The keydown event.", "name": "e"}], "longname": "_onKeyDown", "scope": "global", "name": "_onKeyDown"}, {"comment": "/**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     * @param {MouseEvent} e - The mouse event.\n     */", "kind": "function", "description": "Is called when the mouse moves across the renderer element", "access": "private", "meta": {"code": {"paramnames": ["e"], "type": "MethodDefinition", "id": "astnode100001561", "name": "_onMouseMove"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [14504, 14651], "lineno": 503, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [{"type": {"names": ["MouseEvent"]}, "description": "The mouse event.", "name": "e"}], "longname": "_onMouseMove", "scope": "global", "name": "_onMouseMove"}, {"comment": "/**\n     * Destroys the accessibility manager\n     *\n     */", "kind": "function", "description": "Destroys the accessibility manager", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001585", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "AccessibilityManager.js", "range": [14722, 15120], "lineno": 517, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/accessibility/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "testAddChild", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000012", "name": "testAddChild"}, "vars": {"": null}, "columnno": 0, "filename": "Container.js", "range": [54, 313], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/test"}, "params": [], "longname": "testAddChild", "scope": "global"}, {"comment": "", "kind": "function", "name": "testRemoveChild", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000045", "name": "testRemoveChild"}, "vars": {"": null}, "columnno": 0, "filename": "Container.js", "range": [315, 778], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/test"}, "params": [], "longname": "testRemoveChild", "scope": "global"}, {"comment": "", "kind": "function", "name": "assertRemovedFromParent", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["parent", "container", "child", "functionToAssert"], "type": "FunctionDeclaration", "id": "astnode100004666", "name": "assertRemovedFromParent"}, "columnno": 4, "filename": "Container.js", "range": [30352, 30720], "lineno": 912, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/test"}, "params": [], "longname": "<anonymous>~assertRemovedFromParent", "scope": "inner"}, {"comment": "/**\n     * Updates the object transform for rendering.\n     *\n     * TODO - Optimization pass!\n     */", "kind": "function", "description": "Updates the object transform for rendering.\n\nTODO - Optimization pass!", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000171", "name": "updateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [5101, 5323], "lineno": 179, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "updateTransform", "scope": "global", "name": "updateTransform"}, {"comment": "/**\n     * Recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */", "kind": "function", "description": "Recursively updates transform of all objects from the root to this one\ninternal function for toLocal()", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000208", "name": "_recursivePostUpdateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [5462, 5792], "lineno": 192, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "_recursivePostUpdateTransform", "scope": "global", "name": "_recursivePostUpdateTransform"}, {"comment": "/**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} [skipUpdate] - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */", "kind": "function", "description": "Retrieves the bounds of the displayObject as a rectangle object.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangular bounding area."}], "meta": {"code": {"paramnames": ["skipUpdate", "rect"], "type": "MethodDefinition", "id": "astnode100000249", "name": "getBounds"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [6298, 7066], "lineno": 214, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"optional": true, "type": {"names": ["boolean"]}, "description": "Setting to `true` will stop the transforms of the scene graph from\n being updated. This means the calculation returned MAY be out of date BUT will give you a\n nice performance boost.", "name": "skipUpdate"}, {"optional": true, "type": {"names": ["PIXI.Rectangle"]}, "description": "Optional rectangle to store the result of the bounds calculation.", "name": "rect"}], "longname": "getBounds", "scope": "global", "name": "getBounds"}, {"comment": "/**\n     * Retrieves the local bounds of the displayObject as a rectangle object.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */", "kind": "function", "description": "Retrieves the local bounds of the displayObject as a rectangle object.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangular bounding area."}], "meta": {"code": {"paramnames": ["rect"], "type": "MethodDefinition", "id": "astnode100000340", "name": "getLocalBounds"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [7342, 7911], "lineno": 255, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"optional": true, "type": {"names": ["PIXI.Rectangle"]}, "description": "Optional rectangle to store the result of the bounds calculation.", "name": "rect"}], "longname": "getLocalBounds", "scope": "global", "name": "getLocalBounds"}, {"comment": "/**\n     * Calculates the global position of the display object.\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object.\n     */", "kind": "function", "description": "Calculates the global position of the display object.", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "A point object representing the position of this object."}], "meta": {"code": {"paramnames": ["position", "point", "skipUpdate"], "type": "MethodDefinition", "id": "astnode100000419", "name": "toGlobal"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [8377, 9241], "lineno": 290, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The world origin to calculate from.", "name": "position"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "A Point object in which to store the value, optional\n (otherwise will create a new Point).", "name": "point"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should we skip the update transform.", "name": "skipUpdate"}], "longname": "toGlobal", "scope": "global", "name": "toGlobal"}, {"comment": "/**\n     * Calculates the local position of the display object relative to another point.\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from.\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */", "kind": "function", "description": "Calculates the local position of the display object relative to another point.", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "A point object representing the position of this object"}], "meta": {"code": {"paramnames": ["position", "from", "point", "skipUpdate"], "type": "MethodDefinition", "id": "astnode100000477", "name": "toLocal"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [9831, 10802], "lineno": 325, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The world origin to calculate from.", "name": "position"}, {"optional": true, "type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject to calculate the global position from.", "name": "from"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "A Point object in which to store the value, optional\n (otherwise will create a new Point).", "name": "point"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should we skip the update transform", "name": "skipUpdate"}], "longname": "toLocal", "scope": "global", "name": "toLocal"}, {"comment": "/**\n     * Renders the object using the WebGL renderer.\n     *\n     * @param {PIXI.Renderer} renderer - The renderer.\n     */", "kind": "function", "description": "Renders the object using the WebGL renderer.", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000547", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [10938, 11026], "lineno": 360, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer.", "name": "renderer"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Set the parent Container of this DisplayObject.\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to.\n     * @return {PIXI.Container} The Container that this DisplayObject was added to.\n     */", "kind": "function", "description": "Set the parent Container of this DisplayObject.", "returns": [{"type": {"names": ["PIXI.Container"]}, "description": "The Container that this DisplayObject was added to."}], "meta": {"code": {"paramnames": ["container"], "type": "MethodDefinition", "id": "astnode100000552", "name": "setParent"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [11281, 11514], "lineno": 371, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Container"]}, "description": "The Container to add this DisplayObject to.", "name": "container"}], "longname": "setParent", "scope": "global", "name": "setParent"}, {"comment": "/**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */", "kind": "function", "description": "Convenience function to set the position, scale, skew and pivot at once.", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject instance"}], "meta": {"code": {"paramnames": ["x", "y", "scaleX", "scaleY", "rotation", "skewX", "skewY", "pivotX", "pivotY"], "type": "MethodDefinition", "id": "astnode100000578", "name": "setTransform"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [12149, 12595], "lineno": 397, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The X position", "name": "x"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The Y position", "name": "y"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The X scale value", "name": "scaleX"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The Y scale value", "name": "scaleY"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The rotation", "name": "rotation"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The X skew value", "name": "skewX"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The Y skew value", "name": "skewY"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The X pivot value", "name": "pivotX"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The Y pivot value", "name": "pivotY"}], "longname": "setTransform", "scope": "global", "name": "setTransform"}, {"comment": "/**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy()`.\n     *\n     */", "kind": "function", "description": "Base destroy method for generic display objects. This will automatically\nremove the display object from its parent Container as well as remove\nall current event listeners and internal references. Do not use a DisplayObject\nafter calling `destroy()`.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000689", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "DisplayObject.js", "range": [12902, 13342], "lineno": 419, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "sortChildren", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b"], "type": "FunctionDeclaration", "id": "astnode100000014", "name": "sortChildren"}, "columnno": 0, "filename": "Container.js", "range": [135, 298], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "sortChildren", "scope": "global"}, {"comment": "/**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @private\n     */", "kind": "function", "description": "Overridable method that can be used by Container subclasses whenever the children array is modified", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000076", "name": "onChildrenChange"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [2142, 2192], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "onChildrenChange", "scope": "global", "name": "onChildrenChange"}, {"comment": "/**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */", "kind": "function", "description": "Adds one or more children to the container.\n\nMultiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The first child that was added."}], "meta": {"code": {"paramnames": ["child"], "type": "MethodDefinition", "id": "astnode100000080", "name": "addChild"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [2537, 3803], "lineno": 89, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"variable": true, "type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject(s) to add to the container", "name": "child"}], "longname": "addChild", "scope": "global", "name": "addChild"}, {"comment": "/**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */", "kind": "function", "description": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child that was added."}], "meta": {"code": {"paramnames": ["child", "index"], "type": "MethodDefinition", "id": "astnode100000184", "name": "addChildAt"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [4130, 4902], "lineno": 137, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child to add", "name": "child"}, {"type": {"names": ["number"]}, "description": "The index to place the child in", "name": "index"}], "longname": "addChildAt", "scope": "global", "name": "addChildAt"}, {"comment": "/**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */", "kind": "function", "description": "Swaps the position of 2 Display Objects within this container.", "meta": {"code": {"paramnames": ["child", "child2"], "type": "MethodDefinition", "id": "astnode100000282", "name": "swapChildren"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [5147, 5504], "lineno": 173, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "First display object to swap", "name": "child"}, {"type": {"names": ["PIXI.DisplayObject"]}, "description": "Second display object to swap", "name": "child2"}], "longname": "swapChildren", "scope": "global", "name": "swapChildren"}, {"comment": "/**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */", "kind": "function", "description": "Returns the index position of a child DisplayObject instance", "returns": [{"type": {"names": ["number"]}, "description": "The index position of the child display object to identify"}], "meta": {"code": {"paramnames": ["child"], "type": "MethodDefinition", "id": "astnode100000337", "name": "getChildIndex"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [5766, 6009], "lineno": 194, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject instance to identify", "name": "child"}], "longname": "getChildIndex", "scope": "global", "name": "getChildIndex"}, {"comment": "/**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */", "kind": "function", "description": "Changes the position of an existing child in the display object container", "meta": {"code": {"paramnames": ["child", "index"], "type": "MethodDefinition", "id": "astnode100000364", "name": "setChildIndex"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [6328, 6792], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child DisplayObject instance for which you want to change the index number", "name": "child"}, {"type": {"names": ["number"]}, "description": "The resulting index number for the child display object", "name": "index"}], "longname": "setChildIndex", "scope": "global", "name": "setChildIndex"}, {"comment": "/**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */", "kind": "function", "description": "Returns the child at the specified index", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child at the given index, if any."}], "meta": {"code": {"paramnames": ["index"], "type": "MethodDefinition", "id": "astnode100000428", "name": "getChildAt"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [7004, 7224], "lineno": 233, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["number"]}, "description": "The index to get the child at", "name": "index"}], "longname": "getChildAt", "scope": "global", "name": "getChildAt"}, {"comment": "/**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */", "kind": "function", "description": "Removes one or more children from the container.", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The first child that was removed."}], "meta": {"code": {"paramnames": ["child"], "type": "MethodDefinition", "id": "astnode100000459", "name": "removeChild"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [7456, 8571], "lineno": 249, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"variable": true, "type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject(s) to remove", "name": "child"}], "longname": "removeChild", "scope": "global", "name": "removeChild"}, {"comment": "/**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */", "kind": "function", "description": "Removes a child from the specified index position.", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child that was removed."}], "meta": {"code": {"paramnames": ["index"], "type": "MethodDefinition", "id": "astnode100000555", "name": "removeChildAt"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [8785, 9281], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["number"]}, "description": "The index to get the child from", "name": "index"}], "longname": "removeChildAt", "scope": "global", "name": "removeChildAt"}, {"comment": "/**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {DisplayObject[]} List of removed children\n     */", "kind": "function", "description": "Removes all children from this container that are within the begin and end indexes.", "returns": [{"type": {"names": ["Array.<DisplayObject>"]}, "description": "List of removed children"}], "meta": {"code": {"paramnames": ["beginIndex", "endIndex"], "type": "MethodDefinition", "id": "astnode100000611", "name": "removeChildren"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [9642, 10687], "lineno": 317, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The beginning position.", "name": "beginIndex"}, {"optional": true, "defaultvalue": "this.children.length", "type": {"names": ["number"]}, "description": "The ending position. Default value is size of the container.", "name": "endIndex"}], "longname": "removeChildren", "scope": "global", "name": "removeChildren"}, {"comment": "/**\n     * Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.\n     */", "kind": "function", "description": "Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000759", "name": "sortChildren"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [10807, 11308], "lineno": 359, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "sortChildren", "scope": "global", "name": "sortChildren"}, {"comment": "/**\n     * Updates the transform on all children of this container for rendering\n     */", "kind": "function", "description": "Updates the transform on all children of this container for rendering", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000838", "name": "updateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [11407, 11988], "lineno": 386, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "updateTransform", "scope": "global", "name": "updateTransform"}, {"comment": "/**\n     * Recalculates the bounds of the container.\n     *\n     */", "kind": "function", "description": "Recalculates the bounds of the container.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000923", "name": "calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [12066, 12960], "lineno": 415, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "calculateBounds", "scope": "global", "name": "calculateBounds"}, {"comment": "/**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     */", "kind": "function", "description": "Recalculates the bounds of the object. Override this to\ncalculate the bounds of the specific object (not including children).", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001043", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [13129, 13180], "lineno": 456, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "Renders the object using the WebGL renderer", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001047", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [13314, 13980], "lineno": 466, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @private\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "Render the object using the WebGL renderer and advanced features.", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001120", "name": "renderAdvanced"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [14152, 15597], "lineno": 497, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "renderAdvanced", "scope": "global", "name": "renderAdvanced"}, {"comment": "/**\n     * To be overridden by the subclasses.\n     *\n     * @private\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "To be overridden by the subclasses.", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001304", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [15739, 15863], "lineno": 561, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "_render", "scope": "global", "name": "_render"}, {"comment": "/**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */", "kind": "function", "description": "Removes all internal references and listeners as well as removes children from the display list.\nDo not use a Container after calling `destroy`.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100001309", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Container.js", "range": [16720, 17168], "lineno": 579, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their destroy\n method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the texture of the child sprite", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the base texture of the child sprite", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */", "kind": "function", "description": "Checks if bounds are empty.", "returns": [{"type": {"names": ["boolean"]}, "description": "True if empty."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000046", "name": "isEmpty"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [863, 947], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "isEmpty", "scope": "global", "name": "isEmpty"}, {"comment": "/**\n     * Clears the bounds and resets.\n     *\n     */", "kind": "function", "description": "Clears the bounds and resets.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000066", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [1013, 1180], "lineno": 59, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */", "kind": "function", "description": "Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\nIt is not guaranteed that it will return tempRect", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "A rectangle of the bounds"}], "meta": {"code": {"paramnames": ["rect"], "type": "MethodDefinition", "id": "astnode100000101", "name": "getRectangle"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [1516, 1881], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "temporary object will be used if AABB is not empty", "name": "rect"}], "longname": "getRectangle", "scope": "global", "name": "getRectangle"}, {"comment": "/**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.Point} point - The point to add.\n     */", "kind": "function", "description": "This function should be inlined when its possible.", "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100000180", "name": "addPoint"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [2021, 2248], "lineno": 98, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to add.", "name": "point"}], "longname": "addPoint", "scope": "global", "name": "addPoint"}, {"comment": "/**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */", "kind": "function", "description": "Adds a quad, not transformed", "meta": {"code": {"paramnames": ["vertices"], "type": "MethodDefinition", "id": "astnode100000245", "name": "addQuad"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [2371, 3414], "lineno": 111, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["Float32Array"]}, "description": "The verts to add.", "name": "vertices"}], "longname": "addQuad", "scope": "global", "name": "addQuad"}, {"comment": "/**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {number} x0 - TODO\n     * @param {number} y0 - TODO\n     * @param {number} x1 - TODO\n     * @param {number} y1 - TODO\n     */", "kind": "function", "description": "Adds sprite frame, transformed.", "meta": {"code": {"paramnames": ["transform", "x0", "y0", "x1", "y1"], "type": "MethodDefinition", "id": "astnode100000490", "name": "addFrame"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [3666, 5053], "lineno": 162, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.TransformBase"]}, "description": "TODO", "name": "transform"}, {"type": {"names": ["number"]}, "description": "TODO", "name": "x0"}, {"type": {"names": ["number"]}, "description": "TODO", "name": "y0"}, {"type": {"names": ["number"]}, "description": "TODO", "name": "x1"}, {"type": {"names": ["number"]}, "description": "TODO", "name": "y1"}], "longname": "addFrame", "scope": "global", "name": "addFrame"}, {"comment": "/**\n     * Adds screen vertices from array\n     *\n     * @param {Float32Array} vertexData - calculated vertices\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */", "kind": "function", "description": "Adds screen vertices from array", "meta": {"code": {"paramnames": ["vertexData", "beginOffset", "endOffset"], "type": "MethodDefinition", "id": "astnode100000829", "name": "addVertexData"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [5289, 5892], "lineno": 219, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["Float32Array"]}, "description": "calculated vertices", "name": "vertexData"}, {"type": {"names": ["number"]}, "description": "begin offset", "name": "beginOffset"}, {"type": {"names": ["number"]}, "description": "end offset, excluded", "name": "endOffset"}], "longname": "addVertexData", "scope": "global", "name": "addVertexData"}, {"comment": "/**\n     * Add an array of mesh vertices\n     *\n     * @param {PIXI.TransformBase} transform - mesh transform\n     * @param {Float32Array} vertices - mesh coordinates in array\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */", "kind": "function", "description": "Add an array of mesh vertices", "meta": {"code": {"paramnames": ["transform", "vertices", "beginOffset", "endOffset"], "type": "MethodDefinition", "id": "astnode100000946", "name": "addVertices"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [6192, 7130], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.TransformBase"]}, "description": "mesh transform", "name": "transform"}, {"type": {"names": ["Float32Array"]}, "description": "mesh coordinates in array", "name": "vertices"}, {"type": {"names": ["number"]}, "description": "begin offset", "name": "beginOffset"}, {"type": {"names": ["number"]}, "description": "end offset, excluded", "name": "endOffset"}], "longname": "addVertices", "scope": "global", "name": "addVertices"}, {"comment": "/**\n     * Adds other Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     */", "kind": "function", "description": "Adds other Bounds", "meta": {"code": {"paramnames": ["bounds"], "type": "MethodDefinition", "id": "astnode100001130", "name": "addBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [7226, 7628], "lineno": 290, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Bounds"]}, "description": "TODO", "name": "bounds"}], "longname": "addBounds", "scope": "global", "name": "addBounds"}, {"comment": "/**\n     * Adds other Bounds, masked with Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Bounds} mask - TODO\n     */", "kind": "function", "description": "Adds other Bounds, masked with Bounds", "meta": {"code": {"paramnames": ["bounds", "mask"], "type": "MethodDefinition", "id": "astnode100001219", "name": "addBoundsMask"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [7784, 8539], "lineno": 309, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Bounds"]}, "description": "TODO", "name": "bounds"}, {"type": {"names": ["PIXI.Bounds"]}, "description": "TODO", "name": "mask"}], "longname": "addBoundsMask", "scope": "global", "name": "addBoundsMask"}, {"comment": "/**\n     * Adds other Bounds, masked with Rectangle\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */", "kind": "function", "description": "Adds other Bounds, masked with Rectangle", "meta": {"code": {"paramnames": ["bounds", "area"], "type": "MethodDefinition", "id": "astnode100001370", "name": "addBoundsArea"}, "vars": {"": null}, "columnno": 4, "filename": "Bounds.js", "range": [8701, 9490], "lineno": 336, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/display/src"}, "params": [{"type": {"names": ["PIXI.Bounds"]}, "description": "TODO", "name": "bounds"}, {"type": {"names": ["PIXI.Rectangle"]}, "description": "TODO", "name": "area"}], "longname": "addBoundsArea", "scope": "global", "name": "addBoundsArea"}, {"comment": "", "kind": "function", "name": "validate", "undocumented": true, "meta": {"code": {"paramnames": ["spritesheet", "done"], "type": "FunctionExpression", "id": "astnode100000049", "name": "this.validate"}, "vars": {"": null}, "columnno": 8, "filename": "Spritesheet.js", "range": [267, 1707], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "longname": "validate", "scope": "global"}, {"comment": "", "kind": "function", "name": "parseFrame", "undocumented": true, "meta": {"code": {"paramnames": ["frameData", "callback"], "type": "FunctionExpression", "id": "astnode100000353", "name": "this.parseFrame"}, "vars": {"baseTexture.imageUrl": "parseFrame~baseTexture.imageUrl", "sheet": "parseFrame~sheet", "data": "parseFrame~data", "": null, "baseTexture": "parseFrame~baseTexture"}, "columnno": 8, "filename": "Spritesheet.js", "range": [1718, 2376], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "longname": "parseFrame", "scope": "global"}, {"comment": "", "kind": "function", "name": "onload", "memberof": "<anonymous>~image", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000578", "name": "image.onload"}, "vars": {"spritesheet": "<anonymous>~image.onload~spritesheet", "baseTexture": "<anonymous>~image.onload~baseTexture"}, "columnno": 8, "filename": "Spritesheet.js", "range": [3303, 3686], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "longname": "<anonymous>~image.onload", "scope": "static"}, {"comment": "", "kind": "function", "name": "onload", "memberof": "<anonymous>~image", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000775", "name": "image.onload"}, "vars": {"spritesheet": "<anonymous>~image.onload~spritesheet", "baseTexture": "<anonymous>~image.onload~baseTexture"}, "columnno": 8, "filename": "Spritesheet.js", "range": [4593, 4993], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "longname": "<anonymous>~image.onload", "scope": "static"}, {"comment": "", "kind": "function", "name": "getPath", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["url", "image"], "type": "FunctionDeclaration", "id": "astnode100000863", "name": "getPath"}, "columnno": 8, "filename": "SpritesheetLoader.js", "range": [5127, 5310], "lineno": 141, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "params": [], "longname": "<anonymous>~getPath", "scope": "inner"}, {"comment": "", "kind": "function", "name": "createMockResource", "undocumented": true, "meta": {"code": {"paramnames": ["type", "data"], "type": "FunctionDeclaration", "id": "astnode100001034", "name": "createMockResource"}, "vars": {"name": "createMockResource~name"}, "columnno": 0, "filename": "SpritesheetLoader.js", "range": [6644, 6888], "lineno": 181, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "params": [], "longname": "createMockResource", "scope": "global"}, {"comment": "", "kind": "function", "name": "getJsonSpritesheet", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001073", "name": "getJsonSpritesheet"}, "columnno": 0, "filename": "SpritesheetLoader.js", "range": [6890, 9610], "lineno": 194, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/test"}, "params": [], "longname": "getJsonSpritesheet", "scope": "global"}, {"comment": "/**\n     * Generate the resolution from the filename or fallback\n     * to the meta.scale field of the JSON data.\n     *\n     * @private\n     * @param {string} resolutionFilename - The filename to use for resolving\n     *        the default resolution.\n     * @return {number} Resolution to use for spritesheet.\n     */", "kind": "function", "description": "Generate the resolution from the filename or fallback\nto the meta.scale field of the JSON data.", "access": "private", "returns": [{"type": {"names": ["number"]}, "description": "Resolution to use for spritesheet."}], "meta": {"code": {"paramnames": ["resolutionFilename"], "type": "MethodDefinition", "id": "astnode100000116", "name": "_updateResolution"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [3835, 4484], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"type": {"names": ["string"]}, "description": "The filename to use for resolving\n       the default resolution.", "name": "resolutionFilename"}], "longname": "_updateResolution", "scope": "global", "name": "_updateResolution"}, {"comment": "/**\n     * Parser spritesheet from loaded data. This is done asynchronously\n     * to prevent creating too many Texture within a single process.\n     *\n     * @param {Function} callback - Callback when complete returns\n     *        a map of the Textures for this spritesheet.\n     */", "kind": "function", "description": "Parser spritesheet from loaded data. This is done asynchronously\nto prevent creating too many Texture within a single process.", "meta": {"code": {"paramnames": ["callback"], "type": "MethodDefinition", "id": "astnode100000169", "name": "parse"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [4779, 5128], "lineno": 160, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"type": {"names": ["function"]}, "description": "Callback when complete returns\n       a map of the Textures for this spritesheet.", "name": "callback"}], "longname": "parse", "scope": "global", "name": "parse"}, {"comment": "/**\n     * Process a batch of frames\n     *\n     * @private\n     * @param {number} initialFrameIndex - The index of frame to start.\n     */", "kind": "function", "description": "Process a batch of frames", "access": "private", "meta": {"code": {"paramnames": ["initialFrameIndex"], "type": "MethodDefinition", "id": "astnode100000219", "name": "_processFrames"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [5278, 7862], "lineno": 183, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"type": {"names": ["number"]}, "description": "The index of frame to start.", "name": "initialFrameIndex"}], "longname": "_processFrames", "scope": "global", "name": "_processFrames"}, {"comment": "/**\n     * Parse animations config\n     *\n     * @private\n     */", "kind": "function", "description": "Parse animations config", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000536", "name": "_processAnimations"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [7938, 8361], "lineno": 260, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [], "longname": "_processAnimations", "scope": "global", "name": "_processAnimations"}, {"comment": "/**\n     * The parse has completed.\n     *\n     * @private\n     */", "kind": "function", "description": "The parse has completed.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000601", "name": "_parseComplete"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [8438, 8613], "lineno": 281, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [], "longname": "_parseComplete", "scope": "global", "name": "_parseComplete"}, {"comment": "/**\n     * Begin the next batch of textures.\n     *\n     * @private\n     */", "kind": "function", "description": "Begin the next batch of textures.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000632", "name": "_nextBatch"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [8699, 9147], "lineno": 295, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [], "longname": "_nextBatch", "scope": "global", "name": "_nextBatch"}, {"comment": "/**\n     * Destroy Spritesheet and don't use after this.\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */", "kind": "function", "description": "Destroy Spritesheet and don't use after this.", "meta": {"code": {"paramnames": ["destroyBase"], "type": "MethodDefinition", "id": "astnode100000690", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Spritesheet.js", "range": [9317, 9691], "lineno": 318, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to destroy the base texture as well", "name": "destroyBase"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader~loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */", "kind": "function", "description": "Called after a resource is loaded.", "see": ["PIXI.Loader~loaderMiddleware"], "meta": {"code": {"paramnames": ["resource", "next"], "type": "MethodDefinition", "id": "astnode100000018", "name": "use"}, "vars": {"": null}, "columnno": 4, "filename": "SpritesheetLoader.js", "range": [608, 1959], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"type": {"names": ["PIXI.LoaderResource"]}, "name": "resource"}, {"type": {"names": ["function"]}, "name": "next"}], "longname": "use", "scope": "global", "name": "use"}, {"comment": "/**\n     * Get the spritesheets root path\n     * @param {PIXI.LoaderResource} resource - Resource to check path\n     * @param {string} baseUrl - Base root url\n     */", "kind": "function", "description": "Get the spritesheets root path", "meta": {"code": {"paramnames": ["resource", "baseUrl"], "type": "MethodDefinition", "id": "astnode100000157", "name": "getResourcePath"}, "vars": {"": null}, "columnno": 4, "filename": "SpritesheetLoader.js", "range": [2136, 2444], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/spritesheet/src"}, "params": [{"type": {"names": ["PIXI.LoaderResource"]}, "description": "Resource to check path", "name": "resource"}, {"type": {"names": ["string"]}, "description": "Base root url", "name": "baseUrl"}], "longname": "getResourcePath", "scope": "global", "name": "getResourcePath"}, {"comment": "", "kind": "function", "name": "isInteger", "memberof": "Number", "undocumented": true, "meta": {"code": {"paramnames": ["value"], "type": "FunctionExpression", "id": "astnode100000009", "value": "numberIsInteger", "name": "Number.isInteger"}, "columnno": 4, "filename": "Number.isInteger.js", "range": [146, 300], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "Number.isInteger", "scope": "static"}, {"comment": "", "kind": "function", "name": "now", "memberof": "Date", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000019", "value": "now", "name": "Date.now"}, "columnno": 4, "filename": "requestAnimationFrame.js", "range": [630, 704], "lineno": 17, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "Date.now", "scope": "static"}, {"comment": "", "kind": "function", "name": "now", "memberof": "global.performance", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000064", "name": "global.performance.now"}, "columnno": 4, "filename": "requestAnimationFrame.js", "range": [897, 950], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "global.performance.now", "scope": "static"}, {"comment": "", "kind": "function", "name": "requestAnimationFrame", "memberof": "global", "undocumented": true, "meta": {"code": {"paramnames": ["callback"], "type": "ArrowFunctionExpression", "id": "astnode100000152", "name": "global.requestAnimationFrame"}, "vars": {"delay": "global.requestAnimationFrame~delay", "": null, "lastTime": "global.requestAnimationFrame~lastTime", "currentTime": "global.requestAnimationFrame~currentTime"}, "columnno": 4, "filename": "requestAnimationFrame.js", "range": [1388, 1913], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "global.requestAnimationFrame", "scope": "static"}, {"comment": "", "kind": "function", "name": "cancelAnimationFrame", "memberof": "global", "undocumented": true, "meta": {"code": {"paramnames": ["id"], "type": "ArrowFunctionExpression", "id": "astnode100000227", "name": "global.cancelAnimationFrame"}, "columnno": 4, "filename": "requestAnimationFrame.js", "range": [1958, 2012], "lineno": 77, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "global.cancelAnimationFrame", "scope": "static"}, {"comment": "", "kind": "function", "name": "sign", "memberof": "Math", "undocumented": true, "meta": {"code": {"paramnames": ["x"], "type": "FunctionExpression", "id": "astnode100000009", "value": "mathSign", "name": "Math.sign"}, "vars": {"x": "Math.sign~x"}, "columnno": 4, "filename": "Math.sign.js", "range": [132, 307], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/polyfill/src"}, "longname": "Math.sign", "scope": "static"}, {"comment": "/**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */", "kind": "function", "description": "Sets the private properties array to dynamic / static based on the passed properties object", "meta": {"code": {"paramnames": ["properties"], "type": "MethodDefinition", "id": "astnode100000157", "name": "setProperties"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [5545, 6264], "lineno": 167, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["object"]}, "description": "The properties to be uploaded", "name": "properties"}], "longname": "setProperties", "scope": "global", "name": "setProperties"}, {"comment": "/**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the object transform for rendering", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000290", "name": "updateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [6359, 6531], "lineno": 186, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [], "longname": "updateTransform", "scope": "global", "name": "updateTransform"}, {"comment": "/**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.Renderer} renderer - The webgl renderer\n     */", "kind": "function", "description": "Renders the container using the WebGL renderer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000325", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [7157, 7711], "lineno": 217, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The webgl renderer", "name": "renderer"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */", "kind": "function", "description": "Set the flag that static data should be updated to true", "access": "private", "meta": {"code": {"paramnames": ["smallestChildIndex"], "type": "MethodDefinition", "id": "astnode100000419", "name": "onChildrenChange"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [7888, 8200], "lineno": 243, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["number"]}, "description": "The smallest child index", "name": "smallestChildIndex"}], "longname": "onChildrenChange", "scope": "global", "name": "onChildrenChange"}, {"comment": "", "kind": "function", "name": "dispose", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000464", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [8206, 8440], "lineno": 254, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [], "longname": "dispose", "scope": "global"}, {"comment": "/**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */", "kind": "function", "description": "Destroys the container", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000503", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleContainer.js", "range": [9168, 9355], "lineno": 279, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their\n destroy method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the texture of the child sprite", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the base texture of the child sprite", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */", "kind": "function", "description": "Sets up the renderer context and necessary buffers.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000186", "name": "initBuffers"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleBuffer.js", "range": [2813, 5283], "lineno": 102, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [], "longname": "initBuffers", "scope": "global", "name": "initBuffers"}, {"comment": "/**\n     * Uploads the dynamic properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */", "kind": "function", "description": "Uploads the dynamic properties.", "meta": {"code": {"paramnames": ["children", "startIndex", "amount"], "type": "MethodDefinition", "id": "astnode100000522", "name": "uploadDynamic"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleBuffer.js", "range": [5536, 5992], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "The children to upload.", "name": "children"}, {"type": {"names": ["number"]}, "description": "The index to start at.", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "The number to upload.", "name": "amount"}], "longname": "uploadDynamic", "scope": "global", "name": "uploadDynamic"}, {"comment": "/**\n     * Uploads the static properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */", "kind": "function", "description": "Uploads the static properties.", "meta": {"code": {"paramnames": ["children", "startIndex", "amount"], "type": "MethodDefinition", "id": "astnode100000587", "name": "uploadStatic"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleBuffer.js", "range": [6244, 6693], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "The children to upload.", "name": "children"}, {"type": {"names": ["number"]}, "description": "The index to start at.", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "The number to upload.", "name": "amount"}], "longname": "uploadStatic", "scope": "global", "name": "uploadStatic"}, {"comment": "/**\n     * Destroys the ParticleBuffer.\n     *\n     */", "kind": "function", "description": "Destroys the ParticleBuffer.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000652", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleBuffer.js", "range": [6758, 7269], "lineno": 230, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */", "kind": "function", "description": "Renders the particle container object.", "meta": {"code": {"paramnames": ["container"], "type": "MethodDefinition", "id": "astnode100000146", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [2998, 5585], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["PIXI.ParticleContainer"]}, "description": "The container to render using this ParticleRenderer", "name": "container"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */", "kind": "function", "description": "Creates one particle buffer for each child in the container we want to render and updates internal properties", "returns": [{"type": {"names": ["Array.<PIXI.ParticleBuffer>"]}, "description": "The buffers"}], "meta": {"code": {"paramnames": ["container"], "type": "MethodDefinition", "id": "astnode100000478", "name": "generateBuffers"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [5885, 6292], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["PIXI.ParticleContainer"]}, "description": "The container to render using this ParticleRenderer", "name": "container"}], "longname": "generateBuffers", "scope": "global", "name": "generateBuffers"}, {"comment": "/**\n     * Creates one more particle buffer, because container has autoResize feature\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer} generated buffer\n     * @private\n     */", "kind": "function", "description": "Creates one more particle buffer, because container has autoResize feature", "access": "private", "returns": [{"type": {"names": ["PIXI.ParticleBuffer"]}, "description": "generated buffer"}], "meta": {"code": {"paramnames": ["container"], "type": "MethodDefinition", "id": "astnode100000531", "name": "_generateOneMoreBuffer"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [6576, 6815], "lineno": 213, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["PIXI.ParticleContainer"]}, "description": "The container to render using this ParticleRenderer", "name": "container"}], "longname": "_generateOneMoreBuffer", "scope": "global", "name": "_generateOneMoreBuffer"}, {"comment": "/**\n     * Uploads the vertices.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */", "kind": "function", "description": "Uploads the vertices.", "meta": {"code": {"paramnames": ["children", "startIndex", "amount", "array", "stride", "offset"], "type": "MethodDefinition", "id": "astnode100000556", "name": "uploadVertices"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [7306, 8899], "lineno": 231, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "the array of display objects to render", "name": "children"}, {"type": {"names": ["number"]}, "description": "the index to start from in the children array", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "the amount of children that will have their vertices uploaded", "name": "amount"}, {"type": {"names": ["Array.<number>"]}, "description": "The vertices to upload.", "name": "array"}, {"type": {"names": ["number"]}, "description": "Stride to use for iteration.", "name": "stride"}, {"type": {"names": ["number"]}, "description": "Offset to start at.", "name": "offset"}], "longname": "uploadVertices", "scope": "global", "name": "uploadVertices"}, {"comment": "/**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */", "kind": "function", "name": "uploadPosition", "meta": {"code": {"paramnames": ["children", "startIndex", "amount", "array", "stride", "offset"], "type": "MethodDefinition", "id": "astnode100000839", "name": "uploadPosition"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [9362, 10073], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "the array of display objects to render", "name": "children"}, {"type": {"names": ["number"]}, "description": "the index to start from in the children array", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "the amount of children that will have their positions uploaded", "name": "amount"}, {"type": {"names": ["Array.<number>"]}, "description": "The vertices to upload.", "name": "array"}, {"type": {"names": ["number"]}, "description": "Stride to use for iteration.", "name": "stride"}, {"type": {"names": ["number"]}, "description": "Offset to start at.", "name": "offset"}], "longname": "uploadPosition", "scope": "global"}, {"comment": "/**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */", "kind": "function", "name": "uploadRotation", "meta": {"code": {"paramnames": ["children", "startIndex", "amount", "array", "stride", "offset"], "type": "MethodDefinition", "id": "astnode100000968", "name": "uploadRotation"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [10535, 10996], "lineno": 322, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "the array of display objects to render", "name": "children"}, {"type": {"names": ["number"]}, "description": "the index to start from in the children array", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "the amount of children that will have their rotation uploaded", "name": "amount"}, {"type": {"names": ["Array.<number>"]}, "description": "The vertices to upload.", "name": "array"}, {"type": {"names": ["number"]}, "description": "Stride to use for iteration.", "name": "stride"}, {"type": {"names": ["number"]}, "description": "Offset to start at.", "name": "offset"}], "longname": "uploadRotation", "scope": "global"}, {"comment": "/**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */", "kind": "function", "name": "uploadUvs", "meta": {"code": {"paramnames": ["children", "startIndex", "amount", "array", "stride", "offset"], "type": "MethodDefinition", "id": "astnode100001039", "name": "uploadUvs"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [11458, 12747], "lineno": 346, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "the array of display objects to render", "name": "children"}, {"type": {"names": ["number"]}, "description": "the index to start from in the children array", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "the amount of children that will have their rotation uploaded", "name": "amount"}, {"type": {"names": ["Array.<number>"]}, "description": "The vertices to upload.", "name": "array"}, {"type": {"names": ["number"]}, "description": "Stride to use for iteration.", "name": "stride"}, {"type": {"names": ["number"]}, "description": "Offset to start at.", "name": "offset"}], "longname": "uploadUvs", "scope": "global"}, {"comment": "/**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */", "kind": "function", "name": "uploadTint", "meta": {"code": {"paramnames": ["children", "startIndex", "amount", "array", "stride", "offset"], "type": "MethodDefinition", "id": "astnode100001256", "name": "uploadTint"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [13209, 13956], "lineno": 397, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [{"type": {"names": ["Array.<PIXI.DisplayObject>"]}, "description": "the array of display objects to render", "name": "children"}, {"type": {"names": ["number"]}, "description": "the index to start from in the children array", "name": "startIndex"}, {"type": {"names": ["number"]}, "description": "the amount of children that will have their rotation uploaded", "name": "amount"}, {"type": {"names": ["Array.<number>"]}, "description": "The vertices to upload.", "name": "array"}, {"type": {"names": ["number"]}, "description": "Stride to use for iteration.", "name": "stride"}, {"type": {"names": ["number"]}, "description": "Offset to start at.", "name": "offset"}], "longname": "uploadTint", "scope": "global"}, {"comment": "/**\n     * Destroys the ParticleRenderer.\n     *\n     */", "kind": "function", "description": "Destroys the ParticleRenderer.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001365", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ParticleRenderer.js", "range": [14023, 14215], "lineno": 421, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/particles/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "sayHello", "memberof": "MockPointer#renderer", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000111", "name": "this.renderer.sayHello"}, "columnno": 8, "filename": "MockPointer.js", "range": [1265, 1311], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "longname": "MockPointer#renderer.sayHello", "scope": "static"}, {"comment": "/**\n     * Cleans up after tests\n     */", "kind": "function", "description": "Cleans up after tests", "memberof": "MockPointer", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000152", "name": "MockPointer#cleanup"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [1550, 1702], "lineno": 48, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [], "longname": "MockPointer#cleanup", "scope": "instance", "name": "cleanup"}, {"comment": "/**\n     * @private\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     */", "kind": "function", "name": "setPosition", "memberof": "MockPointer", "access": "private", "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000173", "name": "MockPointer#setPosition"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [1832, 2006], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}], "longname": "MockPointer#setPosition", "scope": "instance"}, {"comment": "", "kind": "function", "name": "mapPositionToPoint", "memberof": "MockPointer#renderer.plugins.interaction", "undocumented": true, "meta": {"code": {"paramnames": ["point"], "type": "ArrowFunctionExpression", "id": "astnode100000180", "name": "this.renderer.plugins.interaction.mapPositionToPoint"}, "vars": {"point.y": "point.y", "point.x": "point.x"}, "columnno": 8, "filename": "MockPointer.js", "range": [1864, 1999], "lineno": 64, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "longname": "MockPointer#renderer.plugins.interaction.mapPositionToPoint", "scope": "static"}, {"comment": "/**\n     * @private\n     */", "kind": "function", "name": "render", "memberof": "MockPointer", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000205", "name": "MockPointer#render"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [2044, 2106], "lineno": 74, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [], "longname": "MockPointer#render", "scope": "instance"}, {"comment": "/**\n     * [createEvent description]\n     * @param  {string} eventType  `type` of event\n     * @param  {number} x          pointer x position\n     * @param  {number} y          pointer y position\n     * @param  {number} [identifier] pointer id for touch events\n     * @param  {boolean} [asPointer]  If it should be a PointerEvent from a mouse or touch\n     * @param  {boolean} [onCanvas=true] If the event should be on the canvas (as opposed to a different element)\n     * @return {Event} Generated MouseEvent, TouchEvent, or PointerEvent\n     */", "kind": "function", "description": "[createEvent description]", "memberof": "MockPointer", "returns": [{"type": {"names": ["Event"]}, "description": "Generated MouseEvent, TouchEvent, or PointerEvent"}], "meta": {"code": {"paramnames": ["eventType", "x", "y", "identifier", "asPointer", "onCanvas"], "type": "MethodDefinition", "id": "astnode100000219", "name": "MockPointer#createEvent"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [2663, 5610], "lineno": 89, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["string"]}, "description": "`type` of event", "name": "eventType"}, {"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id for touch events", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "If it should be a PointerEvent from a mouse or touch", "name": "asPointer"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "If the event should be on the canvas (as opposed to a different element)", "name": "onCanvas"}], "longname": "MockPointer#createEvent", "scope": "instance", "name": "createEvent"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a mouse\n     */", "kind": "function", "name": "mousemove", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "asPointer"], "type": "MethodDefinition", "id": "astnode100000533", "name": "MockPointer#mousemove"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [5806, 6478], "lineno": 182, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a mouse", "name": "asPointer"}], "longname": "MockPointer#mousemove", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a mouse\n     */", "kind": "function", "name": "click", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "asPointer"], "type": "MethodDefinition", "id": "astnode100000622", "name": "MockPointer#click"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [6674, 6788], "lineno": 206, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a mouse", "name": "asPointer"}], "longname": "MockPointer#click", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a mouse\n     */", "kind": "function", "name": "mousedown", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "asPointer"], "type": "MethodDefinition", "id": "astnode100000645", "name": "MockPointer#mousedown"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [6984, 7116], "lineno": 217, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a mouse", "name": "asPointer"}], "longname": "MockPointer#mousedown", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {boolean} [onCanvas=true] - if the event happend on the Canvas element or not\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a mouse\n     */", "kind": "function", "name": "mouseup", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "onCanvas", "asPointer"], "type": "MethodDefinition", "id": "astnode100000668", "name": "MockPointer#mouseup"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [7404, 7565], "lineno": 228, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "if the event happend on the Canvas element or not", "name": "onCanvas"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a mouse", "name": "asPointer"}], "longname": "MockPointer#mouseup", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a touch\n     */", "kind": "function", "name": "tap", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier", "asPointer"], "type": "MethodDefinition", "id": "astnode100000697", "name": "MockPointer#tap"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [7810, 7960], "lineno": 239, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a touch", "name": "asPointer"}], "longname": "MockPointer#tap", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a touch\n     */", "kind": "function", "name": "touchstart", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier", "asPointer"], "type": "MethodDefinition", "id": "astnode100000723", "name": "MockPointer#touchstart"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [8205, 8357], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a touch", "name": "asPointer"}], "longname": "MockPointer#touchstart", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a touch\n     */", "kind": "function", "name": "touchmove", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier", "asPointer"], "type": "MethodDefinition", "id": "astnode100000747", "name": "MockPointer#touchmove"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [8602, 8752], "lineno": 262, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a touch", "name": "asPointer"}], "longname": "MockPointer#touchmove", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a touch\n     */", "kind": "function", "name": "touchend", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier", "asPointer"], "type": "MethodDefinition", "id": "astnode100000771", "name": "MockPointer#touchend"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [8997, 9143], "lineno": 273, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a touch", "name": "asPointer"}], "longname": "MockPointer#touchend", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     * @param {boolean} [asPointer] - if it should be a PointerEvent from a touch\n     */", "kind": "function", "name": "touchleave", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier", "asPointer"], "type": "MethodDefinition", "id": "astnode100000795", "name": "MockPointer#touchleave"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [9388, 9539], "lineno": 284, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "if it should be a PointerEvent from a touch", "name": "asPointer"}], "longname": "MockPointer#touchleave", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     */", "kind": "function", "name": "pendown", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier"], "type": "MethodDefinition", "id": "astnode100000819", "name": "MockPointer#pendown"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [9702, 9836], "lineno": 294, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}], "longname": "MockPointer#pendown", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     */", "kind": "function", "name": "penmove", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier"], "type": "MethodDefinition", "id": "astnode100000842", "name": "MockPointer#penmove"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [9999, 10133], "lineno": 304, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}], "longname": "MockPointer#penmove", "scope": "instance"}, {"comment": "/**\n     * @param {number} x - pointer x position\n     * @param {number} y - pointer y position\n     * @param {number} [identifier] - pointer id\n     */", "kind": "function", "name": "penup", "memberof": "MockPointer", "meta": {"code": {"paramnames": ["x", "y", "identifier"], "type": "MethodDefinition", "id": "astnode100000865", "name": "MockPointer#penup"}, "vars": {"": null}, "columnno": 4, "filename": "MockPointer.js", "range": [10296, 10424], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [{"type": {"names": ["number"]}, "description": "pointer x position", "name": "x"}, {"type": {"names": ["number"]}, "description": "pointer y position", "name": "y"}, {"optional": true, "type": {"names": ["number"]}, "description": "pointer id", "name": "identifier"}], "longname": "MockPointer#penup", "scope": "instance"}, {"comment": "", "kind": "function", "name": "getScene", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["callbackEventName", "splitParents"], "type": "FunctionDeclaration", "id": "astnode100004320", "name": "getScene"}, "vars": {"": null, "frontParent.name": "<anonymous>~getScene~frontParent.name", "behindChild": "<anonymous>~getScene~behindChild", "parent": "<anonymous>~getScene~parent", "parentCallback": "<anonymous>~getScene~parentCallback", "behindChildCallback": "<anonymous>~getScene~behindChildCallback", "behindParent": "<anonymous>~getScene~behindParent", "behindParentCallback": "<anonymous>~getScene~behindParentCallback", "frontChildCallback": "<anonymous>~getScene~frontChildCallback", "frontParentCallback": "<anonymous>~getScene~frontParentCallback", "frontParent": "<anonymous>~getScene~frontParent", "frontChild": "<anonymous>~getScene~frontChild", "parent.name": "<anonymous>~getScene~parent.name", "behindChild.name": "<anonymous>~getScene~behindChild.name", "behindParent.name": "<anonymous>~getScene~behindParent.name", "frontChild.name": "<anonymous>~getScene~frontChild.name"}, "columnno": 8, "filename": "InteractionManager.js", "range": [28861, 31163], "lineno": 756, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [], "longname": "<anonymous>~getScene", "scope": "inner"}, {"comment": "", "kind": "function", "name": "getScene", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100009570", "name": "getScene"}, "vars": {"frontChild": "<anonymous>~getScene~frontChild", "middleChild": "<anonymous>~getScene~middleChild", "behindChild": "<anonymous>~getScene~behindChild", "stage": "<anonymous>~getScene~stage"}, "columnno": 8, "filename": "InteractionManager.js", "range": [66497, 67209], "lineno": 1708, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/test"}, "params": [], "longname": "<anonymous>~getScene", "scope": "inner"}, {"comment": "/**\n     *\n     * @private\n     * @param {number} flag - The interaction flag to set\n     * @param {boolean} yn - Should the flag be set or unset\n     */", "kind": "function", "name": "_doSet", "access": "private", "meta": {"code": {"paramnames": ["flag", "yn"], "type": "MethodDefinition", "id": "astnode100000027", "name": "_doSet"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionTrackingData.js", "range": [602, 794], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["number"]}, "description": "The interaction flag to set", "name": "flag"}, {"type": {"names": ["boolean"]}, "description": "Should the flag be set or unset", "name": "yn"}], "longname": "_doSet", "scope": "global"}, {"comment": "/**\n     * Hit tests a point against the display tree, returning the first interactive object that is hit.\n     *\n     * @param {PIXI.Point} globalPoint - A point to hit test with, in global space.\n     * @param {PIXI.Container} [root] - The root display object to start from. If omitted, defaults\n     * to the last rendered root of the associated renderer.\n     * @return {PIXI.DisplayObject} The hit display object, if any.\n     */", "kind": "function", "description": "Hit tests a point against the display tree, returning the first interactive object that is hit.", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The hit display object, if any."}], "meta": {"code": {"paramnames": ["globalPoint", "root"], "type": "MethodDefinition", "id": "astnode100000393", "name": "hitTest"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [25016, 25555], "lineno": 663, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "A point to hit test with, in global space.", "name": "globalPoint"}, {"optional": true, "type": {"names": ["PIXI.Container"]}, "description": "The root display object to start from. If omitted, defaults\nto the last rendered root of the associated renderer.", "name": "root"}], "longname": "hitTest", "scope": "global", "name": "hitTest"}, {"comment": "/**\n     * Sets the DOM element which will receive mouse/touch events. This is useful for when you have\n     * other DOM elements on top of the renderers Canvas element. With this you'll be bale to delegate\n     * another DOM element to receive those events.\n     *\n     * @param {HTMLCanvasElement} element - the DOM element which will receive mouse and touch events.\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the new element (relative to the canvas).\n     */", "kind": "function", "description": "Sets the DOM element which will receive mouse/touch events. This is useful for when you have\nother DOM elements on top of the renderers Canvas element. With this you'll be bale to delegate\nanother DOM element to receive those events.", "meta": {"code": {"paramnames": ["element", "resolution"], "type": "MethodDefinition", "id": "astnode100000438", "name": "setTargetElement"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [26063, 26258], "lineno": 689, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "the DOM element which will receive mouse and touch events.", "name": "element"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The resolution / device pixel ratio of the new element (relative to the canvas).", "name": "resolution"}], "longname": "setTargetElement", "scope": "global", "name": "setTargetElement"}, {"comment": "/**\n     * Registers all the DOM events\n     *\n     * @private\n     */", "kind": "function", "description": "Registers all the DOM events", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000468", "name": "addEvents"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [26339, 29119], "lineno": 705, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "addEvents", "scope": "global", "name": "addEvents"}, {"comment": "/**\n     * Removes all the DOM events that were previously registered\n     *\n     * @private\n     */", "kind": "function", "description": "Removes all the DOM events that were previously registered", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000726", "name": "removeEvents"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [29230, 31375], "lineno": 768, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "removeEvents", "scope": "global", "name": "removeEvents"}, {"comment": "/**\n     * Updates the state of interactive objects.\n     * Invoked by a throttled ticker update from {@link PIXI.Ticker.shared}.\n     *\n     * @param {number} deltaTime - time delta since last tick\n     */", "kind": "function", "description": "Updates the state of interactive objects.\nInvoked by a throttled ticker update from {@link PIXI.Ticker.shared}.", "meta": {"code": {"paramnames": ["deltaTime"], "type": "MethodDefinition", "id": "astnode100000987", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [31592, 33397], "lineno": 824, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["number"]}, "description": "time delta since last tick", "name": "deltaTime"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Sets the current cursor mode, handling any callbacks or CSS style changes.\n     *\n     * @param {string} mode - cursor mode, a key from the cursorStyles dictionary\n     */", "kind": "function", "description": "Sets the current cursor mode, handling any callbacks or CSS style changes.", "meta": {"code": {"paramnames": ["mode"], "type": "MethodDefinition", "id": "astnode100001112", "name": "setCursorMode"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [33590, 35061], "lineno": 888, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["string"]}, "description": "cursor mode, a key from the cursorStyles dictionary", "name": "mode"}], "longname": "setCursorMode", "scope": "global", "name": "setCursorMode"}, {"comment": "/**\n     * Dispatches an event on the display object that was interacted with\n     *\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - the display object in question\n     * @param {string} eventString - the name of the event (e.g, mousedown)\n     * @param {object} eventData - the event data object\n     * @private\n     */", "kind": "function", "description": "Dispatches an event on the display object that was interacted with", "access": "private", "meta": {"code": {"paramnames": ["displayObject", "eventString", "eventData"], "type": "MethodDefinition", "id": "astnode100001215", "name": "dispatchEvent"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [35421, 35817], "lineno": 935, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "the display object in question", "name": "displayObject"}, {"type": {"names": ["string"]}, "description": "the name of the event (e.g, mousedown)", "name": "eventString"}, {"type": {"names": ["object"]}, "description": "the event data object", "name": "eventData"}], "longname": "dispatchEvent", "scope": "global", "name": "dispatchEvent"}, {"comment": "/**\n     * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n     * resulting value is stored in the point. This takes into account the fact that the DOM\n     * element could be scaled and positioned anywhere on the screen.\n     *\n     * @param  {PIXI.Point} point - the point that the result will be stored in\n     * @param  {number} x - the x coord of the position to map\n     * @param  {number} y - the y coord of the position to map\n     */", "kind": "function", "description": "Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\nresulting value is stored in the point. This takes into account the fact that the DOM\nelement could be scaled and positioned anywhere on the screen.", "meta": {"code": {"paramnames": ["point", "x", "y"], "type": "MethodDefinition", "id": "astnode100001258", "name": "mapPositionToPoint"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [36308, 36952], "lineno": 960, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "the point that the result will be stored in", "name": "point"}, {"type": {"names": ["number"]}, "description": "the x coord of the position to map", "name": "x"}, {"type": {"names": ["number"]}, "description": "the y coord of the position to map", "name": "y"}], "longname": "mapPositionToPoint", "scope": "global", "name": "mapPositionToPoint"}, {"comment": "/**\n     * This function is provides a neat way of crawling through the scene graph and running a\n     * specified function on all interactive objects it finds. It will also take care of hit\n     * testing the interactive objects and passes the hit across in the function.\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - event containing the point that\n     *  is tested for collision\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - the displayObject\n     *  that will be hit test (recursively crawls its children)\n     * @param {Function} [func] - the function that will be called on each interactive object. The\n     *  interactionEvent, displayObject and hit will be passed to the function\n     * @param {boolean} [hitTest] - this indicates if the objects inside should be hit test against the point\n     * @param {boolean} [interactive] - Whether the displayObject is interactive\n     * @return {boolean} returns true if the displayObject hit the point\n     */", "kind": "function", "description": "This function is provides a neat way of crawling through the scene graph and running a\nspecified function on all interactive objects it finds. It will also take care of hit\ntesting the interactive objects and passes the hit across in the function.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "returns true if the displayObject hit the point"}], "meta": {"code": {"paramnames": ["interactionEvent", "displayObject", "func", "hitTest", "interactive"], "type": "MethodDefinition", "id": "astnode100001357", "name": "processInteractive"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [38000, 43710], "lineno": 996, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "event containing the point that\n is tested for collision", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "the displayObject\n that will be hit test (recursively crawls its children)", "name": "displayObject"}, {"optional": true, "type": {"names": ["function"]}, "description": "the function that will be called on each interactive object. The\n interactionEvent, displayObject and hit will be passed to the function", "name": "func"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "this indicates if the objects inside should be hit test against the point", "name": "hitTest"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Whether the displayObject is interactive", "name": "interactive"}], "longname": "processInteractive", "scope": "global", "name": "processInteractive"}, {"comment": "/**\n     * Is called when the pointer button is pressed down on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} originalEvent - The DOM event of a pointer button being pressed down\n     */", "kind": "function", "description": "Is called when the pointer button is pressed down on the renderer element", "access": "private", "meta": {"code": {"paramnames": ["originalEvent"], "type": "MethodDefinition", "id": "astnode100001636", "name": "onPointerDown"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [43934, 45829], "lineno": 1144, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer button being pressed down", "name": "originalEvent"}], "longname": "onPointerDown", "scope": "global", "name": "onPointerDown"}, {"comment": "/**\n     * Processes the result of the pointer down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The interaction event wrapping the DOM event\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */", "kind": "function", "description": "Processes the result of the pointer down check and dispatches the event if need be", "access": "private", "meta": {"code": {"paramnames": ["interactionEvent", "displayObject", "hit"], "type": "MethodDefinition", "id": "astnode100001796", "name": "processPointerDown"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [46269, 47426], "lineno": 1201, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The interaction event wrapping the DOM event", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "The display object that was tested", "name": "displayObject"}, {"type": {"names": ["boolean"]}, "description": "the result of the hit test on the display object", "name": "hit"}], "longname": "processPointerDown", "scope": "global", "name": "processPointerDown"}, {"comment": "/**\n     * Is called when the pointer button is released on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} originalEvent - The DOM event of a pointer button being released\n     * @param {boolean} cancelled - true if the pointer is cancelled\n     * @param {Function} func - Function passed to {@link processInteractive}\n     */", "kind": "function", "description": "Is called when the pointer button is released on the renderer element", "access": "private", "meta": {"code": {"paramnames": ["originalEvent", "cancelled", "func"], "type": "MethodDefinition", "id": "astnode100001917", "name": "onPointerComplete"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [47789, 49430], "lineno": 1244, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer button being released", "name": "originalEvent"}, {"type": {"names": ["boolean"]}, "description": "true if the pointer is cancelled", "name": "cancelled"}, {"type": {"names": ["function"]}, "description": "Function passed to {@link processInteractive}", "name": "func"}], "longname": "onPointerComplete", "scope": "global", "name": "onPointerComplete"}, {"comment": "/**\n     * Is called when the pointer button is cancelled\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being released\n     */", "kind": "function", "description": "Is called when the pointer button is cancelled", "access": "private", "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100002091", "name": "onPointerCancel"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [49615, 49897], "lineno": 1289, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer button being released", "name": "event"}], "longname": "onPointerCancel", "scope": "global", "name": "onPointerCancel"}, {"comment": "/**\n     * Processes the result of the pointer cancel check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The interaction event wrapping the DOM event\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - The display object that was tested\n     */", "kind": "function", "description": "Processes the result of the pointer cancel check and dispatches the event if need be", "access": "private", "meta": {"code": {"paramnames": ["interactionEvent", "displayObject"], "type": "MethodDefinition", "id": "astnode100002117", "name": "processPointerCancel"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [50260, 50800], "lineno": 1304, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The interaction event wrapping the DOM event", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "The display object that was tested", "name": "displayObject"}], "longname": "processPointerCancel", "scope": "global", "name": "processPointerCancel"}, {"comment": "/**\n     * Is called when the pointer button is released on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being released\n     */", "kind": "function", "description": "Is called when the pointer button is released on the renderer element", "access": "private", "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100002176", "name": "onPointerUp"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [51008, 51283], "lineno": 1328, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer button being released", "name": "event"}], "longname": "onPointerUp", "scope": "global", "name": "onPointerUp"}, {"comment": "/**\n     * Processes the result of the pointer up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The interaction event wrapping the DOM event\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */", "kind": "function", "description": "Processes the result of the pointer up check and dispatches the event if need be", "access": "private", "meta": {"code": {"paramnames": ["interactionEvent", "displayObject", "hit"], "type": "MethodDefinition", "id": "astnode100002202", "name": "processPointerUp"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [51721, 54999], "lineno": 1344, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The interaction event wrapping the DOM event", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "The display object that was tested", "name": "displayObject"}, {"type": {"names": ["boolean"]}, "description": "the result of the hit test on the display object", "name": "hit"}], "longname": "processPointerUp", "scope": "global", "name": "processPointerUp"}, {"comment": "/**\n     * Is called when the pointer moves across the renderer element\n     *\n     * @private\n     * @param {PointerEvent} originalEvent - The DOM event of a pointer moving\n     */", "kind": "function", "description": "Is called when the pointer moves across the renderer element", "access": "private", "meta": {"code": {"paramnames": ["originalEvent"], "type": "MethodDefinition", "id": "astnode100002452", "name": "onPointerMove"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [55191, 56816], "lineno": 1439, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer moving", "name": "originalEvent"}], "longname": "onPointerMove", "scope": "global", "name": "onPointerMove"}, {"comment": "/**\n     * Processes the result of the pointer move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The interaction event wrapping the DOM event\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */", "kind": "function", "description": "Processes the result of the pointer move check and dispatches the event if need be", "access": "private", "meta": {"code": {"paramnames": ["interactionEvent", "displayObject", "hit"], "type": "MethodDefinition", "id": "astnode100002640", "name": "processPointerMove"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [57256, 57954], "lineno": 1494, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The interaction event wrapping the DOM event", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "The display object that was tested", "name": "displayObject"}, {"type": {"names": ["boolean"]}, "description": "the result of the hit test on the display object", "name": "hit"}], "longname": "processPointerMove", "scope": "global", "name": "processPointerMove"}, {"comment": "/**\n     * Is called when the pointer is moved out of the renderer element\n     *\n     * @private\n     * @param {PointerEvent} originalEvent - The DOM event of a pointer being moved out\n     */", "kind": "function", "description": "Is called when the pointer is moved out of the renderer element", "access": "private", "meta": {"code": {"paramnames": ["originalEvent"], "type": "MethodDefinition", "id": "astnode100002722", "name": "onPointerOut"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [58158, 59533], "lineno": 1521, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer being moved out", "name": "originalEvent"}], "longname": "onPointerOut", "scope": "global", "name": "onPointerOut"}, {"comment": "/**\n     * Processes the result of the pointer over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The interaction event wrapping the DOM event\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */", "kind": "function", "description": "Processes the result of the pointer over/out check and dispatches the event if need be", "access": "private", "meta": {"code": {"paramnames": ["interactionEvent", "displayObject", "hit"], "type": "MethodDefinition", "id": "astnode100002850", "name": "processPointerOverOut"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [59977, 61771], "lineno": 1566, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The interaction event wrapping the DOM event", "name": "interactionEvent"}, {"type": {"names": ["PIXI.Container", "PIXI.Sprite", "PIXI.TilingSprite"]}, "description": "The display object that was tested", "name": "displayObject"}, {"type": {"names": ["boolean"]}, "description": "the result of the hit test on the display object", "name": "hit"}], "longname": "processPointerOverOut", "scope": "global", "name": "processPointerOverOut"}, {"comment": "/**\n     * Is called when the pointer is moved into the renderer element\n     *\n     * @private\n     * @param {PointerEvent} originalEvent - The DOM event of a pointer button being moved into the renderer view\n     */", "kind": "function", "description": "Is called when the pointer is moved into the renderer element", "access": "private", "meta": {"code": {"paramnames": ["originalEvent"], "type": "MethodDefinition", "id": "astnode100003015", "name": "onPointerOver"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [61999, 62788], "lineno": 1625, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "The DOM event of a pointer button being moved into the renderer view", "name": "originalEvent"}], "longname": "onPointerOver", "scope": "global", "name": "onPointerOver"}, {"comment": "/**\n     * Get InteractionData for a given pointerId. Store that data as well\n     *\n     * @private\n     * @param {PointerEvent} event - Normalized pointer event, output from normalizeToPointerData\n     * @return {PIXI.interaction.InteractionData} - Interaction data for the given pointer identifier\n     */", "kind": "function", "description": "Get InteractionData for a given pointerId. Store that data as well", "access": "private", "returns": [{"type": {"names": ["PIXI.interaction.InteractionData"]}, "description": "- Interaction data for the given pointer identifier"}], "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100003102", "name": "getInteractionDataForPointerId"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [63107, 63955], "lineno": 1657, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PointerEvent"]}, "description": "Normalized pointer event, output from normalizeToPointerData", "name": "event"}], "longname": "getInteractionDataForPointerId", "scope": "global", "name": "getInteractionDataForPointerId"}, {"comment": "/**\n     * Return unused InteractionData to the pool, for a given pointerId\n     *\n     * @private\n     * @param {number} pointerId - Identifier from a pointer event\n     */", "kind": "function", "description": "Return unused InteractionData to the pool, for a given pointerId", "access": "private", "meta": {"code": {"paramnames": ["pointerId"], "type": "MethodDefinition", "id": "astnode100003183", "name": "releaseInteractionDataForPointerId"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [64139, 64472], "lineno": 1690, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["number"]}, "description": "Identifier from a pointer event", "name": "pointerId"}], "longname": "releaseInteractionDataForPointerId", "scope": "global", "name": "releaseInteractionDataForPointerId"}, {"comment": "/**\n     * Configure an InteractionEvent to wrap a DOM PointerEvent and InteractionData\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionEvent} interactionEvent - The event to be configured\n     * @param {PointerEvent} pointerEvent - The DOM event that will be paired with the InteractionEvent\n     * @param {PIXI.interaction.InteractionData} interactionData - The InteractionData that will be paired\n     *        with the InteractionEvent\n     * @return {PIXI.interaction.InteractionEvent} the interaction event that was passed in\n     */", "kind": "function", "description": "Configure an InteractionEvent to wrap a DOM PointerEvent and InteractionData", "access": "private", "returns": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "the interaction event that was passed in"}], "meta": {"code": {"paramnames": ["interactionEvent", "pointerEvent", "interactionData"], "type": "MethodDefinition", "id": "astnode100003219", "name": "configureInteractionEventForDOMEvent"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [65040, 66269], "lineno": 1712, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.interaction.InteractionEvent"]}, "description": "The event to be configured", "name": "interactionEvent"}, {"type": {"names": ["PointerEvent"]}, "description": "The DOM event that will be paired with the InteractionEvent", "name": "pointerEvent"}, {"type": {"names": ["PIXI.interaction.InteractionData"]}, "description": "The InteractionData that will be paired\n       with the InteractionEvent", "name": "interactionData"}], "longname": "configureInteractionEventForDOMEvent", "scope": "global", "name": "configureInteractionEventForDOMEvent"}, {"comment": "/**\n     * Ensures that the original event object contains all data that a regular pointer event would have\n     *\n     * @private\n     * @param {TouchEvent|MouseEvent|PointerEvent} event - The original event data from a touch or mouse event\n     * @return {PointerEvent[]} An array containing a single normalized pointer event, in the case of a pointer\n     *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n     */", "kind": "function", "description": "Ensures that the original event object contains all data that a regular pointer event would have", "access": "private", "returns": [{"type": {"names": ["Array.<PointerEvent>"]}, "description": "An array containing a single normalized pointer event, in the case of a pointer\n or mouse event, or a multiple normalized pointer events if there are multiple changed touches"}], "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100003329", "name": "normalizeToPointerData"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [66743, 70017], "lineno": 1748, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["TouchEvent", "MouseEvent", "PointerEvent"]}, "description": "The original event data from a touch or mouse event", "name": "event"}], "longname": "normalizeToPointerData", "scope": "global", "name": "normalizeToPointerData"}, {"comment": "/**\n     * Destroys the interaction manager\n     *\n     */", "kind": "function", "description": "Destroys the interaction manager", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100003762", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionManager.js", "range": [70086, 70758], "lineno": 1817, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Prevents event from reaching any objects other than the current object.\n     *\n     */", "kind": "function", "description": "Prevents event from reaching any objects other than the current object.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000040", "name": "stopPropagation"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionEvent.js", "range": [1198, 1256], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "stopPropagation", "scope": "global", "name": "stopPropagation"}, {"comment": "/**\n     * Resets the event.\n     */", "kind": "function", "description": "Resets the event.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000050", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionEvent.js", "range": [1303, 1415], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * This will return the local coordinates of the specified displayObject for this InteractionData\n     *\n     * @param {PIXI.DisplayObject} displayObject - The DisplayObject that you would like the local\n     *  coords off\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional (otherwise\n     *  will create a new point)\n     * @param {PIXI.Point} [globalPos] - A Point object containing your custom global coords, optional\n     *  (otherwise will use the current global coords)\n     * @return {PIXI.Point} A point containing the coordinates of the InteractionData position relative\n     *  to the DisplayObject\n     */", "kind": "function", "description": "This will return the local coordinates of the specified displayObject for this InteractionData", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "A point containing the coordinates of the InteractionData position relative\n to the DisplayObject"}], "meta": {"code": {"paramnames": ["displayObject", "point", "globalPos"], "type": "MethodDefinition", "id": "astnode100000119", "name": "getLocalPosition"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionData.js", "range": [5253, 5405], "lineno": 158, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The DisplayObject that you would like the local\n coords off", "name": "displayObject"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "A Point object in which to store the value, optional (otherwise\n will create a new point)", "name": "point"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "A Point object containing your custom global coords, optional\n (otherwise will use the current global coords)", "name": "globalPos"}], "longname": "getLocalPosition", "scope": "global", "name": "getLocalPosition"}, {"comment": "/**\n     * Copies properties from normalized event data.\n     *\n     * @param {Touch|MouseEvent|PointerEvent} event The normalized event data\n     */", "kind": "function", "description": "Copies properties from normalized event data.", "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100000139", "name": "copyEvent"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionData.js", "range": [5565, 6568], "lineno": 168, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [{"type": {"names": ["Touch", "MouseEvent", "PointerEvent"]}, "description": "The normalized event data", "name": "event"}], "longname": "copyEvent", "scope": "global", "name": "copyEvent"}, {"comment": "/**\n     * Resets the data for pooling.\n     */", "kind": "function", "description": "Resets the data for pooling.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000258", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "InteractionData.js", "range": [6626, 6809], "lineno": 195, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/interaction/src"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n * Returns the display object in the container.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @return {PIXI.DisplayObject} The child with the specified name.\n */", "kind": "function", "description": "Returns the display object in the container.", "memberof": "PIXI.Container", "returns": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The child with the specified name."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-get-child-by-name/src", "columnno": 0, "lineno": 11, "filename": "index.js"}, "params": [{"type": {"names": ["string"]}, "description": "Instance name.", "name": "name"}], "longname": "PIXI.Container#getChildByName", "scope": "instance", "name": "getChildByName"}, {"comment": "", "kind": "function", "name": "getChildByName", "memberof": "Container", "undocumented": true, "meta": {"code": {"paramnames": ["name"], "type": "FunctionExpression", "id": "astnode100000017", "value": "getChildByName", "name": "Container.prototype.getChildByName"}, "vars": {"i": "Container#getChildByName~i"}, "columnno": 0, "filename": "index.js", "range": [424, 676], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-get-child-by-name/src"}, "longname": "Container#getChildByName", "scope": "instance"}, {"comment": "", "kind": "function", "name": "createMockResource", "undocumented": true, "meta": {"code": {"paramnames": ["type", "data"], "type": "FunctionDeclaration", "id": "astnode100000248", "name": "createMockResource"}, "vars": {"name": "createMockResource~name"}, "columnno": 0, "filename": "TextureLoader.js", "range": [1321, 1543], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/test"}, "params": [], "longname": "createMockResource", "scope": "global"}, {"comment": "/**\n     * Destroy the loader, removes references.\n     */", "kind": "function", "description": "Destroy the loader, removes references.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000180", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Loader.js", "range": [3894, 4030], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Adds a Loader plugin for the global shared loader and all\n * new Loader instances created.\n *\n * @static\n * @method registerPlugin\n * @memberof PIXI.Loader\n * @param {PIXI.Loader~LoaderPlugin} plugin - The plugin to add\n * @return {PIXI.Loader} Reference to PIXI.Loader for chaining\n */", "kind": "function", "description": "Adds a Loader plugin for the global shared loader and all\nnew Loader instances created.", "memberof": "PIXI.Loader", "returns": [{"type": {"names": ["PIXI.Loader"]}, "description": "Reference to PIXI.Loader for chaining"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src", "columnno": 0, "lineno": 145, "filename": "Loader.js"}, "params": [{"type": {"names": ["PIXI.Loader~LoaderPlugin"]}, "description": "The plugin to add", "name": "plugin"}], "longname": "PIXI.Loader.registerPlugin", "scope": "static", "name": "registerPlugin"}, {"comment": "", "kind": "function", "name": "registerPlugin", "memberof": "Loader", "undocumented": true, "meta": {"code": {"paramnames": ["plugin"], "type": "FunctionExpression", "id": "astnode100000251", "value": "registerPlugin", "name": "Loader.registerPlugin"}, "columnno": 0, "filename": "Loader.js", "range": [5036, 5204], "lineno": 155, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src"}, "longname": "Loader.registerPlugin", "scope": "static"}, {"comment": "/**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader~loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */", "kind": "function", "description": "Called after a resource is loaded.", "see": ["PIXI.Loader~loaderMiddleware"], "meta": {"code": {"paramnames": ["resource", "next"], "type": "MethodDefinition", "id": "astnode100000014", "name": "use"}, "vars": {"": null}, "columnno": 4, "filename": "TextureLoader.js", "range": [420, 782], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src"}, "params": [{"type": {"names": ["PIXI.LoaderResource"]}, "name": "resource"}, {"type": {"names": ["function"]}, "name": "next"}], "longname": "use", "scope": "global", "name": "use"}, {"comment": "/**\n     * Called on application constructor\n     * @param {object} options\n     * @private\n     */", "kind": "function", "description": "Called on application constructor", "access": "private", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000010", "name": "init"}, "vars": {"": null}, "columnno": 4, "filename": "LoaderPlugin.js", "range": [502, 870], "lineno": 20, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src"}, "params": [{"type": {"names": ["object"]}, "name": "options"}], "longname": "init", "scope": "global", "name": "init"}, {"comment": "/**\n     * Called when application destroyed\n     * @private\n     */", "kind": "function", "description": "Called when application destroyed", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000040", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "LoaderPlugin.js", "range": [949, 1089], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/loaders/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "cb", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000212", "name": "cb"}, "columnno": 8, "filename": "ObservablePoint.js", "range": [830, 889], "lineno": 36, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/test"}, "params": [], "longname": "<anonymous>~cb", "scope": "inner"}, {"comment": "/**\n     * Creates a clone of this point.\n     * The callback and scope params can be overidden otherwise they will default\n     * to the clone object's values.\n     *\n     * @override\n     * @param {Function} [cb=null] - callback when changed\n     * @param {object} [scope=null] - owner of callback\n     * @return {PIXI.ObservablePoint} a copy of the point\n     */", "kind": "function", "description": "Creates a clone of this point.\nThe callback and scope params can be overidden otherwise they will default\nto the clone object's values.", "returns": [{"type": {"names": ["PIXI.ObservablePoint"]}, "description": "a copy of the point"}], "meta": {"code": {"paramnames": ["cb", "scope"], "type": "MethodDefinition", "id": "astnode100000042", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "ObservablePoint.js", "range": [1107, 1296], "lineno": 36, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"optional": true, "defaultvalue": null, "type": {"names": ["function"]}, "description": "callback when changed", "name": "cb"}, {"optional": true, "defaultvalue": null, "type": {"names": ["object"]}, "description": "owner of callback", "name": "scope"}], "longname": "clone", "override": true, "scope": "global", "name": "clone"}, {"comment": "/**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */", "kind": "function", "description": "Sets the point to a new x and y position.\nIf y is omitted, both x and y will be set to x.", "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000079", "name": "set"}, "vars": {"": null}, "columnno": 4, "filename": "ObservablePoint.js", "range": [1563, 1814], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "position of the point on the x axis", "name": "x"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "position of the point on the y axis", "name": "y"}], "longname": "set", "scope": "global", "name": "set"}, {"comment": "/**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.Point} p - The point to copy from.\n     * @returns Returns itself.\n     */", "kind": "function", "description": "Copies x and y from the given point", "returns": [{"description": "Returns itself."}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000137", "name": "copyFrom"}, "vars": {"": null}, "columnno": 4, "filename": "ObservablePoint.js", "range": [1973, 2178], "lineno": 70, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to copy from.", "name": "p"}], "longname": "copyFrom", "scope": "global", "name": "copyFrom"}, {"comment": "/**\n     * Copies x and y into the given point\n     *\n     * @param {PIXI.Point} p - The point to copy.\n     * @returns Given point with values updated\n     */", "kind": "function", "description": "Copies x and y into the given point", "returns": [{"description": "Given point with values updated"}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000187", "name": "copyTo"}, "vars": {"": null}, "columnno": 4, "filename": "ObservablePoint.js", "range": [2348, 2421], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to copy.", "name": "p"}], "longname": "copyTo", "scope": "global", "name": "copyTo"}, {"comment": "/**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */", "kind": "function", "description": "Returns true if the given point is equal to this point", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the given point equal to this point"}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000205", "name": "equals"}, "vars": {"": null}, "columnno": 4, "filename": "ObservablePoint.js", "range": [2653, 2729], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point", "PIXI.ObservablePoint"]}, "description": "The point to check", "name": "p"}], "longname": "equals", "scope": "global", "name": "equals"}, {"comment": "/**\n     * Creates a clone of this point\n     *\n     * @return {PIXI.Point} a copy of the point\n     */", "kind": "function", "description": "Creates a clone of this point", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "a copy of the point"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000028", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Point.js", "range": [722, 783], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.Point} p - The point to copy from\n     * @returns Returns itself.\n     */", "kind": "function", "description": "Copies x and y from the given point", "returns": [{"description": "Returns itself."}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000041", "name": "copyFrom"}, "vars": {"": null}, "columnno": 4, "filename": "Point.js", "range": [941, 1014], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to copy from", "name": "p"}], "longname": "copyFrom", "scope": "global", "name": "copyFrom"}, {"comment": "/**\n     * Copies x and y into the given point\n     *\n     * @param {PIXI.Point} p - The point to copy.\n     * @returns Given point with values updated\n     */", "kind": "function", "description": "Copies x and y into the given point", "returns": [{"description": "Given point with values updated"}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000059", "name": "copyTo"}, "vars": {"": null}, "columnno": 4, "filename": "Point.js", "range": [1184, 1255], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to copy.", "name": "p"}], "longname": "copyTo", "scope": "global", "name": "copyTo"}, {"comment": "/**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.Point} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */", "kind": "function", "description": "Returns true if the given point is equal to this point", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the given point equal to this point"}], "meta": {"code": {"paramnames": ["p"], "type": "MethodDefinition", "id": "astnode100000077", "name": "equals"}, "vars": {"": null}, "columnno": 4, "filename": "Point.js", "range": [1466, 1540], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The point to check", "name": "p"}], "longname": "equals", "scope": "global", "name": "equals"}, {"comment": "/**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */", "kind": "function", "description": "Sets the point to a new x and y position.\nIf y is omitted, both x and y will be set to x.", "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000098", "name": "set"}, "vars": {"": null}, "columnno": 4, "filename": "Point.js", "range": [1807, 1901], "lineno": 83, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "position of the point on the x axis", "name": "x"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "position of the point on the y axis", "name": "y"}], "longname": "set", "scope": "global", "name": "set"}, {"comment": "/**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */", "kind": "function", "description": "Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n\na = array[0]\nb = array[1]\nc = array[3]\nd = array[4]\ntx = array[2]\nty = array[5]", "meta": {"code": {"paramnames": ["array"], "type": "MethodDefinition", "id": "astnode100000078", "name": "fromArray"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [1571, 1763], "lineno": 77, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "The array that the matrix will be populated from.", "name": "array"}], "longname": "fromArray", "scope": "global", "name": "fromArray"}, {"comment": "/**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "sets the matrix properties", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["a", "b", "c", "d", "tx", "ty"], "type": "MethodDefinition", "id": "astnode100000131", "name": "set"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [2173, 2354], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "Matrix component", "name": "a"}, {"type": {"names": ["number"]}, "description": "Matrix component", "name": "b"}, {"type": {"names": ["number"]}, "description": "Matrix component", "name": "c"}, {"type": {"names": ["number"]}, "description": "Matrix component", "name": "d"}, {"type": {"names": ["number"]}, "description": "Matrix component", "name": "tx"}, {"type": {"names": ["number"]}, "description": "Matrix component", "name": "ty"}], "longname": "set", "scope": "global", "name": "set"}, {"comment": "/**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */", "kind": "function", "description": "Creates an array from the current Matrix object.", "returns": [{"type": {"names": ["Array.<number>"]}, "description": "the newly created array which contains the matrix"}], "meta": {"code": {"paramnames": ["transpose", "out"], "type": "MethodDefinition", "id": "astnode100000179", "name": "toArray"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [2701, 3501], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether we need to transpose the matrix or not", "name": "transpose"}, {"optional": true, "defaultvalue": "new Float32Array(9)", "type": {"names": ["Float32Array"]}, "description": "If provided the array will be assigned to out", "name": "out"}], "longname": "toArray", "scope": "global", "name": "toArray"}, {"comment": "/**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */", "kind": "function", "description": "Get a new position with the current transformation applied.\nCan be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "The new point, transformed through this matrix"}], "meta": {"code": {"paramnames": ["pos", "newPos"], "type": "MethodDefinition", "id": "astnode100000345", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [3936, 4198], "lineno": 163, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The origin", "name": "pos"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "The point that the new position is assigned to (allowed to be same as input)", "name": "newPos"}], "longname": "apply", "scope": "global", "name": "apply"}, {"comment": "/**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */", "kind": "function", "description": "Get a new position with the inverse of the current transformation applied.\nCan be used to go from the world coordinate space to a child's coordinate space. (e.g. input)", "returns": [{"type": {"names": ["PIXI.Point"]}, "description": "The new point, inverse-transformed through this matrix"}], "meta": {"code": {"paramnames": ["pos", "newPos"], "type": "MethodDefinition", "id": "astnode100000412", "name": "applyInverse"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [4652, 5092], "lineno": 184, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "The origin", "name": "pos"}, {"optional": true, "type": {"names": ["PIXI.Point"]}, "description": "The point that the new position is assigned to (allowed to be same as input)", "name": "newPos"}], "longname": "applyInverse", "scope": "global", "name": "applyInverse"}, {"comment": "/**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x How much to translate x by\n     * @param {number} y How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Translates the matrix on the x and y.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000539", "name": "translate"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [5344, 5437], "lineno": 206, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "How much to translate x by", "name": "x"}, {"type": {"names": ["number"]}, "description": "How much to translate y by", "name": "y"}], "longname": "translate", "scope": "global", "name": "translate"}, {"comment": "/**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x The amount to scale horizontally\n     * @param {number} y The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Applies a scale transformation to the matrix.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000559", "name": "scale"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [5707, 5880], "lineno": 221, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "The amount to scale horizontally", "name": "x"}, {"type": {"names": ["number"]}, "description": "The amount to scale vertically", "name": "y"}], "longname": "scale", "scope": "global", "name": "scale"}, {"comment": "/**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Applies a rotation transformation to the matrix.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["angle"], "type": "MethodDefinition", "id": "astnode100000603", "name": "rotate"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [6092, 6580], "lineno": 239, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "The angle in radians.", "name": "angle"}], "longname": "rotate", "scope": "global", "name": "rotate"}, {"comment": "/**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Appends the given Matrix to this Matrix.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100000728", "name": "append"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [6790, 7286], "lineno": 264, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to append.", "name": "matrix"}], "longname": "append", "scope": "global", "name": "append"}, {"comment": "/**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Sets the matrix based on all the available properties", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["x", "y", "pivotX", "pivotY", "scaleX", "scaleY", "rotation", "skewX", "skewY"], "type": "MethodDefinition", "id": "astnode100000863", "name": "setTransform"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [7912, 8364], "lineno": 296, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "Position on the x axis", "name": "x"}, {"type": {"names": ["number"]}, "description": "Position on the y axis", "name": "y"}, {"type": {"names": ["number"]}, "description": "Pivot on the x axis", "name": "pivotX"}, {"type": {"names": ["number"]}, "description": "Pivot on the y axis", "name": "pivotY"}, {"type": {"names": ["number"]}, "description": "Scale on the x axis", "name": "scaleX"}, {"type": {"names": ["number"]}, "description": "Scale on the y axis", "name": "scaleY"}, {"type": {"names": ["number"]}, "description": "Rotation in radians", "name": "rotation"}, {"type": {"names": ["number"]}, "description": "Skew on the x axis", "name": "skewX"}, {"type": {"names": ["number"]}, "description": "Skew on the y axis", "name": "skewY"}], "longname": "setTransform", "scope": "global", "name": "setTransform"}, {"comment": "/**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Prepends the given Matrix to this Matrix.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100000971", "name": "prepend"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [8575, 9202], "lineno": 315, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to prepend", "name": "matrix"}], "longname": "prepend", "scope": "global", "name": "prepend"}, {"comment": "/**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform} The transform with the newly applied properties\n     */", "kind": "function", "description": "Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.", "returns": [{"type": {"names": ["PIXI.Transform"]}, "description": "The transform with the newly applied properties"}], "meta": {"code": {"paramnames": ["transform"], "type": "MethodDefinition", "id": "astnode100001137", "name": "decompose"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [9505, 10563], "lineno": 342, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Transform"]}, "description": "The transform to apply the properties to.", "name": "transform"}], "longname": "decompose", "scope": "global", "name": "decompose"}, {"comment": "/**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Inverts this matrix", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001339", "name": "invert"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [10693, 11123], "lineno": 389, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "invert", "scope": "global", "name": "invert"}, {"comment": "/**\n     * Resets this Matrix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Resets this Matrix to an identity (default) matrix.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "This matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001452", "name": "identity"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [11285, 11451], "lineno": 413, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "identity", "scope": "global", "name": "identity"}, {"comment": "/**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */", "kind": "function", "description": "Creates a new Matrix object with the same values as this one.", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "A copy of this matrix. Good for chaining method calls."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001494", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [11633, 11880], "lineno": 430, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy to.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */", "kind": "function", "description": "Changes the values of the given matrix to be the same as the ones in this matrix", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix given in parameter with its values updated."}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100001553", "name": "copyTo"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [12141, 12357], "lineno": 450, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to copy to.", "name": "matrix"}], "longname": "copyTo", "scope": "global", "name": "copyTo"}, {"comment": "/**\n     * Changes the values of the matrix to be the same as the ones in given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} this\n     */", "kind": "function", "description": "Changes the values of the matrix to be the same as the ones in given matrix", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "this"}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100001608", "name": "copyFrom"}, "vars": {"": null}, "columnno": 4, "filename": "Matrix.js", "range": [12565, 12781], "lineno": 468, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to copy from.", "name": "matrix"}], "longname": "copyFrom", "scope": "global", "name": "copyFrom"}, {"comment": "/**\n     * Called when a value changes.\n     *\n     * @private\n     */", "kind": "function", "description": "Called when a value changes.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000138", "name": "onChange"}, "vars": {"": null}, "columnno": 4, "filename": "Transform.js", "range": [1912, 1959], "lineno": 78, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "onChange", "scope": "global", "name": "onChange"}, {"comment": "/**\n     * Called when skew or rotation changes\n     *\n     * @private\n     */", "kind": "function", "description": "Called when skew or rotation changes", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000147", "name": "updateSkew"}, "vars": {"": null}, "columnno": 4, "filename": "Transform.js", "range": [2048, 2377], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "updateSkew", "scope": "global", "name": "updateSkew"}, {"comment": "/**\n     * Updates only local matrix\n     */", "kind": "function", "description": "Updates only local matrix", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000229", "name": "updateLocalTransform"}, "vars": {"": null}, "columnno": 4, "filename": "Transform.js", "range": [2432, 3151], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "updateLocalTransform", "scope": "global", "name": "updateLocalTransform"}, {"comment": "/**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n     */", "kind": "function", "description": "Updates the values of the object and applies the parent's transform.", "meta": {"code": {"paramnames": ["parentTransform"], "type": "MethodDefinition", "id": "astnode100000379", "name": "updateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "Transform.js", "range": [3348, 4779], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Transform"]}, "description": "The transform of the parent of this object", "name": "parentTransform"}], "longname": "updateTransform", "scope": "global", "name": "updateTransform"}, {"comment": "/**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to decompose\n     */", "kind": "function", "description": "Decomposes a matrix and sets the transforms properties based on it.", "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100000692", "name": "setFromMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "Transform.js", "range": [4944, 5034], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to decompose", "name": "matrix"}], "longname": "setFromMatrix", "scope": "global", "name": "setFromMatrix"}, {"comment": "", "kind": "function", "name": "signum", "undocumented": true, "meta": {"code": {"paramnames": ["x"], "type": "FunctionDeclaration", "id": "astnode100000118", "name": "signum"}, "columnno": 0, "filename": "GroupD8.js", "range": [427, 555], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "signum", "scope": "global"}, {"comment": "", "kind": "function", "name": "init", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000139", "name": "init"}, "vars": {"_uy": "init~_uy", "_ux": "init~_ux", "mat": "init~mat", "i": "init~i", "k": "init~k", "j": "init~j", "_vx": "init~_vx", "_vy": "init~_vy", "row": "init~row"}, "columnno": 0, "filename": "GroupD8.js", "range": [557, 1411], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [], "longname": "init", "scope": "global"}, {"comment": "", "kind": "function", "name": "uX", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000365", "name": "uX"}, "columnno": 4, "filename": "GroupD8.js", "range": [2165, 2185], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.uX", "scope": "static"}, {"comment": "", "kind": "function", "name": "uY", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000371", "name": "uY"}, "columnno": 4, "filename": "GroupD8.js", "range": [2191, 2211], "lineno": 89, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.uY", "scope": "static"}, {"comment": "", "kind": "function", "name": "vX", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000377", "name": "vX"}, "columnno": 4, "filename": "GroupD8.js", "range": [2217, 2237], "lineno": 90, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.vX", "scope": "static"}, {"comment": "", "kind": "function", "name": "vY", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000383", "name": "vY"}, "columnno": 4, "filename": "GroupD8.js", "range": [2243, 2263], "lineno": 91, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.vY", "scope": "static"}, {"comment": "", "kind": "function", "name": "inv", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000389", "name": "inv"}, "columnno": 4, "filename": "GroupD8.js", "range": [2269, 2412], "lineno": 92, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.inv", "scope": "static"}, {"comment": "", "kind": "function", "name": "add", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000407", "name": "add"}, "columnno": 4, "filename": "GroupD8.js", "range": [2418, 2492], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.add", "scope": "static"}, {"comment": "", "kind": "function", "name": "sub", "memberof": "PIXI.GroupD8", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000416", "name": "sub"}, "columnno": 4, "filename": "GroupD8.js", "range": [2498, 2585], "lineno": 102, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "longname": "PIXI.GroupD8.sub", "scope": "static"}, {"comment": "/**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @memberof PIXI.GroupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */", "kind": "function", "description": "Adds 180 degrees to rotation. Commutative operation.", "memberof": "PIXI.GroupD8", "returns": [{"type": {"names": ["number"]}, "description": "rotated number"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000429", "name": "rotate180"}, "columnno": 4, "filename": "GroupD8.js", "range": [2801, 2838], "lineno": 111, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "The number to rotate.", "name": "rotation"}], "longname": "PIXI.GroupD8.rotate180", "scope": "static", "name": "rotate180"}, {"comment": "/**\n     * Direction of main vector can be horizontal, vertical or diagonal.\n     * Some objects work with vertical directions different.\n     *\n     * @memberof PIXI.GroupD8\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */", "kind": "function", "description": "Direction of main vector can be horizontal, vertical or diagonal.\nSome objects work with vertical directions different.", "memberof": "PIXI.GroupD8", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether or not the direction is vertical"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000435", "name": "isVertical"}, "columnno": 4, "filename": "GroupD8.js", "range": [3154, 3200], "lineno": 121, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "The number to check.", "name": "rotation"}], "longname": "PIXI.GroupD8.isVertical", "scope": "static", "name": "isVertical"}, {"comment": "/**\n     * @memberof PIXI.GroupD8\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */", "kind": "function", "name": "byDirection", "memberof": "PIXI.GroupD8", "returns": [{"type": {"names": ["number"]}, "description": "TODO"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000443", "name": "byDirection"}, "columnno": 4, "filename": "GroupD8.js", "range": [3355, 4031], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["number"]}, "description": "TODO", "name": "dx"}, {"type": {"names": ["number"]}, "description": "TODO", "name": "dy"}], "longname": "PIXI.GroupD8.byDirection", "scope": "static"}, {"comment": "/**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @memberof PIXI.GroupD8\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */", "kind": "function", "description": "Helps sprite to compensate texture packer rotation.", "memberof": "PIXI.GroupD8", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000535", "name": "matrixAppendRotationInv"}, "vars": {"mat": "PIXI.GroupD8.matrixAppendRotationInv~mat", "mat.tx": "PIXI.GroupD8.matrixAppendRotationInv~mat.tx", "mat.ty": "PIXI.GroupD8.matrixAppendRotationInv~mat.ty"}, "columnno": 4, "filename": "GroupD8.js", "range": [4359, 4619], "lineno": 176, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "sprite world matrix", "name": "matrix"}, {"type": {"names": ["number"]}, "description": "The rotation factor to use.", "name": "rotation"}, {"type": {"names": ["number"]}, "description": "sprite anchoring", "name": "tx"}, {"type": {"names": ["number"]}, "description": "sprite anchoring", "name": "ty"}], "longname": "PIXI.GroupD8.matrixAppendRotationInv", "scope": "static", "name": "matrixAppendRotationInv"}, {"comment": "/**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {PIXI.Ellipse} a copy of the ellipse\n     */", "kind": "function", "description": "Creates a clone of this Ellipse instance", "returns": [{"type": {"names": ["PIXI.Ellipse"]}, "description": "a copy of the ellipse"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000062", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Ellipse.js", "range": [1397, 1485], "lineno": 60, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */", "kind": "function", "description": "Checks whether the x and y coordinates given are contained within this ellipse", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the x/y coords are within this ellipse"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000081", "name": "contains"}, "vars": {"": null}, "columnno": 4, "filename": "Ellipse.js", "range": [1802, 2172], "lineno": 72, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the point to test", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the point to test", "name": "y"}], "longname": "contains", "scope": "global", "name": "contains"}, {"comment": "/**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {PIXI.Rectangle} the framing rectangle\n     */", "kind": "function", "description": "Returns the framing rectangle of the ellipse as a Rectangle object", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "the framing rectangle"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000140", "name": "getBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Ellipse.js", "range": [2329, 2450], "lineno": 94, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "getBounds", "scope": "global", "name": "getBounds"}, {"comment": "/**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */", "kind": "function", "description": "Creates a clone of this Rounded Rectangle", "returns": [{"type": {"names": ["PIXI.RoundedRectangle"]}, "description": "a copy of the rounded rectangle"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000067", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "RoundedRectangle.js", "range": [1729, 1839], "lineno": 67, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */", "kind": "function", "description": "Checks whether the x and y coordinates given are contained within this Rounded Rectangle", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the x/y coordinates are within this Rounded Rectangle"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000089", "name": "contains"}, "vars": {"": null}, "columnno": 4, "filename": "RoundedRectangle.js", "range": [2181, 3566], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the point to test", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the point to test", "name": "y"}], "longname": "contains", "scope": "global", "name": "contains"}, {"comment": "/**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */", "kind": "function", "description": "Creates a clone of this polygon", "returns": [{"type": {"names": ["PIXI.Polygon"]}, "description": "a copy of the polygon"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000101", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Polygon.js", "range": [1609, 1677], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Closes the polygon, adding points if necessary.\n     *\n     */", "kind": "function", "description": "Closes the polygon, adding points if necessary.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000114", "name": "close"}, "vars": {"": null}, "columnno": 4, "filename": "Polygon.js", "range": [1761, 2028], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "close", "scope": "global", "name": "close"}, {"comment": "/**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */", "kind": "function", "description": "Checks whether the x and y coordinates passed to this function are contained within this polygon", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the x/y coordinates are within this polygon"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000160", "name": "contains"}, "vars": {"": null}, "columnno": 4, "filename": "Polygon.js", "range": [2368, 3077], "lineno": 89, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the point to test", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the point to test", "name": "y"}], "longname": "contains", "scope": "global", "name": "contains"}, {"comment": "/**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */", "kind": "function", "description": "Creates a clone of this Rectangle", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "a copy of the rectangle"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000117", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [2242, 2332], "lineno": 111, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy from.\n     * @return {PIXI.Rectangle} Returns itself.\n     */", "kind": "function", "description": "Copies another rectangle to this one.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": ["rectangle"], "type": "MethodDefinition", "id": "astnode100000136", "name": "copyFrom"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [2525, 2716], "lineno": 122, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangle to copy from.", "name": "rectangle"}], "longname": "copyFrom", "scope": "global", "name": "copyFrom"}, {"comment": "/**\n     * Copies this rectangle to another one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy to.\n     * @return {PIXI.Rectangle} Returns given parameter.\n     */", "kind": "function", "description": "Copies this rectangle to another one.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "Returns given parameter."}], "meta": {"code": {"paramnames": ["rectangle"], "type": "MethodDefinition", "id": "astnode100000175", "name": "copyTo"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [2916, 3110], "lineno": 138, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangle to copy to.", "name": "rectangle"}], "longname": "copyTo", "scope": "global", "name": "copyTo"}, {"comment": "/**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */", "kind": "function", "description": "Checks whether the x and y coordinates given are contained within this Rectangle", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the x/y coordinates are within this Rectangle"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000214", "name": "contains"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [3436, 3767], "lineno": 155, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the point to test", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the point to test", "name": "y"}], "longname": "contains", "scope": "global", "name": "contains"}, {"comment": "/**\n     * Pads the rectangle making it grow in all directions.\n     *\n     * @param {number} paddingX - The horizontal padding amount.\n     * @param {number} paddingY - The vertical padding amount.\n     */", "kind": "function", "description": "Pads the rectangle making it grow in all directions.", "meta": {"code": {"paramnames": ["paddingX", "paddingY"], "type": "MethodDefinition", "id": "astnode100000273", "name": "pad"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [3984, 4250], "lineno": 179, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The horizontal padding amount.", "name": "paddingX"}, {"type": {"names": ["number"]}, "description": "The vertical padding amount.", "name": "paddingY"}], "longname": "pad", "scope": "global", "name": "pad"}, {"comment": "/**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     */", "kind": "function", "description": "Fits this rectangle around the passed one.", "meta": {"code": {"paramnames": ["rectangle"], "type": "MethodDefinition", "id": "astnode100000324", "name": "fit"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [4394, 5317], "lineno": 196, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangle to fit.", "name": "rectangle"}], "longname": "fit", "scope": "global", "name": "fit"}, {"comment": "/**\n     * Enlarges rectangle that way its corners lie on grid\n     *\n     * @param {number} [resolution=1] resolution\n     * @param {number} [eps=0.001] precision\n     */", "kind": "function", "description": "Enlarges rectangle that way its corners lie on grid", "meta": {"code": {"paramnames": ["resolution", "eps"], "type": "MethodDefinition", "id": "astnode100000489", "name": "ceil"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [5499, 5928], "lineno": 244, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "resolution", "name": "resolution"}, {"optional": true, "defaultvalue": 0.001, "type": {"names": ["number"]}, "description": "precision", "name": "eps"}], "longname": "ceil", "scope": "global", "name": "ceil"}, {"comment": "/**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to include.\n     */", "kind": "function", "description": "Enlarges this rectangle to include the passed rectangle.", "meta": {"code": {"paramnames": ["rectangle"], "type": "MethodDefinition", "id": "astnode100000595", "name": "enlarge"}, "vars": {"": null}, "columnno": 4, "filename": "Rectangle.js", "range": [6090, 6488], "lineno": 261, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangle to include.", "name": "rectangle"}], "longname": "enlarge", "scope": "global", "name": "enlarge"}, {"comment": "/**\n     * Creates a clone of this Circle instance\n     *\n     * @return {PIXI.Circle} a copy of the Circle\n     */", "kind": "function", "description": "Creates a clone of this Circle instance", "returns": [{"type": {"names": ["PIXI.Circle"]}, "description": "a copy of the Circle"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000053", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Circle.js", "range": [1179, 1254], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Checks whether the x and y coordinates given are contained within this circle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */", "kind": "function", "description": "Checks whether the x and y coordinates given are contained within this circle", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether the x/y coordinates are within this Circle"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000069", "name": "contains"}, "vars": {"": null}, "columnno": 4, "filename": "Circle.js", "range": [1574, 1855], "lineno": 65, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the point to test", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the point to test", "name": "y"}], "longname": "contains", "scope": "global", "name": "contains"}, {"comment": "/**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {PIXI.Rectangle} the framing rectangle\n    */", "kind": "function", "description": "Returns the framing rectangle of the circle as a Rectangle object", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "the framing rectangle"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000124", "name": "getBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Circle.js", "range": [2007, 2138], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/math/src/shapes"}, "params": [], "longname": "getBounds", "scope": "global", "name": "getBounds"}, {"comment": "/**\n * The maximum recommended texture units to use.\n * In theory the bigger the better, and for desktop we'll use as many as we can.\n * But some mobile devices slow down if there is to many branches in the shader.\n * So in practice there seems to be a sweet spot size that varies depending on the device.\n *\n * In v4, all mobile devices were limited to 4 texture units because for this.\n * In v5, we allow all texture units to be used on modern Apple or Android devices.\n *\n * @param {number} max\n * @returns {number}\n */", "kind": "function", "description": "The maximum recommended texture units to use.\nIn theory the bigger the better, and for desktop we'll use as many as we can.\nBut some mobile devices slow down if there is to many branches in the shader.\nSo in practice there seems to be a sweet spot size that varies depending on the device.\n\nIn v4, all mobile devices were limited to 4 texture units because for this.\nIn v5, we allow all texture units to be used on modern Apple or Android devices.", "memberof": "module", "returns": [{"type": {"names": ["number"]}}], "meta": {"code": {"paramnames": ["max"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "maxRecommendedTextures.js", "range": [557, 1650], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/settings/src/utils"}, "params": [{"type": {"names": ["number"]}, "name": "max"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "maxRecommendedTextures", "undocumented": true, "meta": {"code": {"paramnames": ["max"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "maxRecommendedTextures"}, "vars": {"majorVersion": "maxRecommendedTextures~majorVersion", "match": "maxRecommendedTextures~match", "allowMax": "maxRecommendedTextures~allowMax"}, "columnno": 15, "filename": "maxRecommendedTextures.js", "range": [572, 1650], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/settings/src/utils"}, "params": [], "longname": "maxRecommendedTextures", "scope": "global"}, {"comment": "/**\n * Uploading the same buffer multiple times in a single frame can cause performance issues.\n * Apparent on iOS so only check for that at the moment\n * This check may become more complex if this issue pops up elsewhere.\n *\n * @returns {boolean}\n */", "kind": "function", "description": "Uploading the same buffer multiple times in a single frame can cause performance issues.\nApparent on iOS so only check for that at the moment\nThis check may become more complex if this issue pops up elsewhere.", "memberof": "module", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "canUploadSameBuffer.js", "range": [286, 368], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/settings/src/utils"}, "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "canUploadSameBuffer", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "canUploadSameBuffer"}, "columnno": 15, "filename": "canUploadSameBuffer.js", "range": [301, 368], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/settings/src/utils"}, "params": [], "longname": "canUploadSameBuffer", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "memberof": "PIXI.DisplayObject#cacheAsBitmap", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000135", "name": "get"}, "columnno": 8, "filename": "index.js", "range": [1831, 1896], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "longname": "PIXI.DisplayObject#cacheAsBitmap.get", "scope": "static"}, {"comment": "", "kind": "function", "name": "set", "memberof": "PIXI.DisplayObject#cacheAsBitmap", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000142", "name": "set"}, "vars": {"data.originalUpdateTransform": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalUpdateTransform", "data.originalGetLocalBounds": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalGetLocalBounds", "this.renderCanvas": "PIXI.DisplayObject#cacheAsBitmap.set#renderCanvas", "data.originalCalculateBounds": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalCalculateBounds", "data.originalMask": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalMask", "this.updateTransform": "PIXI.DisplayObject#cacheAsBitmap.set#updateTransform", "data.originalContainsPoint": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalContainsPoint", "this.destroy": "PIXI.DisplayObject#cacheAsBitmap.set#destroy", "data.originalDestroy": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalDestroy", "this._calculateBounds": "PIXI.DisplayObject#cacheAsBitmap.set#_calculateBounds", "this.containsPoint": "PIXI.DisplayObject#cacheAsBitmap.set#containsPoint", "this.filterArea": "PIXI.DisplayObject#cacheAsBitmap.set#filterArea", "data.originalFilterArea": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalFilterArea", "data.originalRenderCanvas": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalRenderCanvas", "this._mask": "PIXI.DisplayObject#cacheAsBitmap.set#_mask", "data.originalRender": "PIXI.DisplayObject#cacheAsBitmap.set~data.originalRender", "this._cacheData": "PIXI.DisplayObject#cacheAsBitmap.set#_cacheData", "this._cacheAsBitmap": "PIXI.DisplayObject#cacheAsBitmap.set#_cacheAsBitmap", "data": "PIXI.DisplayObject#cacheAsBitmap.set~data", "this.render": "PIXI.DisplayObject#cacheAsBitmap.set#render", "this.getLocalBounds": "PIXI.DisplayObject#cacheAsBitmap.set#getLocalBounds"}, "columnno": 8, "filename": "index.js", "range": [1906, 3805], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "longname": "PIXI.DisplayObject#cacheAsBitmap.set", "scope": "static"}, {"comment": "/**\n * Renders a cached version of the sprite with WebGL\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */", "kind": "function", "description": "Renders a cached version of the sprite with WebGL", "memberof": "PIXI.DisplayObject#DisplayObject", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000371", "value": "_renderCached", "name": "DisplayObject.prototype._renderCached"}, "vars": {"this._cacheData.sprite.transform._worldID": "PIXI.DisplayObject#DisplayObject#_renderCached#_cacheData.sprite.transform._worldID", "this._cacheData.sprite.worldAlpha": "PIXI.DisplayObject#DisplayObject#_renderCached#_cacheData.sprite.worldAlpha"}, "columnno": 0, "filename": "index.js", "range": [3984, 4378], "lineno": 133, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "the WebGL renderer", "name": "renderer"}], "longname": "PIXI.DisplayObject#DisplayObject#_renderCached", "scope": "instance", "name": "_renderCached"}, {"comment": "/**\n * Prepares the WebGL renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */", "kind": "function", "description": "Prepares the WebGL renderer to cache the sprite", "memberof": "PIXI.DisplayObject#DisplayObject", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000444", "value": "_initCachedDisplayObject", "name": "DisplayObject.prototype._initCachedDisplayObject"}, "vars": {"renderTexture": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~renderTexture", "cachedSprite.anchor.x": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite.anchor.x", "this.parent": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#parent", "cachedSprite": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite", "this._mask": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#_mask", "cachedSprite.alpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite.alpha", "this.render": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#render", "this.getLocalBounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#getLocalBounds", "this._cacheData.textureCacheId": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#_cacheData.textureCacheId", "cachedSprite.transform.worldTransform": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite.transform.worldTransform", "cacheAlpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cacheAlpha", "this.containsPoint": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#containsPoint", "this._calculateBounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#_calculateBounds", "this.transform._parentID": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#transform._parentID", "cachedSprite.anchor.y": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite.anchor.y", "this.updateTransform": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#updateTransform", "cachedSprite._bounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedSprite._bounds", "m.ty": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~m.ty", "m.tx": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~m.tx", "this.filterArea": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#filterArea", "textureCacheId": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~textureCacheId", "padding": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~padding", "cachedRenderTarget": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~cachedRenderTarget", "this.alpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#alpha", "m": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~m", "bounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject~bounds", "this._cacheData.sprite": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject#_cacheData.sprite"}, "columnno": 0, "filename": "index.js", "range": [4544, 7925], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "the WebGL renderer", "name": "renderer"}], "longname": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObject", "scope": "instance", "name": "_initCachedDisplayObject"}, {"comment": "/**\n * Renders a cached version of the sprite with canvas\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */", "kind": "function", "description": "Renders a cached version of the sprite with canvas", "memberof": "PIXI.DisplayObject#DisplayObject", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000801", "value": "_renderCachedCanvas", "name": "DisplayObject.prototype._renderCachedCanvas"}, "vars": {"this._cacheData.sprite.worldAlpha": "PIXI.DisplayObject#DisplayObject#_renderCachedCanvas#_cacheData.sprite.worldAlpha"}, "columnno": 0, "filename": "index.js", "range": [8094, 8439], "lineno": 266, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "the WebGL renderer", "name": "renderer"}], "longname": "PIXI.DisplayObject#DisplayObject#_renderCachedCanvas", "scope": "instance", "name": "_renderCachedCanvas"}, {"comment": "/**\n * Prepares the Canvas renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Renderer} renderer - the WebGL renderer\n */", "kind": "function", "description": "Prepares the Canvas renderer to cache the sprite", "memberof": "PIXI.DisplayObject#DisplayObject", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000858", "value": "_initCachedDisplayObjectCanvas", "name": "DisplayObject.prototype._initCachedDisplayObjectCanvas"}, "vars": {"cachedSprite.anchor.y": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite.anchor.y", "cachedSprite.anchor.x": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite.anchor.x", "renderer.context": "renderer.context", "this._mask": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#_mask", "this.parent": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#parent", "cachedSprite": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite", "cachedSprite.alpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite.alpha", "renderTexture": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~renderTexture", "this._cacheData.textureCacheId": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#_cacheData.textureCacheId", "this.renderCanvas": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#renderCanvas", "cachedSprite.transform.worldTransform": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite.transform.worldTransform", "cacheAlpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cacheAlpha", "this.containsPoint": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#containsPoint", "this.calculateBounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#calculateBounds", "this.updateTransform": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#updateTransform", "cachedSprite._bounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedSprite._bounds", "m.ty": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~m.ty", "m.tx": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~m.tx", "this.filterArea": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#filterArea", "textureCacheId": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~textureCacheId", "cachedRenderTarget": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~cachedRenderTarget", "this.alpha": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#alpha", "m": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~m", "bounds": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas~bounds", "this._cacheData.sprite": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas#_cacheData.sprite"}, "columnno": 0, "filename": "index.js", "range": [8707, 10907], "lineno": 287, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "the WebGL renderer", "name": "renderer"}], "longname": "PIXI.DisplayObject#DisplayObject#_initCachedDisplayObjectCanvas", "scope": "instance", "name": "_initCachedDisplayObjectCanvas"}, {"comment": "/**\n * Calculates the bounds of the cached sprite\n *\n * @private\n */", "kind": "function", "description": "Calculates the bounds of the cached sprite", "memberof": "DisplayObject", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001169", "value": "_calculateCachedBounds", "name": "DisplayObject.prototype._calculateCachedBounds"}, "vars": {"this._cacheData.sprite.transform._worldID": "DisplayObject#_calculateCachedBounds#_cacheData.sprite.transform._worldID", "this._lastBoundsID": "DisplayObject#_calculateCachedBounds#_lastBoundsID"}, "columnno": 0, "filename": "index.js", "range": [10979, 11252], "lineno": 371, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "longname": "DisplayObject#_calculateCachedBounds", "scope": "instance", "name": "_calculateCachedBounds"}, {"comment": "/**\n * Gets the bounds of the cached sprite.\n *\n * @private\n * @return {Rectangle} The local bounds.\n */", "kind": "function", "description": "Gets the bounds of the cached sprite.", "memberof": "DisplayObject", "access": "private", "returns": [{"type": {"names": ["Rectangle"]}, "description": "The local bounds."}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001219", "value": "_getCachedLocalBounds", "name": "DisplayObject.prototype._getCachedLocalBounds"}, "columnno": 0, "filename": "index.js", "range": [11360, 11496], "lineno": 385, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "longname": "DisplayObject#_getCachedLocalBounds", "scope": "instance", "name": "_getCachedLocalBounds"}, {"comment": "/**\n * Destroys the cached sprite.\n *\n * @private\n */", "kind": "function", "description": "Destroys the cached sprite.", "memberof": "DisplayObject", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001238", "value": "_destroyCachedDisplayObject", "name": "DisplayObject.prototype._destroyCachedDisplayObject"}, "vars": {"this._cacheData.sprite": "DisplayObject#_destroyCachedDisplayObject#_cacheData.sprite", "this._cacheData.textureCacheId": "DisplayObject#_destroyCachedDisplayObject#_cacheData.textureCacheId"}, "columnno": 0, "filename": "index.js", "range": [11553, 11906], "lineno": 395, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "longname": "DisplayObject#_destroyCachedDisplayObject", "scope": "instance", "name": "_destroyCachedDisplayObject"}, {"comment": "/**\n * Destroys the cached object.\n *\n * @private\n * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n *  have been set to that value.\n *  Used when destroying containers, see the Container.destroy method.\n */", "kind": "function", "description": "Destroys the cached object.", "memberof": "DisplayObject", "access": "private", "meta": {"code": {"paramnames": ["options"], "type": "FunctionExpression", "id": "astnode100001296", "value": "_cacheAsBitmapDestroy", "name": "DisplayObject.prototype._cacheAsBitmapDestroy"}, "vars": {"this.cacheAsBitmap": "DisplayObject#_cacheAsBitmapDestroy#cacheAsBitmap"}, "columnno": 0, "filename": "index.js", "range": [12162, 12312], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-cache-as-bitmap/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value.\n Used when destroying containers, see the Container.destroy method.", "name": "options"}], "longname": "DisplayObject#_cacheAsBitmapDestroy", "scope": "instance", "name": "_cacheAsBitmapDestroy"}, {"comment": "", "kind": "function", "name": "withGL", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000047", "name": "withGL"}, "columnno": 0, "filename": "Plane.js", "range": [245, 324], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/test"}, "params": [], "longname": "withGL", "scope": "global"}, {"comment": "", "kind": "function", "name": "_render", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000049", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "SimpleRope.js", "range": [926, 1202], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "_render", "scope": "global"}, {"comment": "", "kind": "function", "name": "textureUpdated", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000114", "name": "textureUpdated"}, "vars": {"": null}, "columnno": 4, "filename": "NineSlicePlane.js", "range": [3460, 3513], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "textureUpdated", "scope": "global"}, {"comment": "/**\n     * Updates the horizontal vertices.\n     *\n     */", "kind": "function", "description": "Updates the horizontal vertices.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000154", "name": "updateHorizontalVertices"}, "vars": {"": null}, "columnno": 4, "filename": "NineSlicePlane.js", "range": [3786, 4274], "lineno": 126, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "updateHorizontalVertices", "scope": "global", "name": "updateHorizontalVertices"}, {"comment": "/**\n     * Updates the vertical vertices.\n     *\n     */", "kind": "function", "description": "Updates the vertical vertices.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000257", "name": "updateVerticalVertices"}, "vars": {"": null}, "columnno": 4, "filename": "NineSlicePlane.js", "range": [4341, 4817], "lineno": 142, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "updateVerticalVertices", "scope": "global", "name": "updateVerticalVertices"}, {"comment": "/**\n     * Refreshes NineSlicePlane coords. All of them.\n     */", "kind": "function", "description": "Refreshes NineSlicePlane coords. All of them.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000504", "name": "_refresh"}, "vars": {"": null}, "columnno": 4, "filename": "NineSlicePlane.js", "range": [6713, 7678], "lineno": 253, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "_refresh", "scope": "global", "name": "_refresh"}, {"comment": "", "kind": "function", "name": "textureUpdated", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000066", "name": "textureUpdated"}, "vars": {"": null}, "columnno": 4, "filename": "SimplePlane.js", "range": [1153, 1329], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "textureUpdated", "scope": "global"}, {"comment": "", "kind": "function", "name": "_render", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000100", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "SimpleMesh.js", "range": [1416, 1596], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src"}, "params": [], "longname": "_render", "scope": "global"}, {"comment": "/**\n     * Refreshes Rope indices and uvs\n     * @private\n     */", "kind": "function", "description": "Refreshes Rope indices and uvs", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000062", "name": "build"}, "vars": {"": null}, "columnno": 4, "filename": "RopeGeometry.js", "range": [1092, 3006], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src/geometry"}, "params": [], "longname": "build", "scope": "global", "name": "build"}, {"comment": "/**\n     * refreshes vertices of Rope mesh\n     */", "kind": "function", "description": "refreshes vertices of Rope mesh", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000345", "name": "updateVertices"}, "vars": {"": null}, "columnno": 4, "filename": "RopeGeometry.js", "range": [3067, 4555], "lineno": 117, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src/geometry"}, "params": [], "longname": "updateVertices", "scope": "global", "name": "updateVertices"}, {"comment": "", "kind": "function", "name": "update", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000580", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "RopeGeometry.js", "range": [4561, 4612], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src/geometry"}, "params": [], "longname": "update", "scope": "global"}, {"comment": "/**\n     * Refreshes plane coordinates\n     * @private\n     */", "kind": "function", "description": "Refreshes plane coordinates", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000059", "name": "build"}, "vars": {"": null}, "columnno": 4, "filename": "PlaneGeometry.js", "range": [484, 1939], "lineno": 23, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh-extras/src/geometry"}, "params": [], "longname": "build", "scope": "global", "name": "build"}, {"comment": "/**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */", "kind": "function", "description": "Applies the filter.", "meta": {"code": {"paramnames": ["filterManager", "input", "output"], "type": "MethodDefinition", "id": "astnode100000094", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "DisplacementFilter.js", "range": [1581, 1915], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-displacement/src"}, "params": [{"type": {"names": ["PIXI.FilterManager"]}, "description": "The manager.", "name": "filterManager"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The input target.", "name": "input"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The output target.", "name": "output"}], "longname": "apply", "scope": "global", "name": "apply"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["kernelSize", "x"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "module.exports"}, "columnno": 0, "filename": "generateBlurVertSource.js", "range": [718, 1675], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "generateBlurVertSource", "undocumented": true, "meta": {"code": {"paramnames": ["kernelSize", "x"], "type": "FunctionDeclaration", "id": "astnode100000008", "name": "generateBlurVertSource"}, "vars": {"halfLength": "generateBlurVertSource~halfLength", "blurLoop": "generateBlurVertSource~blurLoop", "i": "generateBlurVertSource~i", "template": "generateBlurVertSource~template", "blur": "generateBlurVertSource~blur", "vertSource": "generateBlurVertSource~vertSource"}, "columnno": 15, "filename": "generateBlurVertSource.js", "range": [733, 1675], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [], "longname": "generateBlurVertSource", "scope": "global"}, {"comment": "", "kind": "function", "name": "apply", "undocumented": true, "meta": {"code": {"paramnames": ["filterManager", "input", "output", "clear"], "type": "MethodDefinition", "id": "astnode100000094", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "BlurFilterPass.js", "range": [1418, 3354], "lineno": 46, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [], "longname": "apply", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["kernelSize"], "type": "FunctionDeclaration", "id": "astnode100000066", "name": "module.exports"}, "columnno": 0, "filename": "generateBlurFragSource.js", "range": [628, 1412], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "generateBlurFragSource", "undocumented": true, "meta": {"code": {"paramnames": ["kernelSize"], "type": "FunctionDeclaration", "id": "astnode100000067", "name": "generateBlurFragSource"}, "vars": {"kernel": "generateBlurFragSource~kernel", "blurLoop": "generateBlurFragSource~blurLoop", "halfLength": "generateBlurFragSource~halfLength", "i": "generateBlurFragSource~i", "value": "generateBlurFragSource~value", "template": "generateBlurFragSource~template", "blur": "generateBlurFragSource~blur", "fragSource": "generateBlurFragSource~fragSource"}, "columnno": 15, "filename": "generateBlurFragSource.js", "range": [643, 1412], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [], "longname": "generateBlurFragSource", "scope": "global"}, {"comment": "/**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */", "kind": "function", "description": "Applies the filter.", "meta": {"code": {"paramnames": ["filterManager", "input", "output", "clear"], "type": "MethodDefinition", "id": "astnode100000086", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "BlurFilter.js", "range": [1393, 2145], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [{"type": {"names": ["PIXI.FilterManager"]}, "description": "The manager.", "name": "filterManager"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The input target.", "name": "input"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The output target.", "name": "output"}], "longname": "apply", "scope": "global", "name": "apply"}, {"comment": "", "kind": "function", "name": "updatePadding", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000184", "name": "updatePadding"}, "vars": {"": null}, "columnno": 4, "filename": "BlurFilter.js", "range": [2151, 2412], "lineno": 66, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [], "longname": "updatePadding", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["gl"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "getMaxBlurKernelSize.js", "range": [0, 239], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "getMaxKernelSize", "undocumented": true, "meta": {"code": {"paramnames": ["gl"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "getMaxKernelSize"}, "vars": {"maxVaryings": "getMaxKernelSize~maxVaryings", "kernelSize": "getMaxKernelSize~kernelSize"}, "columnno": 15, "filename": "getMaxBlurKernelSize.js", "range": [15, 239], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-blur/src"}, "params": [], "longname": "getMaxKernelSize", "scope": "global"}, {"comment": "/**\n     * Transforms current matrix and set the new one\n     *\n     * @param {number[]} matrix - 5x4 matrix\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Transforms current matrix and set the new one", "meta": {"code": {"paramnames": ["matrix", "multiply"], "type": "MethodDefinition", "id": "astnode100000065", "name": "_loadMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [1323, 1633], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix", "name": "matrix"}, {"defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "_loadMatrix", "scope": "global", "name": "_loadMatrix"}, {"comment": "/**\n     * Multiplies two mat5's\n     *\n     * @private\n     * @param {number[]} out - 5x4 matrix the receiving matrix\n     * @param {number[]} a - 5x4 matrix the first operand\n     * @param {number[]} b - 5x4 matrix the second operand\n     * @returns {number[]} 5x4 matrix\n     */", "kind": "function", "description": "Multiplies two mat5's", "access": "private", "returns": [{"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix"}], "meta": {"code": {"paramnames": ["out", "a", "b"], "type": "MethodDefinition", "id": "astnode100000108", "name": "_multiply"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [1925, 3798], "lineno": 70, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix the receiving matrix", "name": "out"}, {"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix the first operand", "name": "a"}, {"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix the second operand", "name": "b"}], "longname": "_multiply", "scope": "global", "name": "_multiply"}, {"comment": "/**\n     * Create a Float32 Array and normalize the offset component to 0-1\n     *\n     * @private\n     * @param {number[]} matrix - 5x4 matrix\n     * @return {number[]} 5x4 matrix with all values between 0-1\n     */", "kind": "function", "description": "Create a Float32 Array and normalize the offset component to 0-1", "access": "private", "returns": [{"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix with all values between 0-1"}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100000853", "name": "_colorMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [4025, 4283], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "5x4 matrix", "name": "matrix"}], "longname": "_colorMatrix", "scope": "global", "name": "_colorMatrix"}, {"comment": "/**\n     * Adjusts brightness\n     *\n     * @param {number} b - value of the brigthness (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Adjusts brightness", "meta": {"code": {"paramnames": ["b", "multiply"], "type": "MethodDefinition", "id": "astnode100000890", "name": "brightness"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [4564, 4788], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "value of the brigthness (0-1, where 0 is black)", "name": "b"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "brightness", "scope": "global", "name": "brightness"}, {"comment": "/**\n     * Set the matrices in grey scales\n     *\n     * @param {number} scale - value of the grey (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Set the matrices in grey scales", "meta": {"code": {"paramnames": ["scale", "multiply"], "type": "MethodDefinition", "id": "astnode100000927", "name": "greyscale"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [5080, 5343], "lineno": 149, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "value of the grey (0-1, where 0 is black)", "name": "scale"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "greyscale", "scope": "global", "name": "greyscale"}, {"comment": "/**\n     * Set the black and white matrice.\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Set the black and white matrice.", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100000964", "name": "blackAndWhite"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [5563, 5805], "lineno": 167, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "blackAndWhite", "scope": "global", "name": "blackAndWhite"}, {"comment": "/**\n     * Set the hue property of the color\n     *\n     * @param {number} rotation - in degrees\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Set the hue property of the color", "meta": {"code": {"paramnames": ["rotation", "multiply"], "type": "MethodDefinition", "id": "astnode100001000", "name": "hue"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [6071, 7765], "lineno": 186, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "in degrees", "name": "rotation"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "hue", "scope": "global", "name": "hue"}, {"comment": "/**\n     * Set the contrast matrix, increase the separation between dark and bright\n     * Increase contrast : shadows darker and highlights brighter\n     * Decrease contrast : bring the shadows up and the highlights down\n     *\n     * @param {number} amount - value of the contrast (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Set the contrast matrix, increase the separation between dark and bright\nIncrease contrast : shadows darker and highlights brighter\nDecrease contrast : bring the shadows up and the highlights down", "meta": {"code": {"paramnames": ["amount", "multiply"], "type": "MethodDefinition", "id": "astnode100001185", "name": "contrast"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [8223, 8522], "lineno": 241, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "value of the contrast (0-1)", "name": "amount"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "contrast", "scope": "global", "name": "contrast"}, {"comment": "/**\n     * Set the saturation matrix, increase the separation between colors\n     * Increase saturation : increase contrast, brightness, and sharpness\n     *\n     * @param {number} amount - The saturation amount (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Set the saturation matrix, increase the separation between colors\nIncrease saturation : increase contrast, brightness, and sharpness", "meta": {"code": {"paramnames": ["amount", "multiply"], "type": "MethodDefinition", "id": "astnode100001239", "name": "saturate"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [8909, 9217], "lineno": 264, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"defaultvalue": 0, "type": {"names": ["number"]}, "description": "The saturation amount (0-1)", "name": "amount"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "saturate", "scope": "global", "name": "saturate"}, {"comment": "/**\n     * Desaturate image (remove color)\n     *\n     * Call the saturate function\n     *\n     */", "kind": "function", "description": "Desaturate image (remove color)\n\nCall the saturate function", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001297", "name": "desaturate"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [9326, 9415], "lineno": 285, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [], "longname": "desaturate", "scope": "global", "name": "desaturate"}, {"comment": "/**\n     * Negative image (inverse of classic rgb matrix)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Negative image (inverse of classic rgb matrix)", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001308", "name": "negative"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [9649, 9871], "lineno": 296, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "negative", "scope": "global", "name": "negative"}, {"comment": "/**\n     * Sepia image\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Sepia image", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001347", "name": "sepia"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [10070, 10349], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "sepia", "scope": "global", "name": "sepia"}, {"comment": "/**\n     * Color motion picture process invented in 1916 (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Color motion picture process invented in 1916 (thanks Dominic Szablewski)", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001383", "name": "technicolor"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [10610, 11042], "lineno": 332, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "technicolor", "scope": "global", "name": "technicolor"}, {"comment": "/**\n     * Polaroid filter\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Polaroid filter", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001426", "name": "polaroid"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [11245, 11506], "lineno": 350, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "polaroid", "scope": "global", "name": "polaroid"}, {"comment": "/**\n     * Filter who transforms : Red -> Blue and Blue -> Red\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Filter who transforms : Red -> Blue and Blue -> Red", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001468", "name": "toBGR"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [11745, 11961], "lineno": 368, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "toBGR", "scope": "global", "name": "toBGR"}, {"comment": "/**\n     * Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001504", "name": "kodachrome"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [12233, 12666], "lineno": 386, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "kodachrome", "scope": "global", "name": "kodachrome"}, {"comment": "/**\n     * Brown delicious browni filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Brown delicious browni filter (thanks Dominic Szablewski)", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001546", "name": "browni"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [12911, 13341], "lineno": 404, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "browni", "scope": "global", "name": "browni"}, {"comment": "/**\n     * Vintage filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Vintage filter (thanks Dominic Szablewski)", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001587", "name": "vintage"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [13571, 13995], "lineno": 422, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "vintage", "scope": "global", "name": "vintage"}, {"comment": "/**\n     * We don't know exactly what it does, kind of gradient map, but funny to play with!\n     *\n     * @param {number} desaturation - Tone values.\n     * @param {number} toned - Tone values.\n     * @param {string} lightColor - Tone values, example: `0xFFE580`\n     * @param {string} darkColor - Tone values, example: `0xFFE580`\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "We don't know exactly what it does, kind of gradient map, but funny to play with!", "meta": {"code": {"paramnames": ["desaturation", "toned", "lightColor", "darkColor", "multiply"], "type": "MethodDefinition", "id": "astnode100001625", "name": "colorTone"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [14496, 15276], "lineno": 444, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "Tone values.", "name": "desaturation"}, {"type": {"names": ["number"]}, "description": "Tone values.", "name": "toned"}, {"type": {"names": ["string"]}, "description": "Tone values, example: `0xFFE580`", "name": "lightColor"}, {"type": {"names": ["string"]}, "description": "Tone values, example: `0xFFE580`", "name": "darkColor"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "colorTone", "scope": "global", "name": "colorTone"}, {"comment": "/**\n     * Night effect\n     *\n     * @param {number} intensity - The intensity of the night effect.\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Night effect", "meta": {"code": {"paramnames": ["intensity", "multiply"], "type": "MethodDefinition", "id": "astnode100001751", "name": "night"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [15546, 15876], "lineno": 476, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "The intensity of the night effect.", "name": "intensity"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "night", "scope": "global", "name": "night"}, {"comment": "/**\n     * Predator effect\n     *\n     * Erase the current matrix by setting a new indepent one\n     *\n     * @param {number} amount - how much the predator feels his future victim\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "Predator effect\n\nErase the current matrix by setting a new indepent one", "meta": {"code": {"paramnames": ["amount", "multiply"], "type": "MethodDefinition", "id": "astnode100001801", "name": "predator"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [16226, 17023], "lineno": 498, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["number"]}, "description": "how much the predator feels his future victim", "name": "amount"}, {"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "predator", "scope": "global", "name": "predator"}, {"comment": "/**\n     * LSD effect\n     *\n     * Multiply the current matrix\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */", "kind": "function", "description": "LSD effect\n\nMultiply the current matrix", "meta": {"code": {"paramnames": ["multiply"], "type": "MethodDefinition", "id": "astnode100001875", "name": "lsd"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [17263, 17494], "lineno": 534, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, current matrix and matrix are multiplied. If false,\n just set the current matrix with @param matrix", "name": "multiply"}], "longname": "lsd", "scope": "global", "name": "lsd"}, {"comment": "/**\n     * Erase the current matrix by setting the default one\n     *\n     */", "kind": "function", "description": "Erase the current matrix by setting the default one", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001916", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "ColorMatrixFilter.js", "range": [17582, 17787], "lineno": 550, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/filters/filter-color-matrix/src"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "", "kind": "function", "name": "length", "undocumented": true, "meta": {"code": {"paramnames": ["ticker"], "type": "ArrowFunctionExpression", "id": "astnode100000030", "name": "this.length"}, "vars": {"listener": "length~listener", "i": "length~i", "ticker": "length~ticker"}, "columnno": 8, "filename": "Ticker.js", "range": [155, 561], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/test"}, "longname": "length", "scope": "global"}, {"comment": "", "kind": "function", "name": "render", "memberof": "app", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000112", "name": "render"}, "columnno": 16, "filename": "TickerPlugin.js", "range": [690, 768], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/test"}, "longname": "app.render", "scope": "static"}, {"comment": "/**\n     * Simple compare function to figure out if a function and context match.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} context - The listener context\n     * @return {boolean} `true` if the listener match the arguments\n     */", "kind": "function", "description": "Simple compare function to figure out if a function and context match.", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` if the listener match the arguments"}], "meta": {"code": {"paramnames": ["fn", "context"], "type": "MethodDefinition", "id": "astnode100000062", "name": "match"}, "vars": {"": null}, "columnno": 4, "filename": "TickerListener.js", "range": [1774, 1899], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["function"]}, "description": "The listener function to be added for one update", "name": "fn"}, {"type": {"names": ["function"]}, "description": "The listener context", "name": "context"}], "longname": "match", "scope": "global", "name": "match"}, {"comment": "/**\n     * Emit by calling the current function.\n     * @param {number} deltaTime - time since the last emit.\n     * @return {TickerListener} Next ticker\n     */", "kind": "function", "description": "Emit by calling the current function.", "returns": [{"type": {"names": ["TickerListener"]}, "description": "Next ticker"}], "meta": {"code": {"paramnames": ["deltaTime"], "type": "MethodDefinition", "id": "astnode100000086", "name": "emit"}, "vars": {"": null}, "columnno": 4, "filename": "TickerListener.js", "range": [2071, 2623], "lineno": 83, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["number"]}, "description": "time since the last emit.", "name": "deltaTime"}], "longname": "emit", "scope": "global", "name": "emit"}, {"comment": "/**\n     * Connect to the list.\n     * @param {TickerListener} previous - Input node, previous listener\n     */", "kind": "function", "description": "Connect to the list.", "meta": {"code": {"paramnames": ["previous"], "type": "MethodDefinition", "id": "astnode100000149", "name": "connect"}, "vars": {"": null}, "columnno": 4, "filename": "TickerListener.js", "range": [2745, 2963], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["TickerListener"]}, "description": "Input node, previous listener", "name": "previous"}], "longname": "connect", "scope": "global", "name": "connect"}, {"comment": "/**\n     * Destroy and don't use after this.\n     * @param {boolean} [hard = false] `true` to remove the `next` reference, this\n     *        is considered a hard destroy. Soft destroy maintains the next reference.\n     * @return {TickerListener} The listener to redirect while emitting or removing.\n     */", "kind": "function", "description": "Destroy and don't use after this.", "returns": [{"type": {"names": ["TickerListener"]}, "description": "The listener to redirect while emitting or removing."}], "meta": {"code": {"paramnames": ["hard"], "type": "MethodDefinition", "id": "astnode100000187", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "TickerListener.js", "range": [3281, 3836], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "`true` to remove the `next` reference, this\n       is considered a hard destroy. Soft destroy maintains the next reference.", "name": "hard"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */", "kind": "function", "description": "Internal tick method bound to ticker instance.\nThis is because in early 2015, Function.bind\nis still 60% slower in high performance scenarios.\nAlso separating frame requests from update method\nso listeners may be called at any time and with\nany animation API, just invoke ticker.update(time).", "memberof": "PIXI.module.exports", "access": "private", "meta": {"code": {"paramnames": ["time"], "type": "ArrowFunctionExpression", "id": "astnode100000092", "name": "this._tick"}, "vars": {"this._requestId": "PIXI.module.exports#_requestId"}, "columnno": 8, "filename": "Ticker.js", "range": [4109, 4584], "lineno": 132, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["number"]}, "description": "Time since last tick.", "name": "time"}], "longname": "PIXI.module.exports#_tick", "scope": "instance", "name": "_tick"}, {"comment": "/**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */", "kind": "function", "description": "Conditionally requests a new animation frame.\nIf a frame has not already been requested, and if the internal\nemitter has listeners, a new frame is requested.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000143", "name": "_requestIfNeeded"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [4815, 5084], "lineno": 156, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "_requestIfNeeded", "scope": "global", "name": "_requestIfNeeded"}, {"comment": "/**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */", "kind": "function", "description": "Conditionally cancels a pending animation frame.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000179", "name": "_cancelIfNeeded"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [5185, 5359], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "_cancelIfNeeded", "scope": "global", "name": "_cancelIfNeeded"}, {"comment": "/**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */", "kind": "function", "description": "Conditionally requests a new animation frame.\nIf the ticker has been started it checks if a frame has not already\nbeen requested, and if the internal emitter has listeners. If these\nconditions are met, a new frame is requested. If the ticker has not\nbeen started, but autoStart is `true`, then the ticker starts now,\nand continues with the previous conditions to request a new frame.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000202", "name": "_startIfPossible"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [5830, 6022], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "_startIfPossible", "scope": "global", "name": "_startIfPossible"}, {"comment": "/**\n     * Register a handler for tick events. Calls continuously unless\n     * it is removed or the ticker is stopped.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {Function} [context] - The listener context\n     * @param {number} [priority=PIXI.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */", "kind": "function", "description": "Register a handler for tick events. Calls continuously unless\nit is removed or the ticker is stopped.", "returns": [{"type": {"names": ["PIXI.Ticker"]}, "description": "This instance of a ticker"}], "meta": {"code": {"paramnames": ["fn", "context", "priority"], "type": "MethodDefinition", "id": "astnode100000226", "name": "add"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [6447, 6587], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["function"]}, "description": "The listener function to be added for updates", "name": "fn"}, {"optional": true, "type": {"names": ["function"]}, "description": "The listener context", "name": "context"}, {"optional": true, "defaultvalue": "PIXI.UPDATE_PRIORITY.NORMAL", "type": {"names": ["number"]}, "description": "The priority for emitting", "name": "priority"}], "longname": "add", "scope": "global", "name": "add"}, {"comment": "/**\n     * Add a handler for the tick event which is only execute once.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context] - The listener context\n     * @param {number} [priority=PIXI.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */", "kind": "function", "description": "Add a handler for the tick event which is only execute once.", "returns": [{"type": {"names": ["PIXI.Ticker"]}, "description": "This instance of a ticker"}], "meta": {"code": {"paramnames": ["fn", "context", "priority"], "type": "MethodDefinition", "id": "astnode100000247", "name": "addOnce"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [6967, 7117], "lineno": 224, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["function"]}, "description": "The listener function to be added for one update", "name": "fn"}, {"optional": true, "type": {"names": ["function"]}, "description": "The listener context", "name": "context"}, {"optional": true, "defaultvalue": "PIXI.UPDATE_PRIORITY.NORMAL", "type": {"names": ["number"]}, "description": "The priority for emitting", "name": "priority"}], "longname": "addOnce", "scope": "global", "name": "addOnce"}, {"comment": "/**\n     * Internally adds the event handler so that it can be sorted by priority.\n     * Priority allows certain handler (user, AnimatedSprite, Interaction) to be run\n     * before the rendering.\n     *\n     * @private\n     * @param {TickerListener} listener - Current listener being added.\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */", "kind": "function", "description": "Internally adds the event handler so that it can be sorted by priority.\nPriority allows certain handler (user, AnimatedSprite, Interaction) to be run\nbefore the rendering.", "access": "private", "returns": [{"type": {"names": ["PIXI.Ticker"]}, "description": "This instance of a ticker"}], "meta": {"code": {"paramnames": ["listener"], "type": "MethodDefinition", "id": "astnode100000269", "name": "_addListener"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [7483, 8319], "lineno": 238, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["TickerListener"]}, "description": "Current listener being added.", "name": "listener"}], "longname": "_addListener", "scope": "global", "name": "_addListener"}, {"comment": "/**\n     * Removes any handlers matching the function and context parameters.\n     * If no handlers are left after removing, then it cancels the animation frame.\n     *\n     * @param {Function} fn - The listener function to be removed\n     * @param {Function} [context] - The listener context to be removed\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */", "kind": "function", "description": "Removes any handlers matching the function and context parameters.\nIf no handlers are left after removing, then it cancels the animation frame.", "returns": [{"type": {"names": ["PIXI.Ticker"]}, "description": "This instance of a ticker"}], "meta": {"code": {"paramnames": ["fn", "context"], "type": "MethodDefinition", "id": "astnode100000347", "name": "remove"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [8700, 9288], "lineno": 283, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"type": {"names": ["function"]}, "description": "The listener function to be removed", "name": "fn"}, {"optional": true, "type": {"names": ["function"]}, "description": "The listener context to be removed", "name": "context"}], "longname": "remove", "scope": "global", "name": "remove"}, {"comment": "/**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */", "kind": "function", "description": "Starts the ticker. If the ticker has listeners\na new animation frame is requested at this point.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000401", "name": "start"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [9421, 9557], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "start", "scope": "global", "name": "start"}, {"comment": "/**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */", "kind": "function", "description": "Stops the ticker. If the ticker has requested\nan animation frame it is canceled at this point.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000422", "name": "stop"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [9688, 9822], "lineno": 327, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "stop", "scope": "global", "name": "stop"}, {"comment": "/**\n     * Destroy the ticker and don't use after this. Calling\n     * this method removes all references to internal events.\n     */", "kind": "function", "description": "Destroy the ticker and don't use after this. Calling\nthis method removes all references to internal events.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000442", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [9966, 10282], "lineno": 340, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Triggers an update. An update entails setting the\n     * current {@link PIXI.Ticker#elapsedMS},\n     * the current {@link PIXI.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link PIXI.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */", "kind": "function", "description": "Triggers an update. An update entails setting the\ncurrent {@link PIXI.Ticker#elapsedMS},\nthe current {@link PIXI.Ticker#deltaTime},\ninvoking all listeners with current deltaTime,\nand then finally setting {@link PIXI.Ticker#lastTime}\nwith the value of currentTime that was provided.\nThis method will be called automatically by animation\nframe callbacks if the ticker instance has been started\nand listeners are added.", "meta": {"code": {"paramnames": ["currentTime"], "type": "MethodDefinition", "id": "astnode100000489", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "Ticker.js", "range": [10878, 13194], "lineno": 371, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"optional": true, "defaultvalue": "performance.now()", "type": {"names": ["number"]}, "description": "the current time of execution", "name": "currentTime"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */", "kind": "function", "description": "Initialize the plugin with scope of application instance", "access": "private", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000014", "name": "init"}, "vars": {"": null}, "columnno": 4, "filename": "TickerPlugin.js", "range": [508, 2299], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [{"optional": true, "type": {"names": ["object"]}, "description": "See application options", "name": "options"}], "longname": "init", "scope": "global", "name": "init"}, {"comment": "", "kind": "function", "name": "set", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000040", "name": "set"}, "vars": {"this._ticker": "PIXI.module.exports#_ticker"}, "columnno": 16, "filename": "TickerPlugin.js", "range": [784, 1172], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "longname": "set", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000081", "name": "get"}, "columnno": 16, "filename": "TickerPlugin.js", "range": [1190, 1272], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "longname": "get", "scope": "global"}, {"comment": "/**\n         * Convenience method for stopping the render.\n         * @method PIXI.Application#stop\n         */", "kind": "function", "description": "Convenience method for stopping the render.", "memberof": "PIXI.Application", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src", "columnno": 8, "lineno": 50, "filename": "TickerPlugin.js"}, "longname": "PIXI.Application#stop", "scope": "instance", "name": "stop"}, {"comment": "", "kind": "function", "name": "stop", "memberof": "PIXI.module.exports", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000089", "name": "this.stop"}, "columnno": 8, "filename": "TickerPlugin.js", "range": [1419, 1489], "lineno": 54, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "longname": "PIXI.module.exports#stop", "scope": "instance"}, {"comment": "/**\n         * Convenience method for starting the render.\n         * @method PIXI.Application#start\n         */", "kind": "function", "description": "Convenience method for starting the render.", "memberof": "PIXI.Application", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src", "columnno": 8, "lineno": 59, "filename": "TickerPlugin.js"}, "longname": "PIXI.Application#start", "scope": "instance", "name": "start"}, {"comment": "", "kind": "function", "name": "start", "memberof": "PIXI.module.exports", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000103", "name": "this.start"}, "columnno": 8, "filename": "TickerPlugin.js", "range": [1621, 1693], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "longname": "PIXI.module.exports#start", "scope": "instance"}, {"comment": "/**\n     * Clean up the ticker, scoped to application\n     * @static\n     * @private\n     */", "kind": "function", "description": "Clean up the ticker, scoped to application", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000146", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "TickerPlugin.js", "range": [2402, 2586], "lineno": 98, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/ticker/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "canBreakWords", "memberof": "TextMetrics", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100002844", "name": "TextMetrics.canBreakWords"}, "columnno": 12, "filename": "TextMetrics.js", "range": [21882, 21978], "lineno": 600, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/test"}, "longname": "TextMetrics.canBreakWords", "scope": "static"}, {"comment": "", "kind": "function", "name": "canBreakChars", "memberof": "TextMetrics", "undocumented": true, "meta": {"code": {"paramnames": ["char", "nextChar"], "type": "FunctionExpression", "id": "astnode100002853", "name": "TextMetrics.canBreakChars"}, "columnno": 12, "filename": "TextMetrics.js", "range": [22028, 22175], "lineno": 606, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/test"}, "longname": "TextMetrics.canBreakChars", "scope": "static"}, {"comment": "", "kind": "function", "name": "destroy", "memberof": "<anonymous>~child", "undocumented": true, "meta": {"code": {"paramnames": ["opts"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000503", "name": "child.destroy"}, "vars": {"childDestroyOpts": "<anonymous>~child.destroy~childDestroyOpts"}, "columnno": 12, "filename": "Text.js", "range": [3559, 3659], "lineno": 124, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/test"}, "longname": "<anonymous>~child.destroy", "scope": "static"}, {"comment": "/**\n     * Measures the supplied string of text and returns a Rectangle.\n     *\n     * @param {string} text - the text to measure.\n     * @param {PIXI.TextStyle} style - the text style to use for measuring\n     * @param {boolean} [wordWrap] - optional override for if word-wrap should be applied to the text.\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {PIXI.TextMetrics} measured width and height of the text.\n     */", "kind": "function", "description": "Measures the supplied string of text and returns a Rectangle.", "returns": [{"type": {"names": ["PIXI.TextMetrics"]}, "description": "measured width and height of the text."}], "meta": {"code": {"paramnames": ["text", "style", "wordWrap", "canvas"], "type": "MethodDefinition", "id": "astnode100000073", "name": "measureText"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [2023, 3664], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "the text to measure.", "name": "text"}, {"type": {"names": ["PIXI.TextStyle"]}, "description": "the text style to use for measuring", "name": "style"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "optional override for if word-wrap should be applied to the text.", "name": "wordWrap"}, {"optional": true, "type": {"names": ["HTMLCanvasElement"]}, "description": "optional specification of the canvas to use for measuring.", "name": "canvas"}], "longname": "measureText", "scope": "global", "name": "measureText"}, {"comment": "/**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @param {PIXI.TextStyle} style - the style to use when wrapping\n     * @param {HTMLCanvasElement} [canvas] - optional specification of the canvas to use for measuring.\n     * @return {string} New string with new lines applied where required\n     */", "kind": "function", "description": "Applies newlines to a string to have it optimally fit into the horizontal\nbounds set by the Text object's wordWrapWidth property.", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "New string with new lines applied where required"}], "meta": {"code": {"paramnames": ["text", "style", "canvas"], "type": "MethodDefinition", "id": "astnode100000301", "name": "wordWrap"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [4163, 10760], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "String to apply word wrapping to", "name": "text"}, {"type": {"names": ["PIXI.TextStyle"]}, "description": "the style to use when wrapping", "name": "style"}, {"optional": true, "type": {"names": ["HTMLCanvasElement"]}, "description": "optional specification of the canvas to use for measuring.", "name": "canvas"}], "longname": "wordWrap", "scope": "global", "name": "wordWrap"}, {"comment": "/**\n     * Convienience function for logging each line added during the wordWrap\n     * method\n     *\n     * @private\n     * @param  {string}   line        - The line of text to add\n     * @param  {boolean}  newLine     - Add new line character to end\n     * @return {string}   A formatted line\n     */", "kind": "function", "description": "Convienience function for logging each line added during the wordWrap\nmethod", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "A formatted line"}], "meta": {"code": {"paramnames": ["line", "newLine"], "type": "MethodDefinition", "id": "astnode100000767", "name": "addLine"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [11073, 11235], "lineno": 303, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The line of text to add", "name": "line"}, {"defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Add new line character to end", "name": "newLine"}], "longname": "addLine", "scope": "global", "name": "addLine"}, {"comment": "/**\n     * Gets & sets the widths of calculated characters in a cache object\n     *\n     * @private\n     * @param  {string}                    key            The key\n     * @param  {number}                    letterSpacing  The letter spacing\n     * @param  {object}                    cache          The cache\n     * @param  {CanvasRenderingContext2D}  context        The canvas context\n     * @return {number}                    The from cache.\n     */", "kind": "function", "description": "Gets & sets the widths of calculated characters in a cache object", "access": "private", "returns": [{"type": {"names": ["number"]}, "description": "The from cache."}], "meta": {"code": {"paramnames": ["key", "letterSpacing", "cache", "context"], "type": "MethodDefinition", "id": "astnode100000795", "name": "getFromCache"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [11700, 12031], "lineno": 322, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The key", "name": "key"}, {"type": {"names": ["number"]}, "description": "The letter spacing", "name": "letterSpacing"}, {"type": {"names": ["object"]}, "description": "The cache", "name": "cache"}, {"type": {"names": ["CanvasRenderingContext2D"]}, "description": "The canvas context", "name": "context"}], "longname": "getFromCache", "scope": "global", "name": "getFromCache"}, {"comment": "/**\n     * Determines whether we should collapse breaking spaces\n     *\n     * @private\n     * @param  {string}   whiteSpace  The TextStyle property whiteSpace\n     * @return {boolean}  should collapse\n     */", "kind": "function", "description": "Determines whether we should collapse breaking spaces", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "should collapse"}], "meta": {"code": {"paramnames": ["whiteSpace"], "type": "MethodDefinition", "id": "astnode100000842", "name": "collapseSpaces"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [12251, 12367], "lineno": 344, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The TextStyle property whiteSpace", "name": "whiteSpace"}], "longname": "collapseSpaces", "scope": "global", "name": "collapseSpaces"}, {"comment": "/**\n     * Determines whether we should collapse newLine chars\n     *\n     * @private\n     * @param  {string}   whiteSpace  The white space\n     * @return {boolean}  should collapse\n     */", "kind": "function", "description": "Determines whether we should collapse newLine chars", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "should collapse"}], "meta": {"code": {"paramnames": ["whiteSpace"], "type": "MethodDefinition", "id": "astnode100000855", "name": "collapseNewlines"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [12567, 12656], "lineno": 356, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The white space", "name": "whiteSpace"}], "longname": "collapseNewlines", "scope": "global", "name": "collapseNewlines"}, {"comment": "/**\n     * trims breaking whitespaces from string\n     *\n     * @private\n     * @param  {string}  text  The text\n     * @return {string}  trimmed string\n     */", "kind": "function", "description": "trims breaking whitespaces from string", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "trimmed string"}], "meta": {"code": {"paramnames": ["text"], "type": "MethodDefinition", "id": "astnode100000864", "name": "trimRight"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [12827, 13213], "lineno": 368, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The text", "name": "text"}], "longname": "trimRight", "scope": "global", "name": "trimRight"}, {"comment": "/**\n     * Determines if char is a newline.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if newline, False otherwise.\n     */", "kind": "function", "description": "Determines if char is a newline.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "True if newline, False otherwise."}], "meta": {"code": {"paramnames": ["char"], "type": "MethodDefinition", "id": "astnode100000919", "name": "isNewline"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [13403, 13595], "lineno": 397, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The character", "name": "char"}], "longname": "isNewline", "scope": "global", "name": "isNewline"}, {"comment": "/**\n     * Determines if char is a breaking whitespace.\n     *\n     * @private\n     * @param  {string}  char  The character\n     * @return {boolean}  True if whitespace, False otherwise.\n     */", "kind": "function", "description": "Determines if char is a breaking whitespace.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "True if whitespace, False otherwise."}], "meta": {"code": {"paramnames": ["char"], "type": "MethodDefinition", "id": "astnode100000946", "name": "isBreakingSpace"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [13800, 14004], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The character", "name": "char"}], "longname": "isBreakingSpace", "scope": "global", "name": "isBreakingSpace"}, {"comment": "/**\n     * Splits a string into words, breaking-spaces and newLine characters\n     *\n     * @private\n     * @param  {string}  text       The text\n     * @return {array}  A tokenized array\n     */", "kind": "function", "description": "Splits a string into words, breaking-spaces and newLine characters", "access": "private", "returns": [{"type": {"names": ["array"]}, "description": "A tokenized array"}], "meta": {"code": {"paramnames": ["text"], "type": "MethodDefinition", "id": "astnode100000973", "name": "tokenize"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [14210, 14928], "lineno": 431, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The text", "name": "text"}], "longname": "tokenize", "scope": "global", "name": "tokenize"}, {"comment": "/**\n     * This method exists to be easily overridden\n     * It allows one to customise which words should break\n     * Examples are if the token is CJK or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  token       The token\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */", "kind": "function", "description": "This method exists to be easily overridden\nIt allows one to customise which words should break\nExamples are if the token is CJK or numbers.\nIt must return a boolean.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "whether to break word or not"}], "meta": {"code": {"paramnames": ["token", "breakWords"], "type": "MethodDefinition", "id": "astnode100001065", "name": "canBreakWords"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [15333, 15411], "lineno": 480, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The token", "name": "token"}, {"type": {"names": ["boolean"]}, "description": "The style attr break words", "name": "breakWords"}], "longname": "canBreakWords", "scope": "global", "name": "canBreakWords"}, {"comment": "/**\n     * This method exists to be easily overridden\n     * It allows one to determine whether a pair of characters\n     * should be broken by newlines\n     * For example certain characters in CJK langs or numbers.\n     * It must return a boolean.\n     *\n     * @private\n     * @param  {string}  char      The character\n     * @param  {string}  nextChar  The next character\n     * @param  {string}  token     The token/word the characters are from\n     * @param  {number}  index     The index in the token of the char\n     * @param  {boolean}  breakWords  The style attr break words\n     * @return {boolean} whether to break word or not\n     */", "kind": "function", "description": "This method exists to be easily overridden\nIt allows one to determine whether a pair of characters\nshould be broken by newlines\nFor example certain characters in CJK langs or numbers.\nIt must return a boolean.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "whether to break word or not"}], "meta": {"code": {"paramnames": ["char", "nextChar", "token", "index", "breakWords"], "type": "MethodDefinition", "id": "astnode100001073", "name": "canBreakChars"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [16067, 16200], "lineno": 500, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The character", "name": "char"}, {"type": {"names": ["string"]}, "description": "The next character", "name": "nextChar"}, {"type": {"names": ["string"]}, "description": "The token/word the characters are from", "name": "token"}, {"type": {"names": ["number"]}, "description": "The index in the token of the char", "name": "index"}, {"type": {"names": ["boolean"]}, "description": "The style attr break words", "name": "breakWords"}], "longname": "canBreakChars", "scope": "global", "name": "canBreakChars"}, {"comment": "/**\n     * Calculates the ascent, descent and fontSize of a given font-style\n     *\n     * @static\n     * @param {string} font - String representing the style of the font\n     * @return {PIXI.TextMetrics~FontMetrics} Font properties object\n     */", "kind": "function", "description": "Calculates the ascent, descent and fontSize of a given font-style", "returns": [{"type": {"names": ["PIXI.TextMetrics~FontMetrics"]}, "description": "Font properties object"}], "meta": {"code": {"paramnames": ["font"], "type": "MethodDefinition", "id": "astnode100001084", "name": "measureFont"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [16458, 19028], "lineno": 512, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "String representing the style of the font", "name": "font"}], "longname": "measureFont", "scope": "global", "name": "measureFont"}, {"comment": "/**\n     * Clear font metrics in metrics cache.\n     *\n     * @static\n     * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n     */", "kind": "function", "description": "Clear font metrics in metrics cache.", "meta": {"code": {"paramnames": ["font"], "type": "MethodDefinition", "id": "astnode100001410", "name": "clearMetrics"}, "vars": {"": null}, "columnno": 4, "filename": "TextMetrics.js", "range": [19212, 19407], "lineno": 616, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "font name. If font name not set then clear cache for all fonts.", "name": "font"}], "longname": "clearMetrics", "scope": "global", "name": "clearMetrics"}, {"comment": "/**\n     * Creates a new TextStyle object with the same values as this one.\n     * Note that the only the properties of the object are cloned.\n     *\n     * @return {PIXI.TextStyle} New cloned TextStyle object\n     */", "kind": "function", "description": "Creates a new TextStyle object with the same values as this one.\nNote that the only the properties of the object are cloned.", "returns": [{"type": {"names": ["PIXI.TextStyle"]}, "description": "New cloned TextStyle object"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000104", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "TextStyle.js", "range": [5769, 5941], "lineno": 112, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Resets all properties to the defaults specified in TextStyle.prototype._default\n     */", "kind": "function", "description": "Resets all properties to the defaults specified in TextStyle.prototype._default", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000122", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "TextStyle.js", "range": [6050, 6131], "lineno": 124, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * Generates a font style string to use for `TextMetrics.measureFont()`.\n     *\n     * @return {string} Font style string, for passing to `TextMetrics.measureFont()`\n     */", "kind": "function", "description": "Generates a font style string to use for `TextMetrics.measureFont()`.", "returns": [{"type": {"names": ["string"]}, "description": "Font style string, for passing to `TextMetrics.measureFont()`"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001051", "name": "toFontString"}, "vars": {"": null}, "columnno": 4, "filename": "TextStyle.js", "range": [19109, 20159], "lineno": 679, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "toFontString", "scope": "global", "name": "toFontString"}, {"comment": "/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n * @private\n * @param {number|number[]} color\n * @return {string} The color as a string.\n */", "kind": "function", "description": "Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "The color as a string."}], "meta": {"code": {"paramnames": ["color"], "type": "FunctionDeclaration", "id": "astnode100001168", "name": "getSingleColor"}, "vars": {"color": "getSingleColor~color"}, "columnno": 0, "filename": "TextStyle.js", "range": [20368, 20663], "lineno": 716, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["number", "Array.<number>"]}, "name": "color"}], "longname": "getSingleColor", "scope": "global", "name": "getSingleColor"}, {"comment": "/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n * This version can also convert array of colors\n * @private\n * @param {number|number[]} color\n * @return {string} The color as a string.\n */", "kind": "function", "description": "Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\nThis version can also convert array of colors", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "The color as a string."}], "meta": {"code": {"paramnames": ["color"], "type": "FunctionDeclaration", "id": "astnode100001208", "name": "getColor"}, "vars": {"i": "getColor~i", "color[undefined]": null}, "columnno": 0, "filename": "TextStyle.js", "range": [20919, 21188], "lineno": 740, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["number", "Array.<number>"]}, "name": "color"}], "longname": "getColor", "scope": "global", "name": "getColor"}, {"comment": "/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n * This version can also convert array of colors\n * @private\n * @param {Array} array1 First array to compare\n * @param {Array} array2 Second array to compare\n * @return {boolean} Do the arrays contain the same values in the same order\n */", "kind": "function", "description": "Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\nThis version can also convert array of colors", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "Do the arrays contain the same values in the same order"}], "meta": {"code": {"paramnames": ["array1", "array2"], "type": "FunctionDeclaration", "id": "astnode100001250", "name": "areArraysEqual"}, "vars": {"i": "areArraysEqual~i"}, "columnno": 0, "filename": "TextStyle.js", "range": [21541, 21910], "lineno": 765, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["Array"]}, "description": "First array to compare", "name": "array1"}, {"type": {"names": ["Array"]}, "description": "Second array to compare", "name": "array2"}], "longname": "areArraysEqual", "scope": "global", "name": "areArraysEqual"}, {"comment": "/**\n * Utility function to ensure that object properties are copied by value, and not by reference\n * @private\n * @param {Object} target Target object to copy properties into\n * @param {Object} source Source object for the properties to copy\n * @param {string} propertyObj Object containing properties names we want to loop over\n */", "kind": "function", "description": "Utility function to ensure that object properties are copied by value, and not by reference", "access": "private", "meta": {"code": {"paramnames": ["target", "source", "propertyObj"], "type": "FunctionDeclaration", "id": "astnode100001309", "name": "deepCopyProperties"}, "vars": {"target[undefined]": null, "prop": "deepCopyProperties~prop"}, "columnno": 0, "filename": "TextStyle.js", "range": [22245, 22509], "lineno": 795, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["Object"]}, "description": "Target object to copy properties into", "name": "target"}, {"type": {"names": ["Object"]}, "description": "Source object for the properties to copy", "name": "source"}, {"type": {"names": ["string"]}, "description": "Object containing properties names we want to loop over", "name": "propertyObj"}], "longname": "deepCopyProperties", "scope": "global", "name": "deepCopyProperties"}, {"comment": "/**\n     * Renders text and updates it when needed.\n     *\n     * @private\n     * @param {boolean} respectDirty - Whether to abort updating the text if the Text isn't dirty and the function is called.\n     */", "kind": "function", "description": "Renders text and updates it when needed.", "access": "private", "meta": {"code": {"paramnames": ["respectDirty"], "type": "MethodDefinition", "id": "astnode100000185", "name": "updateText"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [3322, 8121], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to abort updating the text if the Text isn't dirty and the function is called.", "name": "respectDirty"}], "longname": "updateText", "scope": "global", "name": "updateText"}, {"comment": "/**\n     * Render the text with letter-spacing.\n     * @param {string} text - The text to draw\n     * @param {number} x - Horizontal position to draw the text\n     * @param {number} y - Vertical position to draw the text\n     * @param {boolean} [isStroke=false] - Is this drawing for the outside stroke of the\n     *  text? If not, it's for the inside fill\n     * @private\n     */", "kind": "function", "description": "Render the text with letter-spacing.", "access": "private", "meta": {"code": {"paramnames": ["text", "x", "y", "isStroke"], "type": "MethodDefinition", "id": "astnode100000810", "name": "drawLetterSpacing"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [8512, 9553], "lineno": 266, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["string"]}, "description": "The text to draw", "name": "text"}, {"type": {"names": ["number"]}, "description": "Horizontal position to draw the text", "name": "x"}, {"type": {"names": ["number"]}, "description": "Vertical position to draw the text", "name": "y"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Is this drawing for the outside stroke of the\n text? If not, it's for the inside fill", "name": "isStroke"}], "longname": "drawLetterSpacing", "scope": "global", "name": "drawLetterSpacing"}, {"comment": "/**\n     * Updates texture size based on canvas size\n     *\n     * @private\n     */", "kind": "function", "description": "Updates texture size based on canvas size", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000939", "name": "updateTexture"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [9647, 10815], "lineno": 312, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "updateTexture", "scope": "global", "name": "updateTexture"}, {"comment": "/**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "Renders the object using the WebGL renderer", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001139", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [10949, 11223], "lineno": 354, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */", "kind": "function", "description": "Renders the object using the Canvas renderer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001183", "name": "_renderCanvas"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [11380, 11668], "lineno": 373, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "_renderCanvas", "scope": "global", "name": "_renderCanvas"}, {"comment": "/**\n     * Gets the local bounds of the text object.\n     *\n     * @param {Rectangle} rect - The output rectangle.\n     * @return {Rectangle} The bounds.\n     */", "kind": "function", "description": "Gets the local bounds of the text object.", "returns": [{"type": {"names": ["Rectangle"]}, "description": "The bounds."}], "meta": {"code": {"paramnames": ["rect"], "type": "MethodDefinition", "id": "astnode100001227", "name": "getLocalBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [11840, 11958], "lineno": 392, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["Rectangle"]}, "description": "The output rectangle.", "name": "rect"}], "longname": "getLocalBounds", "scope": "global", "name": "getLocalBounds"}, {"comment": "/**\n     * calculates the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n     */", "kind": "function", "description": "calculates the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001247", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [12099, 12296], "lineno": 402, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Method to be called upon a TextStyle change.\n     * @private\n     */", "kind": "function", "description": "Method to be called upon a TextStyle change.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001272", "name": "_onStyleChange"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [12386, 12441], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [], "longname": "_onStyleChange", "scope": "global", "name": "_onStyleChange"}, {"comment": "/**\n     * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n     *\n     * @private\n     * @param {object} style - The style.\n     * @param {string[]} lines - The lines of text.\n     * @return {string|number|CanvasGradient} The fill style\n     */", "kind": "function", "description": "Generates the fill style. Can automatically generate a gradient based on the fill style being an array", "access": "private", "returns": [{"type": {"names": ["string", "number", "CanvasGradient"]}, "description": "The fill style"}], "meta": {"code": {"paramnames": ["style", "lines"], "type": "MethodDefinition", "id": "astnode100001282", "name": "_generateFillStyle"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [12751, 16593], "lineno": 427, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"type": {"names": ["object"]}, "description": "The style.", "name": "style"}, {"type": {"names": ["Array.<string>"]}, "description": "The lines of text.", "name": "lines"}], "longname": "_generateFillStyle", "scope": "global", "name": "_generateFillStyle"}, {"comment": "/**\n     * Destroys this text object.\n     * Note* Unlike a Sprite, a Text object will automatically destroy its baseTexture and texture as\n     * the majority of the time the texture will not be shared with any other Sprites.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=true] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=true] - Should it destroy the base texture of the sprite as well\n     */", "kind": "function", "description": "Destroys this text object.\nNote* Unlike a Sprite, a Text object will automatically destroy its baseTexture and texture as\nthe majority of the time the texture will not be shared with any other Sprites.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100001631", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Text.js", "range": [17382, 17807], "lineno": 540, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their\n destroy method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Should it destroy the current texture of the sprite as well", "name": "options.texture"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Should it destroy the base texture of the sprite as well", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "target", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000793", "name": "target"}, "columnno": 18, "filename": "index.js", "range": [5913, 5936], "lineno": 224, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/test"}, "params": [], "longname": "<anonymous>~target", "scope": "inner"}, {"comment": "/**\n * @see {@link https://github.com/kaimallea/isMobile}\n *\n * @memberof PIXI.utils\n * @function isMobile\n * @type {Object}\n */", "kind": "function", "name": "isMobile", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Object"]}}], "see": ["{@link https://github.com/kaimallea/isMobile}"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 20, "filename": "index.js"}, "longname": "PIXI.utils.isMobile", "scope": "static", "type": {"names": ["Object"]}}, {"comment": "/**\n * @see {@link https://github.com/mreinstein/remove-array-items}\n *\n * @memberof PIXI.utils\n * @function removeItems\n * @type {Object}\n */", "kind": "function", "name": "removeItems", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Object"]}}], "see": ["{@link https://github.com/mreinstein/remove-array-items}"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 30, "filename": "index.js"}, "longname": "PIXI.utils.removeItems", "scope": "static", "type": {"names": ["Object"]}}, {"comment": "/**\n * @see {@link https://github.com/mapbox/earcut}\n *\n * @memberof PIXI.utils\n * @function earcut\n * @param {number[]} vertices - A flat array of vertex coordinates\n * @param {number[]} [holes] - An array of hole indices\n * @param {number} [dimensions=2] The number of coordinates per vertex in the input array\n * @return {number[]} Triangulated polygon\n */", "kind": "function", "name": "earcut", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Array.<number>"]}, "description": "Triangulated polygon"}], "see": ["{@link https://github.com/mapbox/earcut}"], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 56, "filename": "index.js"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "A flat array of vertex coordinates", "name": "vertices"}, {"optional": true, "type": {"names": ["Array.<number>"]}, "description": "An array of hole indices", "name": "holes"}, {"optional": true, "defaultvalue": 2, "type": {"names": ["number"]}, "description": "The number of coordinates per vertex in the input array", "name": "dimensions"}], "longname": "PIXI.utils.earcut", "scope": "static"}, {"comment": "/**\n * Mixes all enumerable properties and methods from a source object to a target object.\n *\n * @memberof PIXI.utils.mixins\n * @function mixin\n * @param {object} target The prototype or instance that properties and methods should be added to.\n * @param {object} source The source of properties and methods to mix in.\n */", "kind": "function", "description": "Mixes all enumerable properties and methods from a source object to a target object.", "memberof": "PIXI.utils.mixins", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 1, "filename": "mixins.js"}, "params": [{"type": {"names": ["object"]}, "description": "The prototype or instance that properties and methods should be added to.", "name": "target"}, {"type": {"names": ["object"]}, "description": "The source of properties and methods to mix in.", "name": "source"}], "longname": "PIXI.utils.mixins.mixin", "scope": "static", "name": "mixin"}, {"comment": "", "kind": "function", "name": "mixin", "undocumented": true, "meta": {"code": {"paramnames": ["target", "source"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.mixin"}, "columnno": 0, "filename": "mixins.js", "range": [323, 960], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "longname": "mixin", "scope": "global"}, {"comment": "", "kind": "function", "name": "mixin", "undocumented": true, "meta": {"code": {"paramnames": ["target", "source"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "mixin"}, "vars": {"keys": "mixin~keys", "i": "mixin~i", "propertyName": "mixin~propertyName"}, "columnno": 7, "filename": "mixins.js", "range": [330, 960], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "params": [], "longname": "mixin", "scope": "global"}, {"comment": "/**\n * Queues a mixin to be handled towards the end of the initialization of PIXI, so that deprecation\n * can take effect.\n *\n * @memberof PIXI.utils.mixins\n * @function delayMixin\n * @param {object} target The prototype or instance that properties and methods should be added to.\n * @param {object} source The source of properties and methods to mix in.\n */", "kind": "function", "description": "Queues a mixin to be handled towards the end of the initialization of PIXI, so that deprecation\ncan take effect.", "memberof": "PIXI.utils.mixins", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 30, "filename": "mixins.js"}, "params": [{"type": {"names": ["object"]}, "description": "The prototype or instance that properties and methods should be added to.", "name": "target"}, {"type": {"names": ["object"]}, "description": "The source of properties and methods to mix in.", "name": "source"}], "longname": "PIXI.utils.mixins.delayMixin", "scope": "static", "name": "delayMixin"}, {"comment": "", "kind": "function", "name": "delayMixin", "undocumented": true, "meta": {"code": {"paramnames": ["target", "source"], "type": "FunctionDeclaration", "id": "astnode100000059", "name": "exports.delayMixin"}, "columnno": 0, "filename": "mixins.js", "range": [1341, 1420], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "longname": "delayMixin", "scope": "global"}, {"comment": "", "kind": "function", "name": "delayMixin", "undocumented": true, "meta": {"code": {"paramnames": ["target", "source"], "type": "FunctionDeclaration", "id": "astnode100000060", "name": "delayMixin"}, "columnno": 7, "filename": "mixins.js", "range": [1348, 1420], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "params": [], "longname": "delayMixin", "scope": "global"}, {"comment": "/**\n * Handles all mixins queued via delayMixin().\n *\n * @memberof PIXI.utils.mixins\n * @function performMixins\n */", "kind": "function", "description": "Handles all mixins queued via delayMixin().", "memberof": "PIXI.utils.mixins", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src", "columnno": 0, "lineno": 44, "filename": "mixins.js"}, "longname": "PIXI.utils.mixins.performMixins", "scope": "static", "name": "performMixins"}, {"comment": "", "kind": "function", "name": "performMixins", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000072", "name": "exports.performMixins"}, "columnno": 0, "filename": "mixins.js", "range": [1538, 1696], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "longname": "performMixins", "scope": "global"}, {"comment": "", "kind": "function", "name": "performMixins", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000073", "name": "performMixins"}, "vars": {"i": "performMixins~i", "mixins.length": "mixins.length"}, "columnno": 7, "filename": "mixins.js", "range": [1545, 1696], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src"}, "params": [], "longname": "performMixins", "scope": "global"}, {"comment": "/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */", "kind": "function", "description": "get the resolution / device pixel ratio of an asset by looking for the prefix\nused by spritesheets and image urls", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "resolution / device pixel ratio of an asset"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network", "columnno": 0, "lineno": 3, "filename": "getResolutionOfUrl.js"}, "params": [{"type": {"names": ["string"]}, "description": "the image path", "name": "url"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "the defaultValue if no filename prefix is set.", "name": "defaultValue"}], "longname": "PIXI.utils.getResolutionOfUrl", "scope": "static", "name": "getResolutionOfUrl"}, {"comment": "", "kind": "function", "name": "getResolutionOfUrl", "undocumented": true, "meta": {"code": {"paramnames": ["url", "defaultValue"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "exports.getResolutionOfUrl"}, "columnno": 0, "filename": "getResolutionOfUrl.js", "range": [417, 665], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "longname": "getResolutionOfUrl", "scope": "global"}, {"comment": "", "kind": "function", "name": "getResolutionOfUrl", "undocumented": true, "meta": {"code": {"paramnames": ["url", "defaultValue"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "getResolutionOfUrl"}, "vars": {"resolution": "getResolutionOfUrl~resolution"}, "columnno": 7, "filename": "getResolutionOfUrl.js", "range": [424, 665], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "params": [], "longname": "getResolutionOfUrl", "scope": "global"}, {"comment": "/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils~DecomposedDataUri|undefined} The decomposed data uri or undefined\n */", "kind": "function", "description": "Split a data URI into components. Returns undefined if\nparameter `dataUri` is not a valid data URI.", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["PIXI.utils~DecomposedDataUri", "undefined"]}, "description": "The decomposed data uri or undefined"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network", "columnno": 0, "lineno": 13, "filename": "decomposeDataUri.js"}, "params": [{"type": {"names": ["string"]}, "description": "the data URI to check", "name": "dataUri"}], "longname": "PIXI.utils.decomposeDataUri", "scope": "static", "name": "decomposeDataUri"}, {"comment": "", "kind": "function", "name": "decomposeDataUri", "undocumented": true, "meta": {"code": {"paramnames": ["dataUri"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "exports.decomposeDataUri"}, "columnno": 0, "filename": "decomposeDataUri.js", "range": [638, 1184], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "longname": "decomposeDataUri", "scope": "global"}, {"comment": "", "kind": "function", "name": "decomposeDataUri", "undocumented": true, "meta": {"code": {"paramnames": ["dataUri"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "decomposeDataUri"}, "vars": {"dataUriMatch": "decomposeDataUri~dataUriMatch"}, "columnno": 7, "filename": "decomposeDataUri.js", "range": [645, 1184], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "params": [], "longname": "decomposeDataUri", "scope": "global"}, {"comment": "/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */", "kind": "function", "description": "Sets the `crossOrigin` property for this resource based on if the url\nfor this resource is cross-origin. If crossOrigin was manually set, this\nfunction does nothing.\nNipped from the resource loader!", "ignore": true, "returns": [{"type": {"names": ["string"]}, "description": "The crossOrigin value to use (or empty string for none)."}], "meta": {"code": {"paramnames": ["url", "loc"], "type": "FunctionDeclaration", "id": "astnode100000009", "name": "exports.determineCrossOrigin"}, "columnno": 0, "filename": "determineCrossOrigin.js", "range": [474, 1348], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "params": [{"type": {"names": ["string"]}, "description": "The url to test.", "name": "url"}, {"optional": true, "defaultvalue": "window.location", "type": {"names": ["object"]}, "description": "The location object to test against.", "name": "loc"}], "longname": "determineCrossOrigin", "scope": "global", "name": "determineCrossOrigin"}, {"comment": "", "kind": "function", "name": "determineCrossOrigin", "undocumented": true, "meta": {"code": {"paramnames": ["url", "loc"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "determineCrossOrigin"}, "vars": {"url": "determineCrossOrigin~url", "loc": "determineCrossOrigin~loc", "samePort": "determineCrossOrigin~samePort", "tempAnchor.href": "determineCrossOrigin~tempAnchor.href", "tempAnchor": "determineCrossOrigin~tempAnchor"}, "columnno": 7, "filename": "determineCrossOrigin.js", "range": [481, 1348], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/network"}, "params": [], "longname": "determineCrossOrigin", "scope": "global"}, {"comment": "/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */", "kind": "function", "description": "Converts a hex color number to an [R, G, B] array", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Array.<number>"]}, "description": "An array representing the [R, G, B] of the color."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color", "columnno": 0, "lineno": 1, "filename": "hex.js"}, "params": [{"type": {"names": ["number"]}, "description": "The number to convert", "name": "hex"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array.<number>"]}, "description": "If supplied, this array will be used rather than returning a new one", "name": "out"}], "longname": "PIXI.utils.hex2rgb", "scope": "static", "name": "hex2rgb"}, {"comment": "", "kind": "function", "name": "hex2rgb", "undocumented": true, "meta": {"code": {"paramnames": ["hex", "out"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.hex2rgb"}, "columnno": 0, "filename": "hex.js", "range": [328, 518], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "longname": "hex2rgb", "scope": "global"}, {"comment": "", "kind": "function", "name": "hex2rgb", "undocumented": true, "meta": {"code": {"paramnames": ["hex", "out"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "hex2rgb"}, "vars": {"out[1]": "hex2rgb~out.1]", "out[0]": "hex2rgb~out.0]", "out[2]": "hex2rgb~out.2]", "out": "hex2rgb~out"}, "columnno": 7, "filename": "hex.js", "range": [335, 518], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "hex2rgb", "scope": "global"}, {"comment": "/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */", "kind": "function", "description": "Converts a hex color number to a string.", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["string"]}, "description": "The string color."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color", "columnno": 0, "lineno": 21, "filename": "hex.js"}, "params": [{"type": {"names": ["number"]}, "description": "Number in hex", "name": "hex"}], "longname": "PIXI.utils.hex2string", "scope": "static", "name": "hex2string"}, {"comment": "", "kind": "function", "name": "hex2string", "undocumented": true, "meta": {"code": {"paramnames": ["hex"], "type": "FunctionDeclaration", "id": "astnode100000050", "name": "exports.hex2string"}, "columnno": 0, "filename": "hex.js", "range": [700, 838], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "longname": "hex2string", "scope": "global"}, {"comment": "", "kind": "function", "name": "hex2string", "undocumented": true, "meta": {"code": {"paramnames": ["hex"], "type": "FunctionDeclaration", "id": "astnode100000051", "name": "hex2string"}, "vars": {"hex": "hex2string~hex"}, "columnno": 7, "filename": "hex.js", "range": [707, 838], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "hex2string", "scope": "global"}, {"comment": "/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */", "kind": "function", "description": "Converts a color as an [R, G, B] array to a hex number", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "The color number"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color", "columnno": 0, "lineno": 37, "filename": "hex.js"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "rgb array", "name": "rgb"}], "longname": "PIXI.utils.rgb2hex", "scope": "static", "name": "rgb2hex"}, {"comment": "", "kind": "function", "name": "rgb2hex", "undocumented": true, "meta": {"code": {"paramnames": ["rgb"], "type": "FunctionDeclaration", "id": "astnode100000083", "name": "exports.rgb2hex"}, "columnno": 0, "filename": "hex.js", "range": [1028, 1142], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "longname": "rgb2hex", "scope": "global"}, {"comment": "", "kind": "function", "name": "rgb2hex", "undocumented": true, "meta": {"code": {"paramnames": ["rgb"], "type": "FunctionDeclaration", "id": "astnode100000084", "name": "rgb2hex"}, "columnno": 7, "filename": "hex.js", "range": [1035, 1142], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "rgb2hex", "scope": "global"}, {"comment": "/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @param {Array<number[]>} [array] - The array to output into.\n * @return {Array<number[]>} Mapped modes.\n */", "kind": "function", "description": "Corrects PixiJS blend, takes premultiplied alpha into account", "memberof": "PIXI.utils", "access": "private", "returns": [{"type": {"names": ["Array.<Array.<number>>"]}, "description": "Mapped modes."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color", "columnno": 0, "lineno": 3, "filename": "premultiply.js"}, "params": [{"optional": true, "type": {"names": ["Array.<Array.<number>>"]}, "description": "The array to output into.", "name": "array"}], "longname": "PIXI.utils.mapPremultipliedBlendModes", "scope": "static", "name": "mapPremultipliedBlendModes"}, {"comment": "", "kind": "function", "name": "mapPremultipliedBlendModes", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "mapPremultipliedBlendModes"}, "vars": {"npm": "mapPremultipliedBlendModes~npm", "pm[undefined]": "mapPremultipliedBlendModes~pm.undefined]", "i": "mapPremultipliedBlendModes~i", "npm[undefined]": "mapPremultipliedBlendModes~npm.undefined]", "array": "mapPremultipliedBlendModes~array", "pm": "mapPremultipliedBlendModes~pm"}, "columnno": 0, "filename": "premultiply.js", "range": [307, 867], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "mapPremultipliedBlendModes", "scope": "global"}, {"comment": "/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode supposed blend mode\n * @param {boolean} premultiplied  whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */", "kind": "function", "description": "changes blendMode according to texture format", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "true blend mode for this texture"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color", "columnno": 0, "lineno": 47, "filename": "premultiply.js"}, "params": [{"type": {"names": ["number"]}, "description": "supposed blend mode", "name": "blendMode"}, {"type": {"names": ["boolean"]}, "description": "whether source is premultiplied", "name": "premultiplied"}], "longname": "PIXI.utils.correctBlendMode", "scope": "static", "name": "correctBlendMode"}, {"comment": "", "kind": "function", "name": "correctBlendMode", "undocumented": true, "meta": {"code": {"paramnames": ["blendMode", "premultiplied"], "type": "FunctionDeclaration", "id": "astnode100000124", "name": "exports.correctBlendMode"}, "columnno": 0, "filename": "premultiply.js", "range": [1371, 1500], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "longname": "correctBlendMode", "scope": "global"}, {"comment": "", "kind": "function", "name": "correctBlendMode", "undocumented": true, "meta": {"code": {"paramnames": ["blendMode", "premultiplied"], "type": "FunctionDeclaration", "id": "astnode100000125", "name": "correctBlendMode"}, "columnno": 7, "filename": "premultiply.js", "range": [1378, 1500], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "correctBlendMode", "scope": "global"}, {"comment": "/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @param {Float32Array|number[]} rgb input rgb\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */", "kind": "function", "description": "combines rgb and alpha to out array", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Float32Array"]}, "description": "vec4 rgba"}], "meta": {"code": {"paramnames": ["rgb", "alpha", "out", "premultiply"], "type": "FunctionDeclaration", "id": "astnode100000139", "name": "exports.premultiplyRgba"}, "columnno": 0, "filename": "premultiply.js", "range": [1793, 2190], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [{"type": {"names": ["Float32Array", "Array.<number>"]}, "description": "input rgb", "name": "rgb"}, {"type": {"names": ["number"]}, "description": "alpha param", "name": "alpha"}, {"optional": true, "type": {"names": ["Float32Array"]}, "description": "output", "name": "out"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "do premultiply it", "name": "premultiply"}], "longname": "PIXI.utils.exports.premultiplyRgba", "scope": "static", "name": "exports.premultiplyRgba"}, {"comment": "", "kind": "function", "name": "premultiplyRgba", "undocumented": true, "meta": {"code": {"paramnames": ["rgb", "alpha", "out", "premultiply"], "type": "FunctionDeclaration", "id": "astnode100000140", "name": "premultiplyRgba"}, "vars": {"out[3]": "premultiplyRgba~out.3]", "out[1]": "premultiplyRgba~out.1]", "out[0]": "premultiplyRgba~out.0]", "out[2]": "premultiplyRgba~out.2]", "out": "premultiplyRgba~out"}, "columnno": 7, "filename": "premultiply.js", "range": [1800, 2190], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "premultiplyRgba", "scope": "global"}, {"comment": "/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @param {number} tint integer RGB\n * @param {number} alpha floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */", "kind": "function", "description": "premultiplies tint", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "tint multiplied by alpha"}], "meta": {"code": {"paramnames": ["tint", "alpha"], "type": "FunctionDeclaration", "id": "astnode100000225", "name": "exports.premultiplyTint"}, "columnno": 0, "filename": "premultiply.js", "range": [2387, 2822], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [{"type": {"names": ["number"]}, "description": "integer RGB", "name": "tint"}, {"type": {"names": ["number"]}, "description": "floating point alpha (0.0-1.0)", "name": "alpha"}], "longname": "PIXI.utils.exports.premultiplyTint", "scope": "static", "name": "exports.premultiplyTint"}, {"comment": "", "kind": "function", "name": "premultiplyTint", "undocumented": true, "meta": {"code": {"paramnames": ["tint", "alpha"], "type": "FunctionDeclaration", "id": "astnode100000226", "name": "premultiplyTint"}, "vars": {"B": "premultiplyTint~B", "R": "premultiplyTint~R", "G": "premultiplyTint~G"}, "columnno": 7, "filename": "premultiply.js", "range": [2394, 2822], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "premultiplyTint", "scope": "global"}, {"comment": "/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @param {number} tint input tint\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */", "kind": "function", "description": "converts integer tint and float alpha to vec4 form, premultiplies by default", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["Float32Array"]}, "description": "vec4 rgba"}], "meta": {"code": {"paramnames": ["tint", "alpha", "out", "premultiply"], "type": "FunctionDeclaration", "id": "astnode100000319", "name": "exports.premultiplyTintToRgba"}, "columnno": 0, "filename": "premultiply.js", "range": [3143, 3550], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [{"type": {"names": ["number"]}, "description": "input tint", "name": "tint"}, {"type": {"names": ["number"]}, "description": "alpha param", "name": "alpha"}, {"optional": true, "type": {"names": ["Float32Array"]}, "description": "output", "name": "out"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "do premultiply it", "name": "premultiply"}], "longname": "PIXI.utils.exports.premultiplyTintToRgba", "scope": "static", "name": "exports.premultiplyTintToRgba"}, {"comment": "", "kind": "function", "name": "premultiplyTintToRgba", "undocumented": true, "meta": {"code": {"paramnames": ["tint", "alpha", "out", "premultiply"], "type": "FunctionDeclaration", "id": "astnode100000320", "name": "premultiplyTintToRgba"}, "vars": {"out[3]": "premultiplyTintToRgba~out.3]", "out[1]": "premultiplyTintToRgba~out.1]", "out[0]": "premultiplyTintToRgba~out.0]", "out[2]": "premultiplyTintToRgba~out.2]", "out": "premultiplyTintToRgba~out"}, "columnno": 7, "filename": "premultiply.js", "range": [3150, 3550], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/color"}, "params": [], "longname": "premultiplyTintToRgba", "scope": "global"}, {"comment": "/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI\n * @function trimCanvas\n * @private\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */", "kind": "function", "description": "Trim transparent borders from a canvas", "memberof": "PIXI", "access": "private", "returns": [{"type": {"names": ["object"]}, "description": "Trim data"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media", "columnno": 0, "lineno": 1, "filename": "trimCanvas.js"}, "params": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "the canvas to trim", "name": "canvas"}], "longname": "PIXI.trimCanvas", "scope": "static", "name": "trimCanvas"}, {"comment": "", "kind": "function", "name": "trimCanvas", "undocumented": true, "meta": {"code": {"paramnames": ["canvas"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.trimCanvas"}, "columnno": 0, "filename": "trimCanvas.js", "range": [196, 1822], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "longname": "trimCanvas", "scope": "global"}, {"comment": "", "kind": "function", "name": "trimCanvas", "undocumented": true, "meta": {"code": {"paramnames": ["canvas"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "trimCanvas"}, "vars": {"imageData": "trimCanvas~imageData", "i": "trimCanvas~i", "bound": "trimCanvas~bound", "len": "trimCanvas~len", "height": "trimCanvas~height", "width": "trimCanvas~width", "context": "trimCanvas~context", "bound.bottom": "trimCanvas~bound.bottom", "y": "trimCanvas~y", "x": "trimCanvas~x", "bound.right": "trimCanvas~bound.right", "data": "trimCanvas~data", "pixels": "trimCanvas~pixels", "bound.top": "trimCanvas~bound.top", "bound.left": "trimCanvas~bound.left"}, "columnno": 7, "filename": "trimCanvas.js", "range": [203, 1822], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [], "longname": "trimCanvas", "scope": "global"}, {"comment": "/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */", "kind": "function", "description": "Destroys all texture in the cache", "memberof": "PIXI.utils", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media", "columnno": 0, "lineno": 25, "filename": "caches.js"}, "longname": "PIXI.utils.destroyTextureCache", "scope": "static", "name": "destroyTextureCache"}, {"comment": "", "kind": "function", "name": "destroyTextureCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000025", "name": "exports.destroyTextureCache"}, "columnno": 0, "filename": "caches.js", "range": [482, 703], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "longname": "destroyTextureCache", "scope": "global"}, {"comment": "", "kind": "function", "name": "destroyTextureCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000026", "name": "destroyTextureCache"}, "vars": {"key": "destroyTextureCache~key"}, "columnno": 7, "filename": "caches.js", "range": [489, 703], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [], "longname": "destroyTextureCache", "scope": "global"}, {"comment": "/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */", "kind": "function", "description": "Removes all textures from cache, but does not destroy them", "memberof": "PIXI.utils", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media", "columnno": 0, "lineno": 45, "filename": "caches.js"}, "longname": "PIXI.utils.clearTextureCache", "scope": "static", "name": "clearTextureCache"}, {"comment": "", "kind": "function", "name": "clearTextureCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000054", "name": "exports.clearTextureCache"}, "columnno": 0, "filename": "caches.js", "range": [833, 1046], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "longname": "clearTextureCache", "scope": "global"}, {"comment": "", "kind": "function", "name": "clearTextureCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000055", "name": "clearTextureCache"}, "vars": {"key": "clearTextureCache~key"}, "columnno": 7, "filename": "caches.js", "range": [840, 1046], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [], "longname": "clearTextureCache", "scope": "global"}, {"comment": "/**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */", "kind": "function", "description": "Clears the canvas that was created by the CanvasRenderTarget class.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000056", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderTarget.js", "range": [1129, 1278], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param {number} width - the new width of the canvas\n     * @param {number} height - the new height of the canvas\n     */", "kind": "function", "description": "Resizes the canvas to the specified width and height.", "meta": {"code": {"paramnames": ["width", "height"], "type": "MethodDefinition", "id": "astnode100000092", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderTarget.js", "range": [1488, 1629], "lineno": 54, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [{"type": {"names": ["number"]}, "description": "the new width of the canvas", "name": "width"}, {"type": {"names": ["number"]}, "description": "the new height of the canvas", "name": "height"}], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * Destroys this canvas.\n     *\n     */", "kind": "function", "description": "Destroys this canvas.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000122", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderTarget.js", "range": [1687, 1765], "lineno": 64, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/media"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */", "kind": "function", "description": "Helper for warning developers about deprecated features & settings.\nA stack track for warnings is given; useful for tracking-down where\ndeprecated methods/properties/classes are being used within the code.", "memberof": "PIXI.utils", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/logging", "columnno": 0, "lineno": 4, "filename": "deprecation.js"}, "params": [{"type": {"names": ["string"]}, "description": "The version where the feature became deprecated", "name": "version"}, {"type": {"names": ["string"]}, "description": "Message should include what is deprecated, where, and the new solution", "name": "message"}, {"optional": true, "defaultvalue": 3, "type": {"names": ["number"]}, "description": "The number of steps to ignore at the top of the error stack\n       this is mostly to ignore internal deprecation calls.", "name": "ignoreDepth"}], "longname": "PIXI.utils.deprecation", "scope": "static", "name": "deprecation"}, {"comment": "", "kind": "function", "name": "deprecation", "undocumented": true, "meta": {"code": {"paramnames": ["version", "message", "ignoreDepth"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "exports.deprecation"}, "columnno": 0, "filename": "deprecation.js", "range": [677, 1882], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/logging"}, "longname": "deprecation", "scope": "global"}, {"comment": "", "kind": "function", "name": "deprecation", "undocumented": true, "meta": {"code": {"paramnames": ["version", "message", "ignoreDepth"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "deprecation"}, "vars": {"warnings[undefined]": null, "stack": "deprecation~stack"}, "columnno": 7, "filename": "deprecation.js", "range": [684, 1882], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/logging"}, "params": [], "longname": "deprecation", "scope": "global"}, {"comment": "", "kind": "function", "name": "interleaveTypedArrays", "undocumented": true, "meta": {"code": {"paramnames": ["arrays", "sizes"], "type": "FunctionDeclaration", "id": "astnode100000018", "name": "exports.interleaveTypedArrays"}, "columnno": 0, "filename": "interleaveTypedArrays.js", "range": [207, 1129], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "interleaveTypedArrays", "scope": "global"}, {"comment": "", "kind": "function", "name": "interleaveTypedArrays", "undocumented": true, "meta": {"code": {"paramnames": ["arrays", "sizes"], "type": "FunctionDeclaration", "id": "astnode100000019", "name": "interleaveTypedArrays"}, "vars": {"littleOffset": "interleaveTypedArrays~littleOffset", "out[undefined]": "interleaveTypedArrays~out.undefined]", "i": "interleaveTypedArrays~i", "views": "interleaveTypedArrays~views", "outSize": "interleaveTypedArrays~outSize", "index": "interleaveTypedArrays~index", "indexStart": "interleaveTypedArrays~indexStart", "j": "interleaveTypedArrays~j", "stride": "interleaveTypedArrays~stride", "buffer": "interleaveTypedArrays~buffer", "views[undefined]": "interleaveTypedArrays~views.undefined]", "array": "interleaveTypedArrays~array", "size": "interleaveTypedArrays~size", "type": "interleaveTypedArrays~type", "out": "interleaveTypedArrays~out"}, "columnno": 7, "filename": "interleaveTypedArrays.js", "range": [214, 1129], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "interleaveTypedArrays", "scope": "global"}, {"comment": "/**\n * Rounds to next power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v input value\n * @return {number}\n */", "kind": "function", "description": "Rounds to next power of two.", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 3, "filename": "pow2.js"}, "params": [{"type": {"names": ["number"]}, "description": "input value", "name": "v"}], "longname": "PIXI.utils.isPow2", "scope": "static", "name": "isPow2"}, {"comment": "", "kind": "function", "name": "nextPow2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.nextPow2"}, "columnno": 0, "filename": "pow2.js", "range": [179, 347], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "nextPow2", "scope": "global"}, {"comment": "", "kind": "function", "name": "nextPow2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "nextPow2"}, "vars": {"v": "nextPow2~v"}, "columnno": 7, "filename": "pow2.js", "range": [186, 347], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "nextPow2", "scope": "global"}, {"comment": "/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v input value\n * @return {boolean} `true` if value is power of two\n */", "kind": "function", "description": "Checks if a number is a power of two.", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` if value is power of two"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 24, "filename": "pow2.js"}, "params": [{"type": {"names": ["number"]}, "description": "input value", "name": "v"}], "longname": "PIXI.utils.isPow2", "scope": "static", "name": "isPow2"}, {"comment": "", "kind": "function", "name": "isPow2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000050", "name": "exports.isPow2"}, "columnno": 0, "filename": "pow2.js", "range": [531, 596], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "isPow2", "scope": "global"}, {"comment": "", "kind": "function", "name": "isPow2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000051", "name": "isPow2"}, "columnno": 7, "filename": "pow2.js", "range": [538, 596], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "isPow2", "scope": "global"}, {"comment": "/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v input value\n * @return {number} logarithm base 2\n */", "kind": "function", "description": "Computes ceil of log base 2", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "logarithm base 2"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 37, "filename": "pow2.js"}, "params": [{"type": {"names": ["number"]}, "description": "input value", "name": "v"}], "longname": "PIXI.utils.log2", "scope": "static", "name": "log2"}, {"comment": "", "kind": "function", "name": "log2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000066", "name": "exports.log2"}, "columnno": 0, "filename": "pow2.js", "range": [752, 1032], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "log2", "scope": "global"}, {"comment": "", "kind": "function", "name": "log2", "undocumented": true, "meta": {"code": {"paramnames": ["v"], "type": "FunctionDeclaration", "id": "astnode100000067", "name": "log2"}, "vars": {"shift": "log2~shift", "r": "log2~r", "v": "log2~v"}, "columnno": 7, "filename": "pow2.js", "range": [759, 1032], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "log2", "scope": "global"}, {"comment": "", "kind": "function", "name": "getBufferType", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.getBufferType"}, "columnno": 0, "filename": "getBufferType.js", "range": [0, 692], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "getBufferType", "scope": "global"}, {"comment": "", "kind": "function", "name": "getBufferType", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "getBufferType"}, "columnno": 7, "filename": "getBufferType.js", "range": [7, 692], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "getBufferType", "scope": "global"}, {"comment": "/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */", "kind": "function", "description": "Generic Mask Stack data structure", "memberof": "PIXI", "access": "private", "returns": [{"type": {"names": ["Uint16Array"]}, "description": "indices"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 1, "filename": "createIndicesForQuads.js"}, "params": [{"type": {"names": ["number"]}, "description": "Number of quads", "name": "size"}], "longname": "PIXI.createIndicesForQuads", "scope": "static", "name": "createIndicesForQuads"}, {"comment": "", "kind": "function", "name": "createIndicesForQuads", "undocumented": true, "meta": {"code": {"paramnames": ["size"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.createIndicesForQuads"}, "columnno": 0, "filename": "createIndicesForQuads.js", "range": [188, 735], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "createIndicesForQuads", "scope": "global"}, {"comment": "", "kind": "function", "name": "createIndicesForQuads", "undocumented": true, "meta": {"code": {"paramnames": ["size"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "createIndicesForQuads"}, "vars": {"indices": "createIndicesForQuads~indices", "totalIndices": "createIndicesForQuads~totalIndices", "j": "createIndicesForQuads~j", "i": "createIndicesForQuads~i", "indices[undefined]": "createIndicesForQuads~indices.undefined]"}, "columnno": 7, "filename": "createIndicesForQuads.js", "range": [195, 735], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "createIndicesForQuads", "scope": "global"}, {"comment": "/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */", "kind": "function", "description": "Gets the next unique identifier", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "The next unique identifier to use."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 3, "filename": "uid.js"}, "longname": "PIXI.utils.uid", "scope": "static", "name": "uid"}, {"comment": "", "kind": "function", "name": "uid", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "exports.uid"}, "columnno": 0, "filename": "uid.js", "range": [160, 207], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "uid", "scope": "global"}, {"comment": "", "kind": "function", "name": "uid", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "uid"}, "columnno": 7, "filename": "uid.js", "range": [167, 207], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "uid", "scope": "global"}, {"comment": "/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */", "kind": "function", "description": "Returns sign of number", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["number"]}, "description": "0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data", "columnno": 0, "lineno": 1, "filename": "sign.js"}, "params": [{"type": {"names": ["number"]}, "description": "the number to check the sign of", "name": "n"}], "longname": "PIXI.utils.sign", "scope": "static", "name": "sign"}, {"comment": "", "kind": "function", "name": "sign", "undocumented": true, "meta": {"code": {"paramnames": ["n"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.sign"}, "columnno": 0, "filename": "sign.js", "range": [214, 296], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "longname": "sign", "scope": "global"}, {"comment": "", "kind": "function", "name": "sign", "undocumented": true, "meta": {"code": {"paramnames": ["n"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "sign"}, "columnno": 7, "filename": "sign.js", "range": [221, 296], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/data"}, "params": [], "longname": "sign", "scope": "global"}, {"comment": "/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */", "kind": "function", "description": "Helper for checking for WebGL support.", "memberof": "PIXI.utils", "returns": [{"type": {"names": ["boolean"]}, "description": "Is WebGL supported."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser", "columnno": 0, "lineno": 1, "filename": "isWebGLSupported.js"}, "longname": "PIXI.utils.isWebGLSupported", "scope": "static", "name": "isWebGLSupported"}, {"comment": "", "kind": "function", "name": "isWebGLSupported", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "exports.isWebGLSupported"}, "columnno": 0, "filename": "isWebGLSupported.js", "range": [148, 928], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "longname": "isWebGLSupported", "scope": "global"}, {"comment": "", "kind": "function", "name": "isWebGLSupported", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "isWebGLSupported"}, "vars": {"gl": "isWebGLSupported~gl", "canvas": "isWebGLSupported~canvas", "contextOptions": "isWebGLSupported~contextOptions", "success": "isWebGLSupported~success", "loseContext": "isWebGLSupported~loseContext"}, "columnno": 7, "filename": "isWebGLSupported.js", "range": [155, 928], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "params": [], "longname": "isWebGLSupported", "scope": "global"}, {"comment": "/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */", "kind": "function", "description": "Skips the hello message of renderers that are created after this is run.", "memberof": "PIXI.utils", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser", "columnno": 0, "lineno": 4, "filename": "hello.js"}, "longname": "PIXI.utils.skipHello", "scope": "static", "name": "skipHello"}, {"comment": "", "kind": "function", "name": "skipHello", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "exports.skipHello"}, "columnno": 0, "filename": "hello.js", "range": [189, 242], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "longname": "skipHello", "scope": "global"}, {"comment": "", "kind": "function", "name": "skipHello", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000011", "name": "skipHello"}, "vars": {"saidHello": "skipHello~saidHello"}, "columnno": 7, "filename": "hello.js", "range": [196, 242], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "params": [], "longname": "skipHello", "scope": "global"}, {"comment": "/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */", "kind": "function", "description": "Logs out the version and renderer information for this running instance of PIXI.\nIf you don't want to see this message you can run `PIXI.utils.skipHello()` before\ncreating your renderer. Keep in mind that doing that will forever makes you a jerk face.", "memberof": "PIXI.utils", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser", "columnno": 0, "lineno": 15, "filename": "hello.js"}, "params": [{"type": {"names": ["string"]}, "description": "The string renderer type to log.", "name": "type"}], "longname": "PIXI.utils.sayHello", "scope": "static", "name": "sayHello"}, {"comment": "", "kind": "function", "name": "sayHello", "undocumented": true, "meta": {"code": {"paramnames": ["type"], "type": "FunctionDeclaration", "id": "astnode100000018", "name": "exports.sayHello"}, "columnno": 0, "filename": "hello.js", "range": [632, 1649], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "longname": "sayHello", "scope": "global"}, {"comment": "", "kind": "function", "name": "sayHello", "undocumented": true, "meta": {"code": {"paramnames": ["type"], "type": "FunctionDeclaration", "id": "astnode100000019", "name": "sayHello"}, "vars": {"saidHello": "sayHello~saidHello", "args": "sayHello~args"}, "columnno": 7, "filename": "hello.js", "range": [639, 1649], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/utils/src/browser"}, "params": [], "longname": "sayHello", "scope": "global"}, {"comment": "", "kind": "function", "name": "addHook", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000119", "name": "addHook"}, "columnno": 8, "filename": "BasePrepare.js", "range": [614, 648], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/test"}, "params": [], "longname": "<anonymous>~addHook", "scope": "inner"}, {"comment": "", "kind": "function", "name": "uploadHook", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000122", "name": "uploadHook"}, "columnno": 8, "filename": "BasePrepare.js", "range": [657, 694], "lineno": 23, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/test"}, "params": [], "longname": "<anonymous>~uploadHook", "scope": "inner"}, {"comment": "", "kind": "function", "name": "addHook", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000395", "name": "addHook"}, "columnno": 8, "filename": "BasePrepare.js", "range": [2283, 2347], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/test"}, "params": [], "longname": "<anonymous>~addHook", "scope": "inner"}, {"comment": "", "kind": "function", "name": "complete", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000773", "name": "complete"}, "columnno": 8, "filename": "BasePrepare.js", "range": [4630, 4868], "lineno": 177, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/test"}, "params": [], "longname": "<anonymous>~complete", "scope": "inner"}, {"comment": "/**\n         * 'bound' call for prepareItems().\n         * @type {Function}\n         * @private\n         */", "kind": "function", "description": "'bound' call for prepareItems().", "memberof": "PIXI.prepare.module.exports", "access": "private", "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000102", "name": "this.delayedTick"}, "columnno": 8, "filename": "BasePrepare.js", "range": [2922, 3168], "lineno": 108, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "longname": "PIXI.prepare.module.exports#delayedTick", "scope": "instance", "type": {"names": ["function"]}, "name": "delayedTick"}, {"comment": "/**\n     * Upload all the textures and graphics to the GPU.\n     *\n     * @param {Function|PIXI.DisplayObject|PIXI.Container|PIXI.BaseTexture|PIXI.Texture|PIXI.Graphics|PIXI.Text} item -\n     *        Either the container or display object to search for items to upload, the items to upload themselves,\n     *        or the callback function, if items have been added using `prepare.add`.\n     * @param {Function} [done] - Optional callback when all queued uploads have completed\n     */", "kind": "function", "description": "Upload all the textures and graphics to the GPU.", "meta": {"code": {"paramnames": ["item", "done"], "type": "MethodDefinition", "id": "astnode100000162", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [4076, 4803], "lineno": 138, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["function", "PIXI.DisplayObject", "PIXI.Container", "PIXI.BaseTexture", "PIXI.Texture", "PIXI.Graphics", "PIXI.Text"]}, "description": "Either the container or display object to search for items to upload, the items to upload themselves,\n       or the callback function, if items have been added using `prepare.add`.", "name": "item"}, {"optional": true, "type": {"names": ["function"]}, "description": "Optional callback when all queued uploads have completed", "name": "done"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Handle tick update\n     *\n     * @private\n     */", "kind": "function", "description": "Handle tick update", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000241", "name": "tick"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [4874, 4933], "lineno": 178, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "tick", "scope": "global", "name": "tick"}, {"comment": "/**\n     * Actually prepare items. This is handled outside of the tick because it will take a while\n     * and we do NOT want to block the current animation frame from rendering.\n     *\n     * @private\n     */", "kind": "function", "description": "Actually prepare items. This is handled outside of the tick because it will take a while\nand we do NOT want to block the current animation frame from rendering.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000252", "name": "prepareItems"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [5153, 6432], "lineno": 189, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "prepareItems", "scope": "global", "name": "prepareItems"}, {"comment": "/**\n     * Adds hooks for finding items.\n     *\n     * @param {Function} addHook - Function call that takes two parameters: `item:*, queue:Array`\n     *          function must return `true` if it was able to add item to the queue.\n     * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n     */", "kind": "function", "description": "Adds hooks for finding items.", "returns": [{"type": {"names": ["PIXI.BasePrepare"]}, "description": "Instance of plugin for chaining."}], "meta": {"code": {"paramnames": ["addHook"], "type": "MethodDefinition", "id": "astnode100000418", "name": "registerFindHook"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [6748, 6889], "lineno": 245, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["function"]}, "description": "Function call that takes two parameters: `item:*, queue:Array`\n         function must return `true` if it was able to add item to the queue.", "name": "addHook"}], "longname": "registerFindHook", "scope": "global", "name": "registerFindHook"}, {"comment": "/**\n     * Adds hooks for uploading items.\n     *\n     * @param {Function} uploadHook - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n     *          function must return `true` if it was able to handle upload of item.\n     * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n     */", "kind": "function", "description": "Adds hooks for uploading items.", "returns": [{"type": {"names": ["PIXI.BasePrepare"]}, "description": "Instance of plugin for chaining."}], "meta": {"code": {"paramnames": ["uploadHook"], "type": "MethodDefinition", "id": "astnode100000436", "name": "registerUploadHook"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [7224, 7379], "lineno": 262, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["function"]}, "description": "Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n         function must return `true` if it was able to handle upload of item.", "name": "uploadHook"}], "longname": "registerUploadHook", "scope": "global", "name": "registerUploadHook"}, {"comment": "/**\n     * Manually add an item to the uploading queue.\n     *\n     * @param {PIXI.DisplayObject|PIXI.Container|PIXI.BaseTexture|PIXI.Texture|PIXI.Graphics|PIXI.Text|*} item - Object to\n     *        add to the queue\n     * @return {PIXI.CanvasPrepare} Instance of plugin for chaining.\n     */", "kind": "function", "description": "Manually add an item to the uploading queue.", "returns": [{"type": {"names": ["PIXI.CanvasPrepare"]}, "description": "Instance of plugin for chaining."}], "meta": {"code": {"paramnames": ["item"], "type": "MethodDefinition", "id": "astnode100000454", "name": "add"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [7683, 8244], "lineno": 279, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.Container", "PIXI.BaseTexture", "PIXI.Texture", "PIXI.Graphics", "PIXI.Text", "*"]}, "description": "Object to\n       add to the queue", "name": "item"}], "longname": "add", "scope": "global", "name": "add"}, {"comment": "/**\n     * Destroys the plugin, don't use after this.\n     *\n     */", "kind": "function", "description": "Destroys the plugin, don't use after this.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000524", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "BasePrepare.js", "range": [8323, 8689], "lineno": 307, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Built-in hook to find multiple textures from objects like AnimatedSprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */", "kind": "function", "description": "Built-in hook to find multiple textures from objects like AnimatedSprites.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.Texture object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000592", "name": "findMultipleBaseTextures"}, "vars": {"i": "findMultipleBaseTextures~i", "result": "findMultipleBaseTextures~result", "baseTexture": "findMultipleBaseTextures~baseTexture"}, "columnno": 0, "filename": "BasePrepare.js", "range": [8972, 9571], "lineno": 332, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findMultipleBaseTextures", "scope": "global", "name": "findMultipleBaseTextures"}, {"comment": "/**\n * Built-in hook to find BaseTextures from Sprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */", "kind": "function", "description": "Built-in hook to find BaseTextures from Sprites.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.Texture object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000670", "name": "findBaseTexture"}, "columnno": 0, "filename": "BasePrepare.js", "range": [9826, 10095], "lineno": 365, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findBaseTexture", "scope": "global", "name": "findBaseTexture"}, {"comment": "/**\n * Built-in hook to find textures from objects.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */", "kind": "function", "description": "Built-in hook to find textures from objects.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.Texture object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000700", "name": "findTexture"}, "vars": {"texture": "findTexture~texture"}, "columnno": 0, "filename": "BasePrepare.js", "range": [10346, 10643], "lineno": 389, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findTexture", "scope": "global", "name": "findTexture"}, {"comment": "/**\n * Built-in hook to draw PIXI.Text to its texture.\n *\n * @private\n * @param {PIXI.Renderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */", "kind": "function", "description": "Built-in hook to draw PIXI.Text to its texture.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "If item was uploaded."}], "meta": {"code": {"paramnames": ["helper", "item"], "type": "FunctionDeclaration", "id": "astnode100000744", "name": "drawText"}, "columnno": 0, "filename": "BasePrepare.js", "range": [10900, 11111], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.Renderer", "PIXI.CanvasPrepare"]}, "description": "Not used by this upload handler", "name": "helper"}, {"type": {"names": ["PIXI.DisplayObject"]}, "description": "Item to check", "name": "item"}], "longname": "drawText", "scope": "global", "name": "drawText"}, {"comment": "/**\n * Built-in hook to calculate a text style for a PIXI.Text object.\n *\n * @private\n * @param {PIXI.Renderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */", "kind": "function", "description": "Built-in hook to calculate a text style for a PIXI.Text object.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "If item was uploaded."}], "meta": {"code": {"paramnames": ["helper", "item"], "type": "FunctionDeclaration", "id": "astnode100000764", "name": "calculateTextStyle"}, "vars": {"font": "calculateTextStyle~font"}, "columnno": 0, "filename": "BasePrepare.js", "range": [11384, 11599], "lineno": 435, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.Renderer", "PIXI.CanvasPrepare"]}, "description": "Not used by this upload handler", "name": "helper"}, {"type": {"names": ["PIXI.DisplayObject"]}, "description": "Item to check", "name": "item"}], "longname": "calculateTextStyle", "scope": "global", "name": "calculateTextStyle"}, {"comment": "/**\n * Built-in hook to find Text objects.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Text object was found.\n */", "kind": "function", "description": "Built-in hook to find Text objects.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.Text object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000791", "name": "findText"}, "vars": {"texture": "findText~texture"}, "columnno": 0, "filename": "BasePrepare.js", "range": [11838, 12521], "lineno": 457, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findText", "scope": "global", "name": "findText"}, {"comment": "/**\n * Built-in hook to find TextStyle objects.\n *\n * @private\n * @param {PIXI.TextStyle} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.TextStyle object was found.\n */", "kind": "function", "description": "Built-in hook to find TextStyle objects.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.TextStyle object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000865", "name": "findTextStyle"}, "columnno": 0, "filename": "BasePrepare.js", "range": [12766, 12983], "lineno": 493, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.TextStyle"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findTextStyle", "scope": "global", "name": "findTextStyle"}, {"comment": "/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {PIXI.Renderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */", "kind": "function", "description": "Built-in hook to upload PIXI.Texture objects to the GPU.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "If item was uploaded."}], "meta": {"code": {"paramnames": ["renderer", "item"], "type": "FunctionDeclaration", "id": "astnode100000054", "name": "uploadBaseTextures"}, "columnno": 0, "filename": "Prepare.js", "range": [1099, 1639], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "instance of the webgl renderer", "name": "renderer"}, {"type": {"names": ["PIXI.DisplayObject"]}, "description": "Item to check", "name": "item"}], "longname": "uploadBaseTextures", "scope": "global", "name": "uploadBaseTextures"}, {"comment": "/**\n * Built-in hook to upload PIXI.Graphics to the GPU.\n *\n * @private\n * @param {PIXI.Renderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */", "kind": "function", "description": "Built-in hook to upload PIXI.Graphics to the GPU.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "If item was uploaded."}], "meta": {"code": {"paramnames": ["renderer", "item"], "type": "FunctionDeclaration", "id": "astnode100000086", "name": "uploadGraphics"}, "columnno": 0, "filename": "Prepare.js", "range": [1880, 2353], "lineno": 65, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "instance of the webgl renderer", "name": "renderer"}, {"type": {"names": ["PIXI.DisplayObject"]}, "description": "Item to check", "name": "item"}], "longname": "uploadGraphics", "scope": "global", "name": "uploadGraphics"}, {"comment": "/**\n * Built-in hook to find graphics.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Graphics object was found.\n */", "kind": "function", "description": "Built-in hook to find graphics.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "if a PIXI.Graphics object was found."}], "meta": {"code": {"paramnames": ["item", "queue"], "type": "FunctionDeclaration", "id": "astnode100000132", "name": "findGraphics"}, "columnno": 0, "filename": "Prepare.js", "range": [2592, 2743], "lineno": 90, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display object to check", "name": "item"}, {"type": {"names": ["Array.<*>"]}, "description": "Collection of items to upload", "name": "queue"}], "longname": "findGraphics", "scope": "global", "name": "findGraphics"}, {"comment": "/**\n     * Resets any counting properties to start fresh on a new frame.\n     */", "kind": "function", "description": "Resets any counting properties to start fresh on a new frame.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000023", "name": "beginFrame"}, "vars": {"": null}, "columnno": 4, "filename": "TimeLimiter.js", "range": [790, 852], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "beginFrame", "scope": "global", "name": "beginFrame"}, {"comment": "/**\n     * Checks to see if another item can be uploaded. This should only be called once per item.\n     * @return {boolean} If the item is allowed to be uploaded.\n     */", "kind": "function", "description": "Checks to see if another item can be uploaded. This should only be called once per item.", "returns": [{"type": {"names": ["boolean"]}, "description": "If the item is allowed to be uploaded."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000036", "name": "allowedToUpload"}, "vars": {"": null}, "columnno": 4, "filename": "TimeLimiter.js", "range": [1034, 1131], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "allowedToUpload", "scope": "global", "name": "allowedToUpload"}, {"comment": "/**\n     * Resets any counting properties to start fresh on a new frame.\n     */", "kind": "function", "description": "Resets any counting properties to start fresh on a new frame.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000023", "name": "beginFrame"}, "vars": {"": null}, "columnno": 4, "filename": "CountLimiter.js", "range": [802, 874], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "beginFrame", "scope": "global", "name": "beginFrame"}, {"comment": "/**\n     * Checks to see if another item can be uploaded. This should only be called once per item.\n     * @return {boolean} If the item is allowed to be uploaded.\n     */", "kind": "function", "description": "Checks to see if another item can be uploaded. This should only be called once per item.", "returns": [{"type": {"names": ["boolean"]}, "description": "If the item is allowed to be uploaded."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000035", "name": "allowedToUpload"}, "vars": {"": null}, "columnno": 4, "filename": "CountLimiter.js", "range": [1056, 1122], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/prepare/src"}, "params": [], "longname": "allowedToUpload", "scope": "global", "name": "allowedToUpload"}, {"comment": "", "kind": "function", "name": "cleanCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000044", "name": "cleanCache"}, "columnno": 0, "filename": "Texture.js", "range": [234, 458], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/test"}, "params": [], "longname": "cleanCache", "scope": "global"}, {"comment": "", "kind": "function", "name": "withGL", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000037", "name": "withGL"}, "columnno": 0, "filename": "Renderer.js", "range": [190, 279], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/test"}, "params": [], "longname": "withGL", "scope": "global"}, {"comment": "", "kind": "function", "name": "remove", "memberof": "mockrunner.contextChange", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000016", "name": "remove"}, "columnno": 8, "filename": "BatchRenderer.js", "range": [93, 108], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/test"}, "longname": "mockrunner.contextChange.remove", "scope": "static"}, {"comment": "", "kind": "function", "name": "add", "memberof": "mockrunner.contextChange", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000019", "name": "add"}, "columnno": 8, "filename": "BatchRenderer.js", "range": [118, 130], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/test"}, "longname": "mockrunner.contextChange.add", "scope": "static"}, {"comment": "", "kind": "function", "name": "cleanCache", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000042", "name": "cleanCache"}, "columnno": 0, "filename": "BaseTexture.js", "range": [230, 454], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/test"}, "params": [], "longname": "cleanCache", "scope": "global"}, {"comment": "/**\n     * Generic method called when there is a WebGL context change.\n     * @param {WebGLRenderingContext} gl - WebGL context\n     */", "kind": "function", "description": "Generic method called when there is a WebGL context change.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000029", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "System.js", "range": [670, 728], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "WebGL context", "name": "gl"}], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "/**\n     * Generic destroy methods to be overridden by the subclass\n     *\n     */", "kind": "function", "description": "Generic destroy methods to be overridden by the subclass", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000033", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "System.js", "range": [821, 930], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Add a new system to the renderer.\n     * @param {class} ClassRef - Class reference\n     * @param {string} [name] - Property name for system, if not specified\n     *        will use a static `name` property on the class itself. This\n     *        name will be assigned as s property on the Renderer so make\n     *        sure it doesn't collide with properties on Renderer.\n     * @return {PIXI.Renderer} Return instance of renderer\n     */", "kind": "function", "description": "Add a new system to the renderer.", "returns": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Return instance of renderer"}], "meta": {"code": {"paramnames": ["ClassRef", "name"], "type": "MethodDefinition", "id": "astnode100000330", "name": "addSystem"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [9644, 10500], "lineno": 248, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["class"]}, "description": "Class reference", "name": "ClassRef"}, {"optional": true, "type": {"names": ["string"]}, "description": "Property name for system, if not specified\n       will use a static `name` property on the class itself. This\n       name will be assigned as s property on the Renderer so make\n       sure it doesn't collide with properties on Renderer.", "name": "name"}], "longname": "addSystem", "scope": "global", "name": "addSystem"}, {"comment": "/**\n     * Renders the object to its WebGL view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered.\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render to.\n     * @param {boolean} [clear] - Should the canvas be cleared before the new render.\n     * @param {PIXI.Matrix} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform] - Should we skip the update transform pass?\n     */", "kind": "function", "description": "Renders the object to its WebGL view", "meta": {"code": {"paramnames": ["displayObject", "renderTexture", "clear", "transform", "skipUpdateTransform"], "type": "MethodDefinition", "id": "astnode100000390", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [11014, 12369], "lineno": 300, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The object to be rendered.", "name": "displayObject"}, {"type": {"names": ["PIXI.RenderTexture"]}, "description": "The render texture to render to.", "name": "renderTexture"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Should the canvas be cleared before the new render.", "name": "clear"}, {"optional": true, "type": {"names": ["PIXI.Matrix"]}, "description": "A transform to apply to the render texture before rendering.", "name": "transform"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Should we skip the update transform pass?", "name": "skipUpdateTransform"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Resizes the WebGL view to the specified width and height.\n     *\n     * @param {number} screenWidth - The new width of the screen.\n     * @param {number} screenHeight - The new height of the screen.\n     */", "kind": "function", "description": "Resizes the WebGL view to the specified width and height.", "meta": {"code": {"paramnames": ["screenWidth", "screenHeight"], "type": "MethodDefinition", "id": "astnode100000542", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [12597, 12784], "lineno": 359, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["number"]}, "description": "The new width of the screen.", "name": "screenWidth"}, {"type": {"names": ["number"]}, "description": "The new height of the screen.", "name": "screenHeight"}], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {PIXI.Renderer} Returns itself.\n     */", "kind": "function", "description": "Resets the WebGL state so you can render things however you fancy!", "returns": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000571", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [12934, 13009], "lineno": 371, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * Clear the frame buffer\n     */", "kind": "function", "description": "Clear the frame buffer", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000586", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [13061, 13147], "lineno": 381, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/pixijs/pixi.js/issues/2233\n     */", "kind": "function", "description": "Removes everything from the renderer (event listeners, spritebatch, etc...)", "meta": {"code": {"paramnames": ["removeView"], "type": "MethodDefinition", "id": "astnode100000604", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [13404, 13604], "lineno": 393, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Removes the Canvas element from the DOM.\n See: https://github.com/pixijs/pixi.js/issues/2233", "name": "removeView"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Adds a plugin to the renderer.\n     *\n     * @method\n     * @param {string} pluginName - The name of the plugin.\n     * @param {Function} ctor - The constructor function or class for the plugin.\n     */", "kind": "function", "description": "Adds a plugin to the renderer.", "meta": {"code": {"paramnames": ["pluginName", "ctor"], "type": "MethodDefinition", "id": "astnode100000630", "name": "registerPlugin"}, "vars": {"": null}, "columnno": 4, "filename": "Renderer.js", "range": [14539, 14692], "lineno": 424, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["string"]}, "description": "The name of the plugin.", "name": "pluginName"}, {"type": {"names": ["function"]}, "description": "The constructor function or class for the plugin.", "name": "ctor"}], "longname": "registerPlugin", "scope": "global", "name": "registerPlugin"}, {"comment": "/**\n     * Initialize the plugins.\n     *\n     * @protected\n     * @param {object} staticMap - The dictionary of statically saved plugins.\n     */", "kind": "function", "description": "Initialize the plugins.", "access": "protected", "meta": {"code": {"paramnames": ["staticMap"], "type": "MethodDefinition", "id": "astnode100000267", "name": "initPlugins"}, "vars": {"": null}, "columnno": 4, "filename": "AbstractRenderer.js", "range": [6987, 7132], "lineno": 204, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["object"]}, "description": "The dictionary of statically saved plugins.", "name": "staticMap"}], "longname": "initPlugins", "scope": "global", "name": "initPlugins"}, {"comment": "/**\n     * Resizes the screen and canvas to the specified width and height.\n     * Canvas dimensions are multiplied by resolution.\n     *\n     * @param {number} screenWidth - The new width of the screen.\n     * @param {number} screenHeight - The new height of the screen.\n     */", "kind": "function", "description": "Resizes the screen and canvas to the specified width and height.\nCanvas dimensions are multiplied by resolution.", "meta": {"code": {"paramnames": ["screenWidth", "screenHeight"], "type": "MethodDefinition", "id": "astnode100000310", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "AbstractRenderer.js", "range": [7873, 8284], "lineno": 243, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["number"]}, "description": "The new width of the screen.", "name": "screenWidth"}, {"type": {"names": ["number"]}, "description": "The new height of the screen.", "name": "screenHeight"}], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * Useful function that returns a texture of the display object that can then be used to create sprites\n     * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n     *\n     * @param {PIXI.DisplayObject} displayObject - The displayObject the object will be generated from.\n     * @param {number} scaleMode - Should be one of the scaleMode consts.\n     * @param {number} resolution - The resolution / device pixel ratio of the texture being generated.\n     * @param {PIXI.Rectangle} [region] - The region of the displayObject, that shall be rendered,\n     *        if no region is specified, defaults to the local bounds of the displayObject.\n     * @return {PIXI.Texture} A texture of the graphics object.\n     */", "kind": "function", "description": "Useful function that returns a texture of the display object that can then be used to create sprites\nThis can be quite useful if your displayObject is complicated and needs to be reused multiple times.", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "A texture of the graphics object."}], "meta": {"code": {"paramnames": ["displayObject", "scaleMode", "resolution", "region"], "type": "MethodDefinition", "id": "astnode100000387", "name": "generateTexture"}, "vars": {"": null}, "columnno": 4, "filename": "AbstractRenderer.js", "range": [9066, 9675], "lineno": 269, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The displayObject the object will be generated from.", "name": "displayObject"}, {"type": {"names": ["number"]}, "description": "Should be one of the scaleMode consts.", "name": "scaleMode"}, {"type": {"names": ["number"]}, "description": "The resolution / device pixel ratio of the texture being generated.", "name": "resolution"}, {"optional": true, "type": {"names": ["PIXI.Rectangle"]}, "description": "The region of the displayObject, that shall be rendered,\n       if no region is specified, defaults to the local bounds of the displayObject.", "name": "region"}], "longname": "generateTexture", "scope": "global", "name": "generateTexture"}, {"comment": "/**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */", "kind": "function", "description": "Removes everything from the renderer and optionally removes the Canvas DOM element.", "meta": {"code": {"paramnames": ["removeView"], "type": "MethodDefinition", "id": "astnode100000481", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "AbstractRenderer.js", "range": [9881, 10759], "lineno": 292, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Removes the Canvas element from the DOM.", "name": "removeView"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */", "kind": "function", "description": "Changes the current renderer to the one given in parameter", "meta": {"code": {"paramnames": ["objectRenderer"], "type": "MethodDefinition", "id": "astnode100000040", "name": "setObjectRenderer"}, "vars": {"": null}, "columnno": 4, "filename": "BatchSystem.js", "range": [872, 1134], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [{"type": {"names": ["PIXI.ObjectRenderer"]}, "description": "The object renderer to use.", "name": "objectRenderer"}], "longname": "setObjectRenderer", "scope": "global", "name": "setObjectRenderer"}, {"comment": "/**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */", "kind": "function", "description": "This should be called if you wish to do some custom rendering\nIt will basically render anything that may be batched up such as sprites", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000073", "name": "flush"}, "vars": {"": null}, "columnno": 4, "filename": "BatchSystem.js", "range": [1312, 1383], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "flush", "scope": "global", "name": "flush"}, {"comment": "", "kind": "function", "name": "reset", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000085", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "BatchSystem.js", "range": [1389, 1460], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "reset", "scope": "global"}, {"comment": "/**\n     * Destroys the buffer.\n     *\n     */", "kind": "function", "description": "Destroys the buffer.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000039", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "BatchBuffer.js", "range": [666, 782], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "maxTextures"], "type": "FunctionDeclaration", "id": "astnode100000048", "name": "module.exports"}, "columnno": 0, "filename": "generateMultiTextureShader.js", "range": [598, 1499], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "generateMultiTextureShader", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "maxTextures"], "type": "FunctionDeclaration", "id": "astnode100000049", "name": "generateMultiTextureShader"}, "vars": {"uniforms": "generateMultiTextureShader~uniforms", "sampleValues": "generateMultiTextureShader~sampleValues", "i": "generateMultiTextureShader~i", "fragmentSrc": "generateMultiTextureShader~fragmentSrc", "shader": "generateMultiTextureShader~shader", "sampleValues[undefined]": "generateMultiTextureShader~sampleValues.undefined]", "defaultGroupCache[undefined]": null, "programCache[undefined]": null}, "columnno": 15, "filename": "generateMultiTextureShader.js", "range": [613, 1499], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "generateMultiTextureShader", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateSampleSrc", "undocumented": true, "meta": {"code": {"paramnames": ["maxTextures"], "type": "FunctionDeclaration", "id": "astnode100000159", "name": "generateSampleSrc"}, "vars": {"i": "generateSampleSrc~i", "src": "generateSampleSrc~src"}, "columnno": 0, "filename": "generateMultiTextureShader.js", "range": [1501, 1991], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "generateSampleSrc", "scope": "global"}, {"comment": "/**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */", "kind": "function", "description": "Sets up the renderer context and necessary buffers.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000213", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [3067, 4100], "lineno": 111, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "/**\n     * Called before the renderer starts rendering.\n     *\n     */", "kind": "function", "description": "Called before the renderer starts rendering.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000304", "name": "onPrerender"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [4181, 4236], "lineno": 144, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "onPrerender", "scope": "global", "name": "onPrerender"}, {"comment": "/**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */", "kind": "function", "description": "Renders the sprite object.", "meta": {"code": {"paramnames": ["element"], "type": "MethodDefinition", "id": "astnode100000314", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [4385, 4784], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [{"type": {"names": ["PIXI.Sprite"]}, "description": "the sprite to render when using this spritebatch", "name": "sprite"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "", "kind": "function", "name": "getIndexBuffer", "undocumented": true, "meta": {"code": {"paramnames": ["size"], "type": "MethodDefinition", "id": "astnode100000383", "name": "getIndexBuffer"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [4790, 5356], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "getIndexBuffer", "scope": "global"}, {"comment": "", "kind": "function", "name": "getAttributeBuffer", "undocumented": true, "meta": {"code": {"paramnames": ["size"], "type": "MethodDefinition", "id": "astnode100000457", "name": "getAttributeBuffer"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [5362, 5940], "lineno": 194, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "getAttributeBuffer", "scope": "global"}, {"comment": "/**\n     * Renders the content and empties the current batch.\n     *\n     */", "kind": "function", "description": "Renders the content and empties the current batch.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000535", "name": "flush"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [6027, 11627], "lineno": 220, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "flush", "scope": "global", "name": "flush"}, {"comment": "", "kind": "function", "name": "packGeometry", "undocumented": true, "meta": {"code": {"paramnames": ["element", "float32View", "uint32View", "indexBuffer", "index", "indexCount"], "type": "MethodDefinition", "id": "astnode100001123", "name": "packGeometry"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [11633, 12852], "lineno": 394, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "packGeometry", "scope": "global"}, {"comment": "/**\n     * Starts a new sprite batch.\n     */", "kind": "function", "description": "Starts a new sprite batch.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001300", "name": "start"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [14319, 14625], "lineno": 468, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "start", "scope": "global", "name": "start"}, {"comment": "/**\n     * Stops and flushes the current batch.\n     *\n     */", "kind": "function", "description": "Stops and flushes the current batch.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001349", "name": "stop"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [14698, 14738], "lineno": 485, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "stop", "scope": "global", "name": "stop"}, {"comment": "/**\n     * Destroys the SpriteRenderer.\n     *\n     */", "kind": "function", "description": "Destroys the SpriteRenderer.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001358", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "BatchRenderer.js", "range": [14803, 15693], "lineno": 494, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Starts the renderer and sets the shader\n     *\n     */", "kind": "function", "description": "Starts the renderer and sets the shader", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000011", "name": "start"}, "vars": {"": null}, "columnno": 4, "filename": "ObjectRenderer.js", "range": [306, 353], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "start", "scope": "global", "name": "start"}, {"comment": "/**\n     * Stops the renderer\n     *\n     */", "kind": "function", "description": "Stops the renderer", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000015", "name": "stop"}, "vars": {"": null}, "columnno": 4, "filename": "ObjectRenderer.js", "range": [408, 448], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "stop", "scope": "global", "name": "stop"}, {"comment": "/**\n     * Stub method for rendering content and emptying the current batch.\n     *\n     */", "kind": "function", "description": "Stub method for rendering content and emptying the current batch.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000024", "name": "flush"}, "vars": {"": null}, "columnno": 4, "filename": "ObjectRenderer.js", "range": [550, 587], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [], "longname": "flush", "scope": "global", "name": "flush"}, {"comment": "/**\n     * Renders an object\n     *\n     * @param {PIXI.DisplayObject} object - The object to render.\n     */", "kind": "function", "description": "Renders an object", "meta": {"code": {"paramnames": ["object"], "type": "MethodDefinition", "id": "astnode100000028", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "ObjectRenderer.js", "range": [707, 800], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/batch"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The object to render.", "name": "object"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\n     *\n     * @param {PIXI.Rectangle} destinationFrame - The destination frame.\n     * @param {PIXI.Rectangle} sourceFrame - The source frame.\n     * @param {Number} resolution - Resolution\n     * @param {boolean} root - If is root\n     */", "kind": "function", "description": "Updates the projection matrix based on a projection frame (which is a rectangle)", "meta": {"code": {"paramnames": ["destinationFrame", "sourceFrame", "resolution", "root"], "type": "MethodDefinition", "id": "astnode100000055", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "ProjectionSystem.js", "range": [1486, 2349], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/projection"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The destination frame.", "name": "destinationFrame"}, {"type": {"names": ["PIXI.Rectangle"]}, "description": "The source frame.", "name": "sourceFrame"}, {"type": {"names": ["Number"]}, "description": "Resolution", "name": "resolution"}, {"type": {"names": ["boolean"]}, "description": "If is root", "name": "root"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\n     *\n     * @param {PIXI.Rectangle} destinationFrame - The destination frame.\n     * @param {PIXI.Rectangle} sourceFrame - The source frame.\n     * @param {Number} resolution - Resolution\n     * @param {boolean} root - If is root\n     */", "kind": "function", "description": "Updates the projection matrix based on a projection frame (which is a rectangle)", "meta": {"code": {"paramnames": ["destinationFrame", "sourceFrame", "resolution", "root"], "type": "MethodDefinition", "id": "astnode100000165", "name": "calculateProjection"}, "vars": {"": null}, "columnno": 4, "filename": "ProjectionSystem.js", "range": [2691, 3427], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/projection"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The destination frame.", "name": "destinationFrame"}, {"type": {"names": ["PIXI.Rectangle"]}, "description": "The source frame.", "name": "sourceFrame"}, {"type": {"names": ["Number"]}, "description": "Resolution", "name": "resolution"}, {"type": {"names": ["boolean"]}, "description": "If is root", "name": "root"}], "longname": "calculateProjection", "scope": "global", "name": "calculateProjection"}, {"comment": "/**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The transformation matrix\n     */", "kind": "function", "description": "Sets the transform of the active render target to the given matrix", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000300", "name": "setTransform"}, "vars": {"": null}, "columnno": 4, "filename": "ProjectionSystem.js", "range": [3593, 3685], "lineno": 126, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/projection"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The transformation matrix", "name": "matrix"}], "longname": "setTransform", "scope": "global", "name": "setTransform"}, {"comment": "/**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} [resizeBaseTexture=true] - Should the baseTexture.width and height values be resized as well?\n     */", "kind": "function", "description": "Resizes the RenderTexture.", "meta": {"code": {"paramnames": ["width", "height", "resizeBaseTexture"], "type": "MethodDefinition", "id": "astnode100000124", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "RenderTexture.js", "range": [3407, 3868], "lineno": 114, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [{"type": {"names": ["number"]}, "description": "The width to resize to.", "name": "width"}, {"type": {"names": ["number"]}, "description": "The height to resize to.", "name": "height"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Should the baseTexture.width and height values be resized as well?", "name": "resizeBaseTexture"}], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * A short hand way of creating a render texture.\n     *\n     * @param {object} [options] - Options\n     * @param {number} [options.width=100] - The width of the render texture\n     * @param {number} [options.height=100] - The height of the render texture\n     * @param {number} [options.scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */", "kind": "function", "description": "A short hand way of creating a render texture.", "returns": [{"type": {"names": ["PIXI.RenderTexture"]}, "description": "The new render texture"}], "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000206", "name": "create"}, "vars": {"": null}, "columnno": 4, "filename": "RenderTexture.js", "range": [4443, 4977], "lineno": 143, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [{"optional": true, "type": {"names": ["object"]}, "description": "Options", "name": "options"}, {"optional": true, "defaultvalue": 100, "type": {"names": ["number"]}, "description": "The width of the render texture", "name": "options.width"}, {"optional": true, "defaultvalue": 100, "type": {"names": ["number"]}, "description": "The height of the render texture", "name": "options.height"}, {"optional": true, "defaultvalue": "PIXI.settings.SCALE_MODE", "type": {"names": ["number"]}, "description": "See {@link PIXI.SCALE_MODES} for possible values", "name": "options.scaleMode"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The resolution / device pixel ratio of the texture being generated", "name": "options.resolution"}], "longname": "create", "scope": "global", "name": "create"}, {"comment": "/**\n     * Resizes the BaseRenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     */", "kind": "function", "description": "Resizes the BaseRenderTexture.", "meta": {"code": {"paramnames": ["width", "height"], "type": "MethodDefinition", "id": "astnode100000171", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "BaseRenderTexture.js", "range": [3900, 4087], "lineno": 123, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [{"type": {"names": ["number"]}, "description": "The width to resize to.", "name": "width"}, {"type": {"names": ["number"]}, "description": "The height to resize to.", "name": "height"}], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * Destroys this texture.\n     *\n     */", "kind": "function", "description": "Destroys this texture.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000210", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "BaseRenderTexture.js", "range": [4146, 4226], "lineno": 134, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Bind the current render texture\n     * @private\n     * @param {PIXI.RenderTexture} renderTexture\n     * @param {PIXI.Rectangle} sourceFrame\n     * @param {PIXI.Rectangle} destinationFrame\n     */", "kind": "function", "description": "Bind the current render texture", "access": "private", "meta": {"code": {"paramnames": ["renderTexture", "sourceFrame", "destinationFrame"], "type": "MethodDefinition", "id": "astnode100000063", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "RenderTextureSystem.js", "range": [1462, 3587], "lineno": 65, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [{"type": {"names": ["PIXI.RenderTexture"]}, "name": "renderTexture"}, {"type": {"names": ["PIXI.Rectangle"]}, "name": "sourceFrame"}, {"type": {"names": ["PIXI.Rectangle"]}, "name": "destinationFrame"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Erases the render texture and fills the drawing area with a colour\n     *\n     * @param {number[]} [clearColor] - The color as rgba, default to use the renderer backgroundColor\n     * @return {PIXI.Renderer} Returns itself.\n     */", "kind": "function", "description": "Erases the render texture and fills the drawing area with a colour", "returns": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": ["clearColor"], "type": "MethodDefinition", "id": "astnode100000308", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "RenderTextureSystem.js", "range": [3840, 4194], "lineno": 140, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [{"optional": true, "type": {"names": ["Array.<number>"]}, "description": "The color as rgba, default to use the renderer backgroundColor", "name": "clearColor"}], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "", "kind": "function", "name": "resize", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000360", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "RenderTextureSystem.js", "range": [4200, 4307], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/renderTexture"}, "params": [], "longname": "resize", "scope": "global"}, {"comment": "/**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */", "kind": "function", "description": "Applies the Mask and adds it to the current filter stack.", "meta": {"code": {"paramnames": ["target", "maskData"], "type": "MethodDefinition", "id": "astnode100000060", "name": "push"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [1583, 2608], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display Object to push the mask to", "name": "target"}, {"type": {"names": ["PIXI.Sprite", "PIXI.Graphics"]}, "description": "The masking data.", "name": "maskData"}], "longname": "push", "scope": "global", "name": "push"}, {"comment": "/**\n     * Removes the last mask from the mask stack and doesn't return it.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to pop the mask from\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */", "kind": "function", "description": "Removes the last mask from the mask stack and doesn't return it.", "meta": {"code": {"paramnames": ["target", "maskData"], "type": "MethodDefinition", "id": "astnode100000171", "name": "pop"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [2860, 3236], "lineno": 113, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display Object to pop the mask from", "name": "target"}, {"type": {"names": ["PIXI.Sprite", "PIXI.Graphics"]}, "description": "The masking data.", "name": "maskData"}], "longname": "pop", "scope": "global", "name": "pop"}, {"comment": "/**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.RenderTarget} target - Display Object to push the sprite mask to\n     * @param {PIXI.Sprite} maskData - Sprite to be used as the mask\n     */", "kind": "function", "description": "Applies the Mask and adds it to the current filter stack.", "meta": {"code": {"paramnames": ["target", "maskData"], "type": "MethodDefinition", "id": "astnode100000220", "name": "pushSpriteMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [3484, 4057], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.RenderTarget"]}, "description": "Display Object to push the sprite mask to", "name": "target"}, {"type": {"names": ["PIXI.Sprite"]}, "description": "Sprite to be used as the mask", "name": "maskData"}], "longname": "pushSpriteMask", "scope": "global", "name": "pushSpriteMask"}, {"comment": "/**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */", "kind": "function", "description": "Removes the last filter from the filter stack and doesn't return it.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000301", "name": "popSpriteMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [4162, 4256], "lineno": 159, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "popSpriteMask", "scope": "global", "name": "popSpriteMask"}, {"comment": "/**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */", "kind": "function", "description": "Applies the Mask and adds it to the current filter stack.", "meta": {"code": {"paramnames": ["maskData"], "type": "MethodDefinition", "id": "astnode100000319", "name": "pushStencilMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [4421, 4548], "lineno": 170, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.Sprite", "PIXI.Graphics"]}, "description": "The masking data.", "name": "maskData"}], "longname": "pushStencilMask", "scope": "global", "name": "pushStencilMask"}, {"comment": "/**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */", "kind": "function", "description": "Removes the last filter from the filter stack and doesn't return it.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000343", "name": "popStencilMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [4653, 4774], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "popStencilMask", "scope": "global", "name": "popStencilMask"}, {"comment": "/**\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Graphics} maskData - The masking data.\n     */", "kind": "function", "name": "pushScissorMask", "meta": {"code": {"paramnames": ["target", "maskData"], "type": "MethodDefinition", "id": "astnode100000356", "name": "pushScissorMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [4941, 5715], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "Display Object to push the mask to", "name": "target"}, {"type": {"names": ["PIXI.Graphics"]}, "description": "The masking data.", "name": "maskData"}], "longname": "pushScissorMask", "scope": "global"}, {"comment": "/**\n     * Pop scissor mask\n     *\n     */", "kind": "function", "description": "Pop scissor mask", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000485", "name": "popScissorMask"}, "vars": {"": null}, "columnno": 4, "filename": "MaskSystem.js", "range": [5768, 6005], "lineno": 222, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "popScissorMask", "scope": "global", "name": "popScissorMask"}, {"comment": "/**\n     * Changes the mask stack that is used by this System.\n     *\n     * @param {PIXI.Graphics[]} stencilMaskStack - The mask stack\n     */", "kind": "function", "description": "Changes the mask stack that is used by this System.", "meta": {"code": {"paramnames": ["stencilMaskStack"], "type": "MethodDefinition", "id": "astnode100000026", "name": "setMaskStack"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [586, 1016], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["Array.<PIXI.Graphics>"]}, "description": "The mask stack", "name": "stencilMaskStack"}], "longname": "setMaskStack", "scope": "global", "name": "setMaskStack"}, {"comment": "/**\n     * Applies the Mask and adds it to the current stencil stack. @alvin\n     *\n     * @param {PIXI.Graphics} graphics - The mask\n     */", "kind": "function", "description": "Applies the Mask and adds it to the current stencil stack. @alvin", "meta": {"code": {"paramnames": ["graphics"], "type": "MethodDefinition", "id": "astnode100000080", "name": "pushStencil"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [1168, 1888], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [{"type": {"names": ["PIXI.Graphics"]}, "description": "The mask", "name": "graphics"}], "longname": "pushStencil", "scope": "global", "name": "pushStencil"}, {"comment": "/**\n     * Removes the last mask from the stencil stack. @alvin\n     */", "kind": "function", "description": "Removes the last mask from the stencil stack. @alvin", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000192", "name": "popStencil"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [1970, 2751], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "popStencil", "scope": "global", "name": "popStencil"}, {"comment": "/**\n     * Setup renderer to use the current stencil data.\n     * @private\n     */", "kind": "function", "description": "Setup renderer to use the current stencil data.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000302", "name": "_useCurrent"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [2844, 3090], "lineno": 112, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "_useCurrent", "scope": "global", "name": "_useCurrent"}, {"comment": "/**\n     * Fill 1s equal to the number of acitve stencil masks.\n     * @private\n     * @return {number} The bitwise mask.\n     */", "kind": "function", "description": "Fill 1s equal to the number of acitve stencil masks.", "access": "private", "returns": [{"type": {"names": ["number"]}, "description": "The bitwise mask."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000354", "name": "_getBitwiseMask"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [3230, 3315], "lineno": 126, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "_getBitwiseMask", "scope": "global", "name": "_getBitwiseMask"}, {"comment": "/**\n     * Destroys the mask stack.\n     *\n     */", "kind": "function", "description": "Destroys the mask stack.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000368", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "StencilSystem.js", "range": [3376, 3465], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/mask"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Handle the context change event\n     */", "kind": "function", "description": "Handle the context change event", "meta": {"code": {"paramnames": ["gl"], "type": "MethodDefinition", "id": "astnode100000108", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [1713, 1981], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "/**\n     * Initialize the context\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - WebGL context\n     */", "kind": "function", "description": "Initialize the context", "access": "private", "meta": {"code": {"paramnames": ["gl"], "type": "MethodDefinition", "id": "astnode100000140", "name": "initFromContext"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [2113, 2335], "lineno": 78, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "WebGL context", "name": "gl"}], "longname": "initFromContext", "scope": "global", "name": "initFromContext"}, {"comment": "/**\n     * Initialize from context options\n     *\n     * @private\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n     * @param {object} options - context attributes\n     */", "kind": "function", "description": "Initialize from context options", "access": "private", "see": ["https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext"], "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000186", "name": "initFromOptions"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [2561, 2700], "lineno": 94, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [{"type": {"names": ["object"]}, "description": "context attributes", "name": "options"}], "longname": "initFromOptions", "scope": "global", "name": "initFromOptions"}, {"comment": "/**\n     * Helper class to create a webGL Context\n     *\n     * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\n     * @param options {object} An options object that gets passed in to the canvas element containing the context attributes\n     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext\n     * @return {WebGLRenderingContext} the WebGL context\n     */", "kind": "function", "description": "Helper class to create a webGL Context", "see": ["https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext"], "returns": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "the WebGL context"}], "meta": {"code": {"paramnames": ["canvas", "options"], "type": "MethodDefinition", "id": "astnode100000210", "name": "createContext"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [3138, 3856], "lineno": 109, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "the canvas element that we will get the context from", "name": "canvas"}, {"type": {"names": ["object"]}, "description": "An options object that gets passed in to the canvas element containing the context attributes", "name": "options"}], "longname": "createContext", "scope": "global", "name": "createContext"}, {"comment": "/**\n     * Auto-populate the extensions\n     *\n     * @private\n     */", "kind": "function", "description": "Auto-populate the extensions", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000290", "name": "getExtensions"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [3937, 4733], "lineno": 148, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [], "longname": "getExtensions", "scope": "global", "name": "getExtensions"}, {"comment": "/**\n     * Handles a lost webgl context\n     *\n     * @private\n     * @param {WebGLContextEvent} event - The context lost event.\n     */", "kind": "function", "description": "Handles a lost webgl context", "access": "private", "meta": {"code": {"paramnames": ["event"], "type": "MethodDefinition", "id": "astnode100000358", "name": "handleContextLost"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [4880, 4948], "lineno": 175, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [{"type": {"names": ["WebGLContextEvent"]}, "description": "The context lost event.", "name": "event"}], "longname": "handleContextLost", "scope": "global", "name": "handleContextLost"}, {"comment": "/**\n     * Handles a restored webgl context\n     *\n     * @private\n     */", "kind": "function", "description": "Handles a restored webgl context", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000368", "name": "handleContextRestored"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [5033, 5126], "lineno": 185, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [], "longname": "handleContextRestored", "scope": "global", "name": "handleContextRestored"}, {"comment": "", "kind": "function", "name": "destroy", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000386", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [5132, 5539], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [], "longname": "destroy", "scope": "global"}, {"comment": "/**\n     * Handle the post-render runner event\n     *\n     * @private\n     */", "kind": "function", "description": "Handle the post-render runner event", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000440", "name": "postrender"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [5627, 5676], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [], "longname": "postrender", "scope": "global", "name": "postrender"}, {"comment": "/**\n     * Validate context\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - Render context\n     */", "kind": "function", "description": "Validate context", "access": "private", "meta": {"code": {"paramnames": ["gl"], "type": "MethodDefinition", "id": "astnode100000451", "name": "validateContext"}, "vars": {"": null}, "columnno": 4, "filename": "ContextSystem.js", "range": [5803, 6317], "lineno": 222, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/context"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "Render context", "name": "gl"}], "longname": "validateContext", "scope": "global", "name": "validateContext"}, {"comment": "/**\n     * flags this buffer as requiring an upload to the GPU\n     */", "kind": "function", "description": "flags this buffer as requiring an upload to the GPU", "meta": {"code": {"paramnames": ["data"], "type": "MethodDefinition", "id": "astnode100000062", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "Buffer.js", "range": [1000, 1089], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Destroys the buffer\n     */", "kind": "function", "description": "Destroys the buffer", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000082", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Buffer.js", "range": [1138, 1305], "lineno": 54, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Helper function that creates a buffer based on an array or TypedArray\n     *\n     * @static\n     * @param {TypedArray| Array} data the TypedArray that the buffer will store. If this is a regular Array it will be converted to a Float32Array.\n     * @return {PIXI.Buffer} A new Buffer based on the data provided.\n     */", "kind": "function", "description": "Helper function that creates a buffer based on an array or TypedArray", "returns": [{"type": {"names": ["PIXI.Buffer"]}, "description": "A new Buffer based on the data provided."}], "meta": {"code": {"paramnames": ["data"], "type": "MethodDefinition", "id": "astnode100000116", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "Buffer.js", "range": [1645, 1806], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["TypedArray", "Array"]}, "description": "the TypedArray that the buffer will store. If this is a regular Array it will be converted to a Float32Array.", "name": "data"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     * Destroys the Attribute.\n     */", "kind": "function", "description": "Destroys the Attribute.", "memberof": "PIXI.Attribute", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000062", "name": "Attribute#destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Attribute.js", "range": [1377, 1426], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "PIXI.Attribute#destroy", "scope": "instance", "name": "destroy"}, {"comment": "/**\n     * Helper function that creates an Attribute based on the information provided\n     *\n     * @static\n     * @param {string} buffer  the id of the buffer that this attribute will look for\n     * @param {Number} [size=2] the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2\n     * @param {Number} [stride=0] How far apart (in floats) the start of each value is. (used for interleaving data)\n     * @param {Number} [start=0] How far into the array to start reading values (used for interleaving data)\n     * @param {Boolean} [normalized=false] should the data be normalized.\n     *\n     * @returns {PIXI.Attribute} A new {@link PIXI.Attribute} based on the information provided\n     */", "kind": "function", "description": "Helper function that creates an Attribute based on the information provided", "memberof": "PIXI.Attribute", "returns": [{"type": {"names": ["PIXI.Attribute"]}, "description": "A new {@link PIXI.Attribute} based on the information provided"}], "meta": {"code": {"paramnames": ["buffer", "size", "stride", "start", "normalized"], "type": "MethodDefinition", "id": "astnode100000072", "name": "Attribute.from"}, "vars": {"": null}, "columnno": 4, "filename": "Attribute.js", "range": [2171, 2306], "lineno": 52, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["string"]}, "description": "the id of the buffer that this attribute will look for", "name": "buffer"}, {"optional": true, "defaultvalue": 2, "type": {"names": ["Number"]}, "description": "the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2", "name": "size"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["Number"]}, "description": "How far apart (in floats) the start of each value is. (used for interleaving data)", "name": "stride"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["Number"]}, "description": "How far into the array to start reading values (used for interleaving data)", "name": "start"}, {"optional": true, "defaultvalue": false, "type": {"names": ["Boolean"]}, "description": "should the data be normalized.", "name": "normalized"}], "longname": "PIXI.Attribute.from", "scope": "static", "name": "from"}, {"comment": "/**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */", "kind": "function", "description": "Sets up the renderer context and necessary buffers.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000072", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [1086, 3005], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "", "kind": "function", "name": "createVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000133", "name": "gl.createVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [1584, 1674], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.createVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "bindVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": ["vao"], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000143", "name": "gl.bindVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [1693, 1785], "lineno": 72, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.bindVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "deleteVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": ["vao"], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000155", "name": "gl.deleteVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [1804, 1900], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.deleteVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "createVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000174", "name": "gl.createVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2000, 2093], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.createVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "bindVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000181", "name": "gl.bindVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2112, 2203], "lineno": 86, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.bindVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "deleteVertexArray", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000188", "name": "gl.deleteVertexArray"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2222, 2315], "lineno": 91, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.deleteVertexArray", "scope": "static"}, {"comment": "", "kind": "function", "name": "vertexAttribDivisor", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b"], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000212", "name": "gl.vertexAttribDivisor"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2524, 2621], "lineno": 104, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.vertexAttribDivisor", "scope": "static"}, {"comment": "", "kind": "function", "name": "drawElementsInstanced", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b", "c", "d", "e"], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000226", "name": "gl.drawElementsInstanced"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2640, 2759], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.drawElementsInstanced", "scope": "static"}, {"comment": "", "kind": "function", "name": "drawArraysInstanced", "memberof": "<anonymous>~gl", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b", "c", "d"], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000246", "name": "gl.drawArraysInstanced"}, "columnno": 16, "filename": "GeometrySystem.js", "range": [2778, 2887], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "longname": "<anonymous>~gl.drawArraysInstanced", "scope": "static"}, {"comment": "/**\n     * Binds geometry so that is can be drawn. Creating a Vao if required\n     * @private\n     * @param {PIXI.Geometry} geometry instance of geometry to bind\n     * @param {PIXI.Shader} shader instance of shader to bind\n     */", "kind": "function", "description": "Binds geometry so that is can be drawn. Creating a Vao if required", "access": "private", "meta": {"code": {"paramnames": ["geometry", "shader"], "type": "MethodDefinition", "id": "astnode100000270", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [3247, 4445], "lineno": 126, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["PIXI.Geometry"]}, "description": "instance of geometry to bind", "name": "geometry"}, {"type": {"names": ["PIXI.Shader"]}, "description": "instance of shader to bind", "name": "shader"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Reset and unbind any active VAO and geometry\n     */", "kind": "function", "description": "Reset and unbind any active VAO and geometry", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000384", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [4519, 4561], "lineno": 170, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * Update buffers\n     * @private\n     */", "kind": "function", "description": "Update buffers", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000393", "name": "updateBuffers"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [4621, 5971], "lineno": 179, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "updateBuffers", "scope": "global", "name": "updateBuffers"}, {"comment": "/**\n     * Check compability between a geometry and a program\n     * @private\n     * @param {PIXI.Geometry} geometry - Geometry instance\n     * @param {PIXI.Program} program - Program instance\n     */", "kind": "function", "description": "Check compability between a geometry and a program", "access": "private", "meta": {"code": {"paramnames": ["geometry", "program"], "type": "MethodDefinition", "id": "astnode100000559", "name": "checkCompatibility"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [6182, 6666], "lineno": 227, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["PIXI.Geometry"]}, "description": "Geometry instance", "name": "geometry"}, {"type": {"names": ["PIXI.Program"]}, "description": "Program instance", "name": "program"}], "longname": "checkCompatibility", "scope": "global", "name": "checkCompatibility"}, {"comment": "/**\n     * Takes a geometry and program and generates a unique signature for them.\n     *\n     * @param {PIXI.Geometry} geometry to get signature from\n     * @param {PIXI.Program} prgram to test geometry against\n     * @returns {String} Unique signature of the geometry and program\n     * @private\n     */", "kind": "function", "description": "Takes a geometry and program and generates a unique signature for them.", "access": "private", "returns": [{"type": {"names": ["String"]}, "description": "Unique signature of the geometry and program"}], "meta": {"code": {"paramnames": ["geometry", "program"], "type": "MethodDefinition", "id": "astnode100000596", "name": "getSignature"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [6982, 7353], "lineno": 250, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["PIXI.Geometry"]}, "description": "to get signature from", "name": "geometry"}, {"type": {"names": ["PIXI.Program"]}, "description": "to test geometry against", "name": "prgram"}], "longname": "getSignature", "scope": "global", "name": "getSignature"}, {"comment": "/**\n     * Creates a Vao with the same structure as the geometry and stores it on the geometry.\n     * @private\n     * @param {PIXI.Geometry} geometry - Instance of geometry to to generate Vao for\n     * @param {PIXI.Program} program - Instance of program\n     */", "kind": "function", "description": "Creates a Vao with the same structure as the geometry and stores it on the geometry.", "access": "private", "meta": {"code": {"paramnames": ["geometry", "program"], "type": "MethodDefinition", "id": "astnode100000644", "name": "initGeometryVao"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [7627, 10269], "lineno": 274, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["PIXI.Geometry"]}, "description": "Instance of geometry to to generate Vao for", "name": "geometry"}, {"type": {"names": ["PIXI.Program"]}, "description": "Instance of program", "name": "program"}], "longname": "initGeometryVao", "scope": "global", "name": "initGeometryVao"}, {"comment": "/**\n     * Activate vertex array object\n     *\n     * @private\n     * @param {PIXI.Geometry} geometry - Geometry instance\n     * @param {PIXI.Program} program - Shader program instance\n     */", "kind": "function", "description": "Activate vertex array object", "access": "private", "meta": {"code": {"paramnames": ["geometry", "program"], "type": "MethodDefinition", "id": "astnode100000973", "name": "activateVao"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [10472, 12408], "lineno": 378, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["PIXI.Geometry"]}, "description": "Geometry instance", "name": "geometry"}, {"type": {"names": ["PIXI.Program"]}, "description": "Shader program instance", "name": "program"}], "longname": "activateVao", "scope": "global", "name": "activateVao"}, {"comment": "/**\n     * Draw the geometry\n     *\n     * @param {Number} type - the type primitive to render\n     * @param {Number} [size] - the number of elements to be rendered\n     * @param {Number} [start] - Starting index\n     * @param {Number} [instanceCount] - the number of instances of the set of elements to execute\n     */", "kind": "function", "description": "Draw the geometry", "meta": {"code": {"paramnames": ["type", "size", "start", "instanceCount"], "type": "MethodDefinition", "id": "astnode100001147", "name": "draw"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [12738, 13788], "lineno": 446, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["Number"]}, "description": "the type primitive to render", "name": "type"}, {"optional": true, "type": {"names": ["Number"]}, "description": "the number of elements to be rendered", "name": "size"}, {"optional": true, "type": {"names": ["Number"]}, "description": "Starting index", "name": "start"}, {"optional": true, "type": {"names": ["Number"]}, "description": "the number of instances of the set of elements to execute", "name": "instanceCount"}], "longname": "draw", "scope": "global", "name": "draw"}, {"comment": "/**\n     * Unbind/reset everything\n     * @private\n     */", "kind": "function", "description": "Unbind/reset everything", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001264", "name": "unbind"}, "vars": {"": null}, "columnno": 4, "filename": "GeometrySystem.js", "range": [13857, 13985], "lineno": 483, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "unbind", "scope": "global", "name": "unbind"}, {"comment": "/**\n    *\n    * Adds an attribute to the geometry\n    *\n    * @param {String} id - the name of the attribute (matching up to a shader)\n    * @param {PIXI.Buffer} [buffer] the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.\n    * @param {Number} [size=0] the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2\n    * @param {Boolean} [normalized=false] should the data be normalized.\n    * @param {Number} [type=PIXI.TYPES.FLOAT] what type of number is the attribute. Check {PIXI.TYPES} to see the ones available\n    * @param {Number} [stride=0] How far apart (in floats) the start of each value is. (used for interleaving data)\n    * @param {Number} [start=0] How far into the array to start reading values (used for interleaving data)\n    *\n    * @return {PIXI.Geometry} returns self, useful for chaining.\n    */", "kind": "function", "description": "Adds an attribute to the geometry", "returns": [{"type": {"names": ["PIXI.Geometry"]}, "description": "returns self, useful for chaining."}], "meta": {"code": {"paramnames": ["id", "buffer", "size", "normalized", "type", "stride", "start", "instance"], "type": "MethodDefinition", "id": "astnode100000109", "name": "addAttribute"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [2746, 3986], "lineno": 85, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["String"]}, "description": "the name of the attribute (matching up to a shader)", "name": "id"}, {"optional": true, "type": {"names": ["PIXI.Buffer"]}, "description": "the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.", "name": "buffer"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["Number"]}, "description": "the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2", "name": "size"}, {"optional": true, "defaultvalue": false, "type": {"names": ["Boolean"]}, "description": "should the data be normalized.", "name": "normalized"}, {"optional": true, "defaultvalue": "PIXI.TYPES.FLOAT", "type": {"names": ["Number"]}, "description": "what type of number is the attribute. Check {PIXI.TYPES} to see the ones available", "name": "type"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["Number"]}, "description": "How far apart (in floats) the start of each value is. (used for interleaving data)", "name": "stride"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["Number"]}, "description": "How far into the array to start reading values (used for interleaving data)", "name": "start"}], "longname": "addAttribute", "scope": "global", "name": "addAttribute"}, {"comment": "/**\n     * returns the requested attribute\n     *\n     * @param {String} id  the name of the attribute required\n     * @return {PIXI.Attribute} the attribute requested.\n     */", "kind": "function", "description": "returns the requested attribute", "returns": [{"type": {"names": ["PIXI.Attribute"]}, "description": "the attribute requested."}], "meta": {"code": {"paramnames": ["id"], "type": "MethodDefinition", "id": "astnode100000260", "name": "getAttribute"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [4173, 4258], "lineno": 138, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["String"]}, "description": "the name of the attribute required", "name": "id"}], "longname": "getAttribute", "scope": "global", "name": "getAttribute"}, {"comment": "/**\n    *\n    * Adds an index buffer to the geometry\n    * The index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, \u2026). There is only ONE index buffer.\n    *\n    * @param {PIXI.Buffer} [buffer] the buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.\n    * @return {PIXI.Geometry} returns self, useful for chaining.\n    */", "kind": "function", "description": "Adds an index buffer to the geometry\nThe index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, \u2026). There is only ONE index buffer.", "returns": [{"type": {"names": ["PIXI.Geometry"]}, "description": "returns self, useful for chaining."}], "meta": {"code": {"paramnames": ["buffer"], "type": "MethodDefinition", "id": "astnode100000277", "name": "addIndex"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [4785, 5245], "lineno": 151, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"optional": true, "type": {"names": ["PIXI.Buffer"]}, "description": "the buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.", "name": "buffer"}], "longname": "addIndex", "scope": "global", "name": "addIndex"}, {"comment": "/**\n     * returns the index buffer\n     *\n     * @return {PIXI.Buffer} the index buffer.\n     */", "kind": "function", "description": "returns the index buffer", "returns": [{"type": {"names": ["PIXI.Buffer"]}, "description": "the index buffer."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000339", "name": "getIndex"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [5353, 5408], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "getIndex", "scope": "global", "name": "getIndex"}, {"comment": "/**\n     * this function modifies the structure so that all current attributes become interleaved into a single buffer\n     * This can be useful if your model remains static as it offers a little performance boost\n     *\n     * @return {PIXI.Geometry} returns self, useful for chaining.\n     */", "kind": "function", "description": "this function modifies the structure so that all current attributes become interleaved into a single buffer\nThis can be useful if your model remains static as it offers a little performance boost", "returns": [{"type": {"names": ["PIXI.Geometry"]}, "description": "returns self, useful for chaining."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000347", "name": "interleave"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [5713, 6837], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "interleave", "scope": "global", "name": "interleave"}, {"comment": "", "kind": "function", "name": "getSize", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000510", "name": "getSize"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [6843, 7138], "lineno": 235, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "getSize", "scope": "global"}, {"comment": "/**\n     * Destroys the geometry.\n     */", "kind": "function", "description": "Destroys the geometry.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000558", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [7190, 7606], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * returns a clone of the geometry\n     *\n     * @returns {PIXI.Geometry} a new clone of this geometry\n     */", "kind": "function", "description": "returns a clone of the geometry", "returns": [{"type": {"names": ["PIXI.Geometry"]}, "description": "a new clone of this geometry"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000635", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [7735, 8557], "lineno": 276, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * merges an array of geometries into a new single one\n     * geometry attribute styles must match for this operation to work\n     *\n     * @param {array|PIXI.Geometry} geometries array of geometries to merge\n     * @returns {PIXI.Geometry} shiny new geometry!\n     */", "kind": "function", "description": "merges an array of geometries into a new single one\ngeometry attribute styles must match for this operation to work", "returns": [{"type": {"names": ["PIXI.Geometry"]}, "description": "shiny new geometry!"}], "meta": {"code": {"paramnames": ["geometries"], "type": "MethodDefinition", "id": "astnode100000757", "name": "merge"}, "vars": {"": null}, "columnno": 4, "filename": "Geometry.js", "range": [8844, 11752], "lineno": 316, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry"}, "params": [{"type": {"names": ["array", "PIXI.Geometry"]}, "description": "array of geometries to merge", "name": "geometries"}], "longname": "merge", "scope": "global", "name": "merge"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["arrays", "sizes"], "type": "FunctionDeclaration", "id": "astnode100000018", "name": "module.exports"}, "columnno": 0, "filename": "interleaveTypedArrays.js", "range": [220, 1150], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "interleaveTypedArrays", "undocumented": true, "meta": {"code": {"paramnames": ["arrays", "sizes"], "type": "FunctionDeclaration", "id": "astnode100000019", "name": "interleaveTypedArrays"}, "vars": {"littleOffset": "interleaveTypedArrays~littleOffset", "out[undefined]": "interleaveTypedArrays~out.undefined]", "i": "interleaveTypedArrays~i", "views": "interleaveTypedArrays~views", "outSize": "interleaveTypedArrays~outSize", "index": "interleaveTypedArrays~index", "indexStart": "interleaveTypedArrays~indexStart", "j": "interleaveTypedArrays~j", "stride": "interleaveTypedArrays~stride", "buffer": "interleaveTypedArrays~buffer", "views[undefined]": "interleaveTypedArrays~views.undefined]", "array": "interleaveTypedArrays~array", "size": "interleaveTypedArrays~size", "type": "interleaveTypedArrays~type", "out": "interleaveTypedArrays~out"}, "columnno": 15, "filename": "interleaveTypedArrays.js", "range": [235, 1150], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "params": [], "longname": "interleaveTypedArrays", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "getBufferType.js", "range": [0, 700], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "getBufferType", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "getBufferType"}, "columnno": 15, "filename": "getBufferType.js", "range": [15, 700], "lineno": 1, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "params": [], "longname": "getBufferType", "scope": "global"}, {"comment": "/**\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param attribs {*}\n * @param state {*}\n */", "kind": "function", "name": "exports", "memberof": "module", "meta": {"code": {"paramnames": ["gl", "attribs", "state"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "setVertexAttribArrays.js", "range": [134, 1260], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "The current WebGL context", "name": "gl"}, {"type": {"names": ["*"]}, "name": "attribs"}, {"type": {"names": ["*"]}, "name": "state"}], "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "setVertexAttribArrays", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "attribs", "state"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "setVertexAttribArrays"}, "vars": {"tempAttribState": "setVertexAttribArrays~tempAttribState", "tempAttribState[undefined]": "setVertexAttribArrays~tempAttribState.undefined]", "i": "setVertexAttribArrays~i", "attribState": "setVertexAttribArrays~attribState", "attribState[undefined]": "setVertexAttribArrays~attribState.undefined]", "attrib": "setVertexAttribArrays~attrib"}, "columnno": 15, "filename": "setVertexAttribArrays.js", "range": [149, 1260], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/geometry/utils"}, "params": [], "longname": "setVertexAttribArrays", "scope": "global"}, {"comment": "/**\n     * clears the state\n     */", "kind": "function", "description": "clears the state", "memberof": "FilterState", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000089", "name": "FilterState#clear"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [1719, 1830], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "FilterState#clear", "scope": "instance", "name": "clear"}, {"comment": "/**\n     * Adds a new filter to the System.\n     *\n     * @param {PIXI.DisplayObject} target - The target of the filter to render.\n     * @param {PIXI.Filter[]} filters - The filters to apply.\n     */", "kind": "function", "description": "Adds a new filter to the System.", "meta": {"code": {"paramnames": ["target", "filters"], "type": "MethodDefinition", "id": "astnode100000230", "name": "push"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [4347, 6325], "lineno": 176, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The target of the filter to render.", "name": "target"}, {"type": {"names": ["Array.<PIXI.Filter>"]}, "description": "The filters to apply.", "name": "filters"}], "longname": "push", "scope": "global", "name": "push"}, {"comment": "/**\n     * Pops off the filter and applies it.\n     *\n     */", "kind": "function", "description": "Pops off the filter and applies it.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000523", "name": "pop"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [6397, 9115], "lineno": 241, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "pop", "scope": "global", "name": "pop"}, {"comment": "/**\n     * Draws a filter.\n     *\n     * @param {PIXI.Filter} filter - The filter to draw.\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */", "kind": "function", "description": "Draws a filter.", "meta": {"code": {"paramnames": ["filter", "input", "output", "clear"], "type": "MethodDefinition", "id": "astnode100000957", "name": "applyFilter"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [9443, 10541], "lineno": 337, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.Filter"]}, "description": "The filter to draw.", "name": "filter"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The input render target.", "name": "input"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The target to output to.", "name": "output"}, {"type": {"names": ["boolean"]}, "description": "Should the output be cleared before rendering to it", "name": "clear"}], "longname": "applyFilter", "scope": "global", "name": "applyFilter"}, {"comment": "/**\n     * Calculates the mapped matrix.\n     *\n     * TODO playing around here.. this is temporary - (will end up in the shader)\n     * this returns a matrix that will normalize map filter cords in the filter to screen space\n     *\n     * @param {PIXI.Matrix} outputMatrix - the matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */", "kind": "function", "description": "Calculates the mapped matrix.\n\nTODO playing around here.. this is temporary - (will end up in the shader)\nthis returns a matrix that will normalize map filter cords in the filter to screen space", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The mapped matrix."}], "meta": {"code": {"paramnames": ["outputMatrix"], "type": "MethodDefinition", "id": "astnode100001090", "name": "calculateScreenSpaceMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [10908, 11185], "lineno": 384, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "the matrix to output to.", "name": "outputMatrix"}], "longname": "calculateScreenSpaceMatrix", "scope": "global", "name": "calculateScreenSpaceMatrix"}, {"comment": "/**\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @param {PIXI.Sprite} sprite - The sprite to map to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */", "kind": "function", "description": "This will map the filter coord so that a texture can be used based on the transform of a sprite", "returns": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The mapped matrix."}], "meta": {"code": {"paramnames": ["outputMatrix", "sprite"], "type": "MethodDefinition", "id": "astnode100001113", "name": "calculateSpriteMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [11492, 11787], "lineno": 402, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "The matrix to output to.", "name": "outputMatrix"}, {"type": {"names": ["PIXI.Sprite"]}, "description": "The sprite to map to.", "name": "sprite"}], "longname": "calculateSpriteMatrix", "scope": "global", "name": "calculateSpriteMatrix"}, {"comment": "/**\n     * Destroys this Filter System.\n     *\n     * @param {boolean} [contextLost=false] context was lost, do not free shaders\n     *\n     */", "kind": "function", "description": "Destroys this Filter System.", "meta": {"code": {"paramnames": ["contextLost"], "type": "MethodDefinition", "id": "astnode100001138", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [11941, 12125], "lineno": 420, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "context was lost, do not free shaders", "name": "contextLost"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Gets a Power-of-Two render texture or fullScreen texture\n     *\n     * TODO move to a separate class could be on renderer?\n     *\n     * @private\n     * @param {number} minWidth - The minimum width of the render texture in real pixels.\n     * @param {number} minHeight - The minimum height of the render texture in real pixels.\n     * @param {number} [resolution=1] - The resolution of the render texture.\n     * @return {PIXI.RenderTexture} The new render texture.\n     */", "kind": "function", "description": "Gets a Power-of-Two render texture or fullScreen texture\n\nTODO move to a separate class could be on renderer?", "access": "private", "returns": [{"type": {"names": ["PIXI.RenderTexture"]}, "description": "The new render texture."}], "meta": {"code": {"paramnames": ["minWidth", "minHeight", "resolution"], "type": "MethodDefinition", "id": "astnode100001161", "name": "getOptimalFilterTexture"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [12620, 13622], "lineno": 443, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["number"]}, "description": "The minimum width of the render texture in real pixels.", "name": "minWidth"}, {"type": {"names": ["number"]}, "description": "The minimum height of the render texture in real pixels.", "name": "minHeight"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The resolution of the render texture.", "name": "resolution"}], "longname": "getOptimalFilterTexture", "scope": "global", "name": "getOptimalFilterTexture"}, {"comment": "/**\n     * Gets extra render texture to use inside current filter\n     *\n     * @param {number} resolution resolution of the renderTexture\n     * @returns {PIXI.RenderTexture}\n     */", "kind": "function", "description": "Gets extra render texture to use inside current filter", "returns": [{"type": {"names": ["PIXI.RenderTexture"]}}], "meta": {"code": {"paramnames": ["resolution"], "type": "MethodDefinition", "id": "astnode100001276", "name": "getFilterTexture"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [13816, 14114], "lineno": 486, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["number"]}, "description": "resolution of the renderTexture", "name": "resolution"}], "longname": "getFilterTexture", "scope": "global", "name": "getFilterTexture"}, {"comment": "/**\n     * Frees a render texture back into the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTexture - The renderTarget to free\n     */", "kind": "function", "description": "Frees a render texture back into the pool.", "meta": {"code": {"paramnames": ["renderTexture"], "type": "MethodDefinition", "id": "astnode100001319", "name": "returnFilterTexture"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [14268, 14457], "lineno": 502, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.RenderTarget"]}, "description": "The renderTarget to free", "name": "renderTexture"}], "longname": "returnFilterTexture", "scope": "global", "name": "returnFilterTexture"}, {"comment": "/**\n     * Empties the texture pool.\n     *\n     */", "kind": "function", "description": "Empties the texture pool.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001346", "name": "emptyPool"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [14519, 14882], "lineno": 514, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "emptyPool", "scope": "global", "name": "emptyPool"}, {"comment": "", "kind": "function", "name": "resize", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001396", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "FilterSystem.js", "range": [14888, 15283], "lineno": 532, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "resize", "scope": "global"}, {"comment": "/**\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n * @private\n */", "kind": "function", "description": "Calculates the mapped matrix", "access": "private", "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "exports.calculateScreenSpaceMatrix"}, "columnno": 0, "filename": "filterTransforms.js", "range": [314, 657], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["Rectangle"]}, "description": "The filter area", "name": "filterArea"}, {"type": {"names": ["Sprite"]}, "description": "the target sprite", "name": "sprite"}, {"type": {"names": ["Matrix"]}, "description": "@alvin", "name": "outputMatrix"}], "longname": "calculateScreenSpaceMatrix", "scope": "global", "name": "calculateScreenSpaceMatrix"}, {"comment": "", "kind": "function", "name": "calculateScreenSpaceMatrix", "undocumented": true, "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "calculateScreenSpaceMatrix"}, "vars": {"mappedMatrix": "calculateScreenSpaceMatrix~mappedMatrix"}, "columnno": 7, "filename": "filterTransforms.js", "range": [321, 657], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "calculateScreenSpaceMatrix", "scope": "global"}, {"comment": "", "kind": "function", "name": "calculateNormalizedScreenSpaceMatrix", "undocumented": true, "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize"], "type": "FunctionDeclaration", "id": "astnode100000052", "name": "exports.calculateNormalizedScreenSpaceMatrix"}, "columnno": 0, "filename": "filterTransforms.js", "range": [659, 1126], "lineno": 23, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "longname": "calculateNormalizedScreenSpaceMatrix", "scope": "global"}, {"comment": "", "kind": "function", "name": "calculateNormalizedScreenSpaceMatrix", "undocumented": true, "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize"], "type": "FunctionDeclaration", "id": "astnode100000053", "name": "calculateNormalizedScreenSpaceMatrix"}, "vars": {"translateScaleY": "calculateNormalizedScreenSpaceMatrix~translateScaleY", "translateScaleX": "calculateNormalizedScreenSpaceMatrix~translateScaleX", "mappedMatrix": "calculateNormalizedScreenSpaceMatrix~mappedMatrix"}, "columnno": 7, "filename": "filterTransforms.js", "range": [666, 1126], "lineno": 23, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "calculateNormalizedScreenSpaceMatrix", "scope": "global"}, {"comment": "", "kind": "function", "name": "calculateSpriteMatrix", "undocumented": true, "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize", "sprite"], "type": "FunctionDeclaration", "id": "astnode100000114", "name": "exports.calculateSpriteMatrix"}, "columnno": 0, "filename": "filterTransforms.js", "range": [1227, 1768], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "longname": "calculateSpriteMatrix", "scope": "global"}, {"comment": "", "kind": "function", "name": "calculateSpriteMatrix", "undocumented": true, "meta": {"code": {"paramnames": ["outputMatrix", "filterArea", "textureSize", "sprite"], "type": "FunctionDeclaration", "id": "astnode100000115", "name": "calculateSpriteMatrix"}, "vars": {"worldTransform": "calculateSpriteMatrix~worldTransform", "mappedMatrix": "calculateSpriteMatrix~mappedMatrix", "orig": "calculateSpriteMatrix~orig"}, "columnno": 7, "filename": "filterTransforms.js", "range": [1234, 1768], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [], "longname": "calculateSpriteMatrix", "scope": "global"}, {"comment": "/**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     * @param {object} [currentState] - It's current state of filter.\n     *        There are some useful properties in the currentState :\n     *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n     */", "kind": "function", "description": "Applies the filter", "meta": {"code": {"paramnames": ["filterManager", "input", "output", "clear", "currentState", "derp"], "type": "MethodDefinition", "id": "astnode100000107", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "Filter.js", "range": [7561, 7828], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters"}, "params": [{"type": {"names": ["PIXI.FilterManager"]}, "description": "The renderer to retrieve the filter from", "name": "filterManager"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The input render target.", "name": "input"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The target to output to.", "name": "output"}, {"type": {"names": ["boolean"]}, "description": "Should the output be cleared before rendering to it", "name": "clear"}, {"optional": true, "type": {"names": ["object"]}, "description": "It's current state of filter.\n       There are some useful properties in the currentState :\n       target, filters, sourceFrame, destinationFrame, renderTarget, resolution", "name": "currentState"}], "longname": "apply", "scope": "global", "name": "apply"}, {"comment": "/**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     */", "kind": "function", "description": "Applies the filter", "meta": {"code": {"paramnames": ["filterManager", "input", "output"], "type": "MethodDefinition", "id": "astnode100000060", "name": "apply"}, "vars": {"": null}, "columnno": 4, "filename": "SpriteMaskFilter.js", "range": [1118, 2039], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/filters/spriteMask"}, "params": [{"type": {"names": ["PIXI.FilterManager"]}, "description": "The renderer to retrieve the filter from", "name": "filterManager"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The input render target.", "name": "input"}, {"type": {"names": ["PIXI.RenderTarget"]}, "description": "The target to output to.", "name": "output"}], "longname": "apply", "scope": "global", "name": "apply"}, {"comment": "/**\n     * Maps two Rectangle to the quad.\n     *\n     * @param {PIXI.Rectangle} targetTextureFrame - the first rectangle\n     * @param {PIXI.Rectangle} destinationFrame - the second rectangle\n     * @return {PIXI.Quad} Returns itself.\n     */", "kind": "function", "description": "Maps two Rectangle to the quad.", "returns": [{"type": {"names": ["PIXI.Quad"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": ["targetTextureFrame", "destinationFrame"], "type": "MethodDefinition", "id": "astnode100000104", "name": "map"}, "vars": {"": null}, "columnno": 4, "filename": "QuadUv.js", "range": [1250, 2327], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/utils"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "the first rectangle", "name": "targetTextureFrame"}, {"type": {"names": ["PIXI.Rectangle"]}, "description": "the second rectangle", "name": "destinationFrame"}], "longname": "map", "scope": "global", "name": "map"}, {"comment": "/**\n     * legacy upload method, just marks buffers dirty\n     * @returns {PIXI.QuadUv} Returns itself.\n     */", "kind": "function", "description": "legacy upload method, just marks buffers dirty", "returns": [{"type": {"names": ["PIXI.QuadUv"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000313", "name": "invalidate"}, "vars": {"": null}, "columnno": 4, "filename": "QuadUv.js", "range": [2449, 2569], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/utils"}, "params": [], "longname": "invalidate", "scope": "global", "name": "invalidate"}, {"comment": "/**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */", "kind": "function", "description": "Sets up the renderer context and necessary buffers.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000015", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [321, 589], "lineno": 17, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "/**\n     * Bind a framebuffer\n     *\n     * @param {PIXI.Framebuffer} framebuffer\n     * @param {PIXI.Rectangle} frame\n     */", "kind": "function", "description": "Bind a framebuffer", "meta": {"code": {"paramnames": ["framebuffer", "frame"], "type": "MethodDefinition", "id": "astnode100000066", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [726, 2915], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["PIXI.Framebuffer"]}, "name": "framebuffer"}, {"type": {"names": ["PIXI.Rectangle"]}, "name": "frame"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Set the WebGLRenderingContext's viewport.\n     *\n     * @param {Number} x - X position of viewport\n     * @param {Number} y - Y position of viewport\n     * @param {Number} width - Width of viewport\n     * @param {Number} height - Height of viewport\n     */", "kind": "function", "description": "Set the WebGLRenderingContext's viewport.", "meta": {"code": {"paramnames": ["x", "y", "width", "height"], "type": "MethodDefinition", "id": "astnode100000331", "name": "setViewport"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [3193, 3525], "lineno": 113, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["Number"]}, "description": "X position of viewport", "name": "x"}, {"type": {"names": ["Number"]}, "description": "Y position of viewport", "name": "y"}, {"type": {"names": ["Number"]}, "description": "Width of viewport", "name": "width"}, {"type": {"names": ["Number"]}, "description": "Height of viewport", "name": "height"}], "longname": "setViewport", "scope": "global", "name": "setViewport"}, {"comment": "/**\n     * Clear the color of the context\n     *\n     * @param {Number} r - Red value from 0 to 1\n     * @param {Number} g - Green value from 0 to 1\n     * @param {Number} b - Blue value from 0 to 1\n     * @param {Number} a - Alpha value from 0 to 1\n     */", "kind": "function", "description": "Clear the color of the context", "meta": {"code": {"paramnames": ["r", "g", "b", "a"], "type": "MethodDefinition", "id": "astnode100000450", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [4245, 4455], "lineno": 153, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["Number"]}, "description": "Red value from 0 to 1", "name": "r"}, {"type": {"names": ["Number"]}, "description": "Green value from 0 to 1", "name": "g"}, {"type": {"names": ["Number"]}, "description": "Blue value from 0 to 1", "name": "b"}, {"type": {"names": ["Number"]}, "description": "Alpha value from 0 to 1", "name": "a"}], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Initialize framebuffer\n     *\n     * @private\n     * @param {PIXI.Framebuffer} framebuffer\n     */", "kind": "function", "description": "Initialize framebuffer", "access": "private", "meta": {"code": {"paramnames": ["framebuffer"], "type": "MethodDefinition", "id": "astnode100000485", "name": "initFramebuffer"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [4575, 4951], "lineno": 168, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["PIXI.Framebuffer"]}, "name": "framebuffer"}], "longname": "initFramebuffer", "scope": "global", "name": "initFramebuffer"}, {"comment": "/**\n     * Resize the framebuffer\n     *\n     * @private\n     * @param {PIXI.Framebuffer} framebuffer\n     */", "kind": "function", "description": "Resize the framebuffer", "access": "private", "meta": {"code": {"paramnames": ["framebuffer"], "type": "MethodDefinition", "id": "astnode100000525", "name": "resizeFramebuffer"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [5071, 5391], "lineno": 192, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["PIXI.Framebuffer"]}, "name": "framebuffer"}], "longname": "resizeFramebuffer", "scope": "global", "name": "resizeFramebuffer"}, {"comment": "/**\n     * Update the framebuffer\n     *\n     * @private\n     * @param {PIXI.Framebuffer} framebuffer\n     */", "kind": "function", "description": "Update the framebuffer", "access": "private", "meta": {"code": {"paramnames": ["framebuffer"], "type": "MethodDefinition", "id": "astnode100000573", "name": "updateFramebuffer"}, "vars": {"": null}, "columnno": 4, "filename": "FramebufferSystem.js", "range": [5511, 8046], "lineno": 209, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [{"type": {"names": ["PIXI.Framebuffer"]}, "name": "framebuffer"}], "longname": "updateFramebuffer", "scope": "global", "name": "updateFramebuffer"}, {"comment": "", "kind": "function", "name": "addColorTexture", "undocumented": true, "meta": {"code": {"paramnames": ["index", "texture"], "type": "MethodDefinition", "id": "astnode100000104", "name": "addColorTexture"}, "vars": {"": null}, "columnno": 4, "filename": "FrameBuffer.js", "range": [648, 1071], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "addColorTexture", "scope": "global"}, {"comment": "", "kind": "function", "name": "addDepthTexture", "undocumented": true, "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000151", "name": "addDepthTexture"}, "vars": {"": null}, "columnno": 4, "filename": "FrameBuffer.js", "range": [1077, 1558], "lineno": 49, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "addDepthTexture", "scope": "global"}, {"comment": "", "kind": "function", "name": "enableDepth", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000201", "name": "enableDepth"}, "vars": {"": null}, "columnno": 4, "filename": "FrameBuffer.js", "range": [1564, 1691], "lineno": 66, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "enableDepth", "scope": "global"}, {"comment": "", "kind": "function", "name": "enableStencil", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000223", "name": "enableStencil"}, "vars": {"": null}, "columnno": 4, "filename": "FrameBuffer.js", "range": [1697, 1828], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "enableStencil", "scope": "global"}, {"comment": "", "kind": "function", "name": "resize", "undocumented": true, "meta": {"code": {"paramnames": ["width", "height"], "type": "MethodDefinition", "id": "astnode100000245", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "FrameBuffer.js", "range": [1834, 2361], "lineno": 86, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/framebuffer"}, "params": [], "longname": "resize", "scope": "global"}, {"comment": "", "kind": "function", "name": "checkUniformExists", "memberof": "PIXI.Shader", "undocumented": true, "meta": {"code": {"paramnames": ["name", "group"], "type": "MethodDefinition", "id": "astnode100000094", "name": "Shader#checkUniformExists"}, "vars": {"": null}, "columnno": 4, "filename": "Shader.js", "range": [1410, 1852], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "PIXI.Shader#checkUniformExists", "scope": "instance"}, {"comment": "", "kind": "function", "name": "destroy", "memberof": "PIXI.Shader", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000142", "name": "Shader#destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Shader.js", "range": [1858, 1980], "lineno": 74, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "PIXI.Shader#destroy", "scope": "instance"}, {"comment": "/**\n     * A short hand function to create a shader based of a vertex and fragment shader\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     *\n     * @returns {PIXI.Shader} an shiny new pixi shader!\n     */", "kind": "function", "description": "A short hand function to create a shader based of a vertex and fragment shader", "memberof": "PIXI.Shader", "returns": [{"type": {"names": ["PIXI.Shader"]}, "description": "an shiny new pixi shader!"}], "meta": {"code": {"paramnames": ["vertexSrc", "fragmentSrc", "uniforms"], "type": "MethodDefinition", "id": "astnode100000162", "name": "Shader.from"}, "vars": {"": null}, "columnno": 4, "filename": "Shader.js", "range": [2466, 2632], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "The source of the vertex shader.", "name": "vertexSrc"}, {"optional": true, "type": {"names": ["string"]}, "description": "The source of the fragment shader.", "name": "fragmentSrc"}, {"optional": true, "type": {"names": ["object"]}, "description": "Custom uniforms to use to augment the built-in ones.", "name": "uniforms"}], "longname": "PIXI.Shader.from", "scope": "static", "name": "from"}, {"comment": "/**\n     * Extracts the data for a buy creating a small test program\n     * or reading the src directly.\n     * @private\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     */", "kind": "function", "description": "Extracts the data for a buy creating a small test program\nor reading the src directly.", "memberof": "PIXI.Program", "access": "private", "meta": {"code": {"paramnames": ["vertexSrc", "fragmentSrc"], "type": "MethodDefinition", "id": "astnode100000158", "name": "Program#extractData"}, "vars": {"": null}, "columnno": 4, "filename": "Program.js", "range": [1925, 2398], "lineno": 67, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "The source of the vertex shader.", "name": "vertexSrc"}, {"optional": true, "type": {"names": ["string"]}, "description": "The source of the fragment shader.", "name": "fragmentSrc"}], "longname": "PIXI.Program#extractData", "scope": "instance", "name": "extractData"}, {"comment": "/**\n     * returns the attribute data from the program\n     * @private\n     *\n     * @param {webGL-program} [program] - the webgl program\n     * @param {context} [gl] - the webGL context\n     *\n     * @returns {object} the attribute data for this program\n     */", "kind": "function", "description": "returns the attribute data from the program", "memberof": "PIXI.Program", "access": "private", "returns": [{"type": {"names": ["object"]}, "description": "the attribute data for this program"}], "meta": {"code": {"paramnames": ["program", "gl"], "type": "MethodDefinition", "id": "astnode100000221", "name": "Program#getAttributeData"}, "vars": {"": null}, "columnno": 4, "filename": "Program.js", "range": [2671, 3647], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"optional": true, "type": {"names": ["webGL-program"]}, "description": "the webgl program", "name": "program"}, {"optional": true, "type": {"names": ["context"]}, "description": "the webGL context", "name": "gl"}], "longname": "PIXI.Program#getAttributeData", "scope": "instance", "name": "getAttributeData"}, {"comment": "/**\n     * returns the uniform data from the program\n     * @private\n     *\n     * @param {webGL-program} [program] - the webgl program\n     * @param {context} [gl] - the webGL context\n     *\n     * @returns {object} the uniform data for this program\n     */", "kind": "function", "description": "returns the uniform data from the program", "memberof": "PIXI.Program", "access": "private", "returns": [{"type": {"names": ["object"]}, "description": "the uniform data for this program"}], "meta": {"code": {"paramnames": ["program", "gl"], "type": "MethodDefinition", "id": "astnode100000347", "name": "Program#getUniformData"}, "vars": {"": null}, "columnno": 4, "filename": "Program.js", "range": [3916, 4915], "lineno": 140, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"optional": true, "type": {"names": ["webGL-program"]}, "description": "the webgl program", "name": "program"}, {"optional": true, "type": {"names": ["context"]}, "description": "the webGL context", "name": "gl"}], "longname": "PIXI.Program#getUniformData", "scope": "instance", "name": "getUniformData"}, {"comment": "/**\n     * A short hand function to create a program based of a vertex and fragment shader\n     * this method will also check to see if there is a cached program.\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     *\n     * @returns {PIXI.Shader} an shiny new pixi shader!\n     */", "kind": "function", "description": "A short hand function to create a program based of a vertex and fragment shader\nthis method will also check to see if there is a cached program.", "memberof": "PIXI.Program", "returns": [{"type": {"names": ["PIXI.Shader"]}, "description": "an shiny new pixi shader!"}], "meta": {"code": {"paramnames": ["vertexSrc", "fragmentSrc", "name"], "type": "MethodDefinition", "id": "astnode100000454", "name": "Program.from"}, "vars": {"": null}, "columnno": 4, "filename": "Program.js", "range": [5749, 6042], "lineno": 203, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "The source of the vertex shader.", "name": "vertexSrc"}, {"optional": true, "type": {"names": ["string"]}, "description": "The source of the fragment shader.", "name": "fragmentSrc"}, {"optional": true, "type": {"names": ["object"]}, "description": "Custom uniforms to use to augment the built-in ones.", "name": "uniforms"}], "longname": "PIXI.Program.from", "scope": "static", "name": "from"}, {"comment": "", "kind": "function", "name": "update", "memberof": "PIXI.UniformGroup", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000054", "name": "UniformGroup#update"}, "vars": {"": null}, "columnno": 4, "filename": "UniformGroup.js", "range": [598, 642], "lineno": 27, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "PIXI.UniformGroup#update", "scope": "instance"}, {"comment": "", "kind": "function", "name": "add", "memberof": "PIXI.UniformGroup", "undocumented": true, "meta": {"code": {"paramnames": ["name", "uniforms", "_static"], "type": "MethodDefinition", "id": "astnode100000063", "name": "UniformGroup#add"}, "vars": {"": null}, "columnno": 4, "filename": "UniformGroup.js", "range": [648, 755], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "PIXI.UniformGroup#add", "scope": "instance"}, {"comment": "", "kind": "function", "name": "from", "memberof": "PIXI.UniformGroup", "undocumented": true, "meta": {"code": {"paramnames": ["uniforms", "_static"], "type": "MethodDefinition", "id": "astnode100000081", "name": "UniformGroup.from"}, "vars": {"": null}, "columnno": 4, "filename": "UniformGroup.js", "range": [761, 855], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "PIXI.UniformGroup.from", "scope": "static"}, {"comment": "", "kind": "function", "name": "contextChange", "undocumented": true, "meta": {"code": {"paramnames": ["gl"], "type": "MethodDefinition", "id": "astnode100000067", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [923, 974], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "contextChange", "scope": "global"}, {"comment": "/**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {PIXI.Shader} shader - the new shader\n     * @param {boolean} dontSync - false if the shader should automatically sync its uniforms.\n     * @returns {PIXI.glCore.glProgram} the glProgram that belongs to the shader.\n     */", "kind": "function", "description": "Changes the current shader to the one given in parameter", "returns": [{"type": {"names": ["PIXI.glCore.glProgram"]}, "description": "the glProgram that belongs to the shader."}], "meta": {"code": {"paramnames": ["shader", "dontSync"], "type": "MethodDefinition", "id": "astnode100000078", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [1296, 1929], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"type": {"names": ["PIXI.Shader"]}, "description": "the new shader", "name": "shader"}, {"type": {"names": ["boolean"]}, "description": "false if the shader should automatically sync its uniforms.", "name": "dontSync"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Uploads the uniforms values to the currently bound shader.\n     *\n     * @param {object} uniforms - the uniforms values that be applied to the current shader\n     */", "kind": "function", "description": "Uploads the uniforms values to the currently bound shader.", "meta": {"code": {"paramnames": ["uniforms"], "type": "MethodDefinition", "id": "astnode100000163", "name": "setUniforms"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [2116, 2343], "lineno": 86, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"type": {"names": ["object"]}, "description": "the uniforms values that be applied to the current shader", "name": "uniforms"}], "longname": "setUniforms", "scope": "global", "name": "setUniforms"}, {"comment": "", "kind": "function", "name": "syncUniformGroup", "undocumented": true, "meta": {"code": {"paramnames": ["group"], "type": "MethodDefinition", "id": "astnode100000200", "name": "syncUniformGroup"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [2349, 2779], "lineno": 94, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "syncUniformGroup", "scope": "global"}, {"comment": "", "kind": "function", "name": "createSyncGroups", "undocumented": true, "meta": {"code": {"paramnames": ["group"], "type": "MethodDefinition", "id": "astnode100000274", "name": "createSyncGroups"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [2785, 3169], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "createSyncGroups", "scope": "global"}, {"comment": "/**\n     * Takes a uniform group and data and generates a unique signature for them.\n     *\n     * @param {PIXI.UniformGroup} group the uniform group to get signature of\n     * @param {Object} uniformData uniform information generated by the shader\n     * @returns {String} Unique signature of the uniform group\n     * @private\n     */", "kind": "function", "description": "Takes a uniform group and data and generates a unique signature for them.", "access": "private", "returns": [{"type": {"names": ["String"]}, "description": "Unique signature of the uniform group"}], "meta": {"code": {"paramnames": ["group", "uniformData"], "type": "MethodDefinition", "id": "astnode100000349", "name": "getSignature"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [3515, 3860], "lineno": 129, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"type": {"names": ["PIXI.UniformGroup"]}, "description": "the uniform group to get signature of", "name": "group"}, {"type": {"names": ["Object"]}, "description": "uniform information generated by the shader", "name": "uniformData"}], "longname": "getSignature", "scope": "global", "name": "getSignature"}, {"comment": "/**\n     * Returns the underlying GLShade rof the currently bound shader.\n     * This can be handy for when you to have a little more control over the setting of your uniforms.\n     *\n     * @return {PIXI.glCore.Shader} the glProgram for the currently bound Shader for this context\n     */", "kind": "function", "description": "Returns the underlying GLShade rof the currently bound shader.\nThis can be handy for when you to have a little more control over the setting of your uniforms.", "returns": [{"type": {"names": ["PIXI.glCore.Shader"]}, "description": "the glProgram for the currently bound Shader for this context"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000398", "name": "getglProgram"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [4160, 4331], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "getglProgram", "scope": "global", "name": "getglProgram"}, {"comment": "/**\n     * Generates a glProgram version of the Shader provided.\n     *\n     * @private\n     * @param {PIXI.Shader} shader the shader that the glProgram will be based on.\n     * @return {PIXI.glCore.glProgram} A shiny new glProgram!\n     */", "kind": "function", "description": "Generates a glProgram version of the Shader provided.", "access": "private", "returns": [{"type": {"names": ["PIXI.glCore.glProgram"]}, "description": "A shiny new glProgram!"}], "meta": {"code": {"paramnames": ["shader"], "type": "MethodDefinition", "id": "astnode100000423", "name": "generateShader"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [4582, 5433], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [{"type": {"names": ["PIXI.Shader"]}, "description": "the shader that the glProgram will be based on.", "name": "shader"}], "longname": "generateShader", "scope": "global", "name": "generateShader"}, {"comment": "/**\n     * Destroys this System and removes all its textures\n     */", "kind": "function", "description": "Destroys this System and removes all its textures", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000540", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ShaderSystem.js", "range": [5512, 5622], "lineno": 207, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Destroys this program\n     * TODO\n     */", "kind": "function", "description": "Destroys this program\nTODO", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000030", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "GLProgram.js", "range": [844, 962], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["vertexSrc", "fragmentSrc", "mask"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "extractUniformsFromSrc.js", "range": [44, 319], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "extractUniformsFromSrc", "undocumented": true, "meta": {"code": {"paramnames": ["vertexSrc", "fragmentSrc", "mask"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "extractUniformsFromSrc"}, "vars": {"vertUniforms": "extractUniformsFromSrc~vertUniforms", "fragUniforms": "extractUniformsFromSrc~fragUniforms"}, "columnno": 15, "filename": "extractUniformsFromSrc.js", "range": [59, 319], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "extractUniformsFromSrc", "scope": "global"}, {"comment": "", "kind": "function", "name": "extractUniformsFromString", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "type": "FunctionDeclaration", "id": "astnode100000034", "name": "extractUniformsFromString"}, "vars": {"uniforms": "extractUniformsFromString~uniforms", "maskRegex": "extractUniformsFromString~maskRegex", "name": "extractUniformsFromString~name", "splitLine": "extractUniformsFromString~splitLine", "i": "extractUniformsFromString~i", "lines": "extractUniformsFromString~lines", "uniforms[undefined]": "extractUniformsFromString~uniforms.undefined]", "nameSplit": "extractUniformsFromString~nameSplit", "type": "extractUniformsFromString~type", "line": "extractUniformsFromString~line", "size": "extractUniformsFromString~size"}, "columnno": 0, "filename": "extractUniformsFromSrc.js", "range": [321, 1502], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "extractUniformsFromString", "scope": "global"}, {"comment": "/**\n * @method defaultValue\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */", "kind": "function", "name": "defaultValue", "memberof": "PIXI.glCore.shader", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils", "columnno": 0, "lineno": 1, "filename": "defaultValue.js"}, "params": [{"type": {"names": ["String"]}, "description": "Type of value", "name": "type"}, {"type": {"names": ["Number"]}, "name": "size"}], "longname": "PIXI.glCore.shader.defaultValue", "scope": "static"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["type", "size"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "defaultValue.js", "range": [126, 1394], "lineno": 7, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "defaultValue", "undocumented": true, "meta": {"code": {"paramnames": ["type", "size"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "defaultValue"}, "columnno": 15, "filename": "defaultValue.js", "range": [141, 1394], "lineno": 7, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "defaultValue", "scope": "global"}, {"comment": "", "kind": "function", "name": "booleanArray", "undocumented": true, "meta": {"code": {"paramnames": ["size"], "type": "FunctionDeclaration", "id": "astnode100000147", "name": "booleanArray"}, "vars": {"i": "booleanArray~i", "array": "booleanArray~array", "array[undefined]": "booleanArray~array.undefined]"}, "columnno": 0, "filename": "defaultValue.js", "range": [1396, 1563], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "booleanArray", "scope": "global"}, {"comment": "/**\n * returns a little webGL context to use for program inspection.\n *\n * @static\n * @private\n * @returns {webGL-context} a gl context to test with\n */", "kind": "function", "description": "returns a little webGL context to use for program inspection.", "memberof": "module", "access": "private", "returns": [{"type": {"names": ["webGL-context"]}, "description": "a gl context to test with"}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000014", "name": "module.exports"}, "columnno": 0, "filename": "getTestContext.js", "range": [257, 1077], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "getTestContext", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000015", "name": "getTestContext"}, "vars": {"canvas": "getTestContext~canvas", "gl": "getTestContext~gl", "context": "getTestContext~context"}, "columnno": 15, "filename": "getTestContext.js", "range": [272, 1077], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "getTestContext", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["maxIfs", "gl"], "type": "FunctionDeclaration", "id": "astnode100000016", "name": "module.exports"}, "columnno": 0, "filename": "checkMaxIfStatementsInShader.js", "range": [178, 892], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "checkMaxIfStatementsInShader", "undocumented": true, "meta": {"code": {"paramnames": ["maxIfs", "gl"], "type": "FunctionDeclaration", "id": "astnode100000017", "name": "checkMaxIfStatementsInShader"}, "vars": {"fragmentSrc": "checkMaxIfStatementsInShader~fragmentSrc", "maxIfs": "checkMaxIfStatementsInShader~maxIfs", "shader": "checkMaxIfStatementsInShader~shader"}, "columnno": 15, "filename": "checkMaxIfStatementsInShader.js", "range": [193, 892], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "checkMaxIfStatementsInShader", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateIfTestSrc", "undocumented": true, "meta": {"code": {"paramnames": ["maxIfs"], "type": "FunctionDeclaration", "id": "astnode100000091", "name": "generateIfTestSrc"}, "vars": {"i": "generateIfTestSrc~i", "src": "generateIfTestSrc~src"}, "columnno": 0, "filename": "checkMaxIfStatementsInShader.js", "range": [894, 1178], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "generateIfTestSrc", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "type"], "type": "FunctionDeclaration", "id": "astnode100000046", "name": "module.exports"}, "columnno": 0, "filename": "mapType.js", "range": [543, 891], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "mapType", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "type"], "type": "FunctionDeclaration", "id": "astnode100000047", "name": "mapType"}, "vars": {"GL_TABLE": "mapType~GL_TABLE", "typeNames": "mapType~typeNames", "GL_TABLE[undefined]": "mapType~GL_TABLE[undefined]", "i": "mapType~i", "tn": "mapType~tn"}, "columnno": 15, "filename": "mapType.js", "range": [558, 891], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "mapType", "scope": "global"}, {"comment": "/**\n * @method mapSize\n * @memberof PIXI.glCore.shader\n * @param type {String}\n * @return {Number}\n */", "kind": "function", "name": "mapSize", "memberof": "PIXI.glCore.shader", "returns": [{"type": {"names": ["Number"]}}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils", "columnno": 0, "lineno": 24, "filename": "mapSize.js"}, "params": [{"type": {"names": ["String"]}, "name": "type"}], "longname": "PIXI.glCore.shader.mapSize", "scope": "static"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["type"], "type": "FunctionDeclaration", "id": "astnode100000038", "name": "module.exports"}, "columnno": 0, "filename": "mapSize.js", "range": [409, 481], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "mapSize", "undocumented": true, "meta": {"code": {"paramnames": ["type"], "type": "FunctionDeclaration", "id": "astnode100000039", "name": "mapSize"}, "columnno": 15, "filename": "mapSize.js", "range": [424, 481], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "mapSize", "scope": "global"}, {"comment": "/**\n * @method compileProgram\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\n * @return {WebGLProgram} the shader program\n */", "kind": "function", "name": "compileProgram", "memberof": "PIXI.glCore.shader", "returns": [{"type": {"names": ["WebGLProgram"]}, "description": "the shader program"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils", "columnno": 0, "lineno": 1, "filename": "compileProgram.js"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "The current WebGL context {WebGLProgram}", "name": "gl"}, {"type": {"names": ["string", "Array.<string>"]}, "description": "The vertex shader source as an array of strings.", "name": "vertexSrc"}, {"type": {"names": ["string", "Array.<string>"]}, "description": "The fragment shader source as an array of strings.", "name": "fragmentSrc"}, {"type": {"names": ["Object"]}, "description": "An attribute location map that lets you manually set the attribute locations", "name": "attributeLocations"}], "longname": "PIXI.glCore.shader.compileProgram", "scope": "static"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "vertexSrc", "fragmentSrc", "attributeLocations"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "compileProgram.js", "range": [482, 1895], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "compileProgram", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "vertexSrc", "fragmentSrc", "attributeLocations"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "compileProgram"}, "vars": {"i": "compileProgram~i", "glFragShader": "compileProgram~glFragShader", "program": "compileProgram~program", "glVertShader": "compileProgram~glVertShader"}, "columnno": 15, "filename": "compileProgram.js", "range": [497, 1895], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "compileProgram", "scope": "global"}, {"comment": "/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */", "kind": "function", "name": "compileShader", "access": "private", "returns": [{"type": {"names": ["WebGLShader"]}, "description": "the shader"}], "meta": {"code": {"paramnames": ["gl", "type", "src"], "type": "FunctionDeclaration", "id": "astnode100000161", "name": "compileShader"}, "vars": {"shader": "compileShader~shader"}, "columnno": 0, "filename": "compileProgram.js", "range": [2199, 2540], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "The current WebGL context {WebGLProgram}", "name": "gl"}, {"type": {"names": ["Number"]}, "description": "the type, can be either VERTEX_SHADER or FRAGMENT_SHADER", "name": "type"}, {"type": {"names": ["string", "Array.<string>"]}, "description": "The vertex shader source as an array of strings.", "name": "vertexSrc"}], "longname": "compileShader", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["group", "uniformData"], "type": "FunctionDeclaration", "id": "astnode100000088", "name": "module.exports"}, "columnno": 0, "filename": "generateUniformsSync.js", "range": [2300, 6898], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "generateUniformsSync", "undocumented": true, "meta": {"code": {"paramnames": ["group", "uniformData"], "type": "FunctionDeclaration", "id": "astnode100000089", "name": "generateUniformsSync"}, "vars": {"template": "generateUniformsSync~template", "i": "generateUniformsSync~i", "templateType": "generateUniformsSync~templateType", "textureCount": "generateUniformsSync~textureCount", "func": "generateUniformsSync~func", "data": "generateUniformsSync~data"}, "columnno": 15, "filename": "generateUniformsSync.js", "range": [2315, 6898], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "generateUniformsSync", "scope": "global"}, {"comment": "/**\n * Sets the float precision on the shader. If the precision is already present this function will do nothing\n * @param {string} src       the shader source\n * @param {string} precision The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n *\n * @return {string} modified shader source\n */", "kind": "function", "description": "Sets the float precision on the shader. If the precision is already present this function will do nothing", "memberof": "module", "returns": [{"type": {"names": ["string"]}, "description": "modified shader source"}], "meta": {"code": {"paramnames": ["src", "precision"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "setPrecision.js", "range": [316, 556], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [{"type": {"names": ["string"]}, "description": "the shader source", "name": "src"}, {"type": {"names": ["string"]}, "description": "The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.", "name": "precision"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "setPrecision", "undocumented": true, "meta": {"code": {"paramnames": ["src", "precision"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "setPrecision"}, "vars": {"src": "setPrecision~src"}, "columnno": 15, "filename": "setPrecision.js", "range": [331, 556], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/shader/utils"}, "params": [], "longname": "setPrecision", "scope": "global"}, {"comment": "", "kind": "function", "name": "for2d", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000308", "name": "for2d"}, "vars": {"": null}, "columnno": 4, "filename": "State.js", "range": [3585, 3731], "lineno": 163, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [], "longname": "for2d", "scope": "global"}, {"comment": "", "kind": "function", "name": "contextChange", "undocumented": true, "meta": {"code": {"paramnames": ["gl"], "type": "MethodDefinition", "id": "astnode100000175", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [2368, 3021], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [], "longname": "contextChange", "scope": "global"}, {"comment": "/**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */", "kind": "function", "description": "Sets the current state", "meta": {"code": {"paramnames": ["state"], "type": "MethodDefinition", "id": "astnode100000259", "name": "setState"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [3124, 4095], "lineno": 140, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["*"]}, "description": "The state to set.", "name": "state"}], "longname": "setState", "scope": "global", "name": "setState"}, {"comment": "/**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */", "kind": "function", "description": "Enables or disabled blending.", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000363", "name": "setBlend"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [4224, 4375], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["boolean"]}, "description": "Turn on or off webgl blending.", "name": "value"}], "longname": "setBlend", "scope": "global", "name": "setBlend"}, {"comment": "/**\n     * Enables or disable polygon offset fill\n     *\n     * @param {boolean} value - Turn on or off webgl polygon offset testing.\n     */", "kind": "function", "description": "Enables or disable polygon offset fill", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000392", "name": "setOffset"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [4527, 4631], "lineno": 192, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["boolean"]}, "description": "Turn on or off webgl polygon offset testing.", "name": "value"}], "longname": "setOffset", "scope": "global", "name": "setOffset"}, {"comment": "/**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */", "kind": "function", "description": "Sets whether to enable or disable depth test.", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000412", "name": "setDepthTest"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [4781, 4879], "lineno": 202, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["boolean"]}, "description": "Turn on or off webgl depth testing.", "name": "value"}], "longname": "setDepthTest", "scope": "global", "name": "setDepthTest"}, {"comment": "/**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */", "kind": "function", "description": "Sets whether to enable or disable cull face.", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000432", "name": "setCullFace"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [5024, 5120], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["boolean"]}, "description": "Turn on or off webgl cull face.", "name": "value"}], "longname": "setCullFace", "scope": "global", "name": "setCullFace"}, {"comment": "/**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */", "kind": "function", "description": "Sets the gl front face.", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000452", "name": "setFrontFace"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [5261, 5350], "lineno": 222, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["boolean"]}, "description": "true is clockwise and false is counter-clockwise", "name": "value"}], "longname": "setFrontFace", "scope": "global", "name": "setFrontFace"}, {"comment": "/**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */", "kind": "function", "description": "Sets the blend mode.", "meta": {"code": {"paramnames": ["value"], "type": "MethodDefinition", "id": "astnode100000472", "name": "setBlendMode"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [5464, 5861], "lineno": 232, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["number"]}, "description": "The blend mode to set to.", "name": "value"}], "longname": "setBlendMode", "scope": "global", "name": "setBlendMode"}, {"comment": "/**\n     * Sets the polygon offset.\n     *\n     * @param {number} value - the polygon offset\n     * @param {number} scale - the polygon offset scale\n     */", "kind": "function", "description": "Sets the polygon offset.", "meta": {"code": {"paramnames": ["value", "scale"], "type": "MethodDefinition", "id": "astnode100000539", "name": "setPolygonOffset"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [6028, 6115], "lineno": 259, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["number"]}, "description": "the polygon offset", "name": "value"}, {"type": {"names": ["number"]}, "description": "the polygon offset scale", "name": "scale"}], "longname": "setPolygonOffset", "scope": "global", "name": "setPolygonOffset"}, {"comment": "/**\n     * Disables all the vaos in use\n     *\n     */", "kind": "function", "description": "Disables all the vaos in use", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000554", "name": "resetAttributes"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [6180, 6692], "lineno": 268, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [], "longname": "resetAttributes", "scope": "global", "name": "resetAttributes"}, {"comment": "/**\n     * Resets all the logic and disables the vaos\n     */", "kind": "function", "description": "Resets all the logic and disables the vaos", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000633", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [6776, 7183], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * checks to see which updates should be checked based on which settings have been activated.\n     * For example, if blend is enabled then we should check the blend modes each time the state is changed\n     * or if polygon fill is activated then we need to check if the polygon offset changes.\n     * The idea is that we only check what we have too.\n     *\n     * @param {Function} func  the checking function to add or remove\n     * @param {boolean} value  should the check function be added or removed.\n     */", "kind": "function", "description": "checks to see which updates should be checked based on which settings have been activated.\nFor example, if blend is enabled then we should check the blend modes each time the state is changed\nor if polygon fill is activated then we need to check if the polygon offset changes.\nThe idea is that we only check what we have too.", "meta": {"code": {"paramnames": ["func", "value"], "type": "MethodDefinition", "id": "astnode100000674", "name": "updateCheck"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [7714, 7994], "lineno": 319, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["function"]}, "description": "the checking function to add or remove", "name": "func"}, {"type": {"names": ["boolean"]}, "description": "should the check function be added or removed.", "name": "value"}], "longname": "updateCheck", "scope": "global", "name": "updateCheck"}, {"comment": "/**\n     * A private little wrapper function that we call to check the blend mode.\n     *\n     * @static\n     * @private\n     * @param {PIXI.StateSystem} System  the System to perform the state check on\n     * @param {PIXI.State} state  the state that the blendMode will pulled from\n     */", "kind": "function", "description": "A private little wrapper function that we call to check the blend mode.", "access": "private", "meta": {"code": {"paramnames": ["system", "state"], "type": "MethodDefinition", "id": "astnode100000724", "name": "checkBlendMode"}, "vars": {"": null}, "columnno": 4, "filename": "StateSystem.js", "range": [8295, 8389], "lineno": 341, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state"}, "params": [{"type": {"names": ["PIXI.StateSystem"]}, "description": "the System to perform the state check on", "name": "System"}, {"type": {"names": ["PIXI.State"]}, "description": "the state that the blendMode will pulled from", "name": "state"}], "longname": "checkBlendMode", "scope": "global", "name": "checkBlendMode"}, {"comment": "/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {number[][]} [array=[]] - The array to output into.\n * @return {number[][]} Mapped modes.\n */", "kind": "function", "description": "Maps gl blend combinations to WebGL.", "memberof": "PIXI", "access": "private", "returns": [{"type": {"names": ["Array.<Array.<number>>"]}, "description": "Mapped modes."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state/utils", "columnno": 0, "lineno": 3, "filename": "mapWebGLBlendModesToPixi.js"}, "params": [{"type": {"names": ["WebGLRenderingContext"]}, "description": "The rendering context.", "name": "gl"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array.<Array.<number>>"]}, "description": "The array to output into.", "name": "array"}], "longname": "PIXI.mapWebGLBlendModesToPixi", "scope": "static", "name": "mapWebGLBlendModesToPixi"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "array"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "mapWebGLBlendModesToPixi.js", "range": [329, 2362], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "mapWebGLBlendModesToPixi", "undocumented": true, "meta": {"code": {"paramnames": ["gl", "array"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "mapWebGLBlendModesToPixi"}, "vars": {"array[undefined]": null}, "columnno": 15, "filename": "mapWebGLBlendModesToPixi.js", "range": [344, 2362], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/state/utils"}, "params": [], "longname": "mapWebGLBlendModesToPixi", "scope": "global"}, {"comment": "/**\n     * Updates this texture on the gpu.\n     *\n     */", "kind": "function", "description": "Updates this texture on the gpu.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000264", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [6308, 6363], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */", "kind": "function", "description": "Called when the base texture is updated", "access": "private", "meta": {"code": {"paramnames": ["baseTexture"], "type": "MethodDefinition", "id": "astnode100000275", "name": "onBaseTextureUpdated"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [6520, 7063], "lineno": 202, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "The base texture.", "name": "baseTexture"}], "longname": "onBaseTextureUpdated", "scope": "global", "name": "onBaseTextureUpdated"}, {"comment": "/**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */", "kind": "function", "description": "Destroys this texture", "meta": {"code": {"paramnames": ["destroyBase"], "type": "MethodDefinition", "id": "astnode100000321", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [7209, 8062], "lineno": 226, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to destroy the base texture as well", "name": "destroyBase"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */", "kind": "function", "description": "Creates a new texture object that acts the same as this one.", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "The new texture"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000420", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [8205, 8337], "lineno": 263, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     * Call it after changing the frame\n     */", "kind": "function", "description": "Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\nCall it after changing the frame", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000445", "name": "updateUvs"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [8501, 8720], "lineno": 272, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "updateUvs", "scope": "global", "name": "updateUvs"}, {"comment": "/**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|PIXI.BaseTexture}\n     *        source - Source to create texture from\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.Texture} The newly created texture\n     */", "kind": "function", "description": "Helper function that creates a new Texture based on the source you provide.\nThe source can be - frame id, image url, video url, canvas element, video element, base texture", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "The newly created texture"}], "meta": {"code": {"paramnames": ["source", "options"], "type": "MethodDefinition", "id": "astnode100000484", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [9247, 10121], "lineno": 294, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["number", "string", "HTMLImageElement", "HTMLCanvasElement", "HTMLVideoElement", "PIXI.BaseTexture"]}, "description": "Source to create texture from", "name": "source"}, {"optional": true, "type": {"names": ["object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     * Create a new Texture with a BufferResource from a Float32Array.\n     * RGBA values are floats from 0 to 1.\n     * @static\n     * @param {Float32Array|UintArray} buffer The optional array to use, if no data\n     *        is provided, a new Float32Array is created.\n     * @param {number} width - Width of the resource\n     * @param {number} height - Height of the resource\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.Texture} The resulting new BaseTexture\n     */", "kind": "function", "description": "Create a new Texture with a BufferResource from a Float32Array.\nRGBA values are floats from 0 to 1.", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "The resulting new BaseTexture"}], "meta": {"code": {"paramnames": ["buffer", "width", "height", "options"], "type": "MethodDefinition", "id": "astnode100000588", "name": "fromBuffer"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [10671, 10816], "lineno": 343, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["Float32Array", "UintArray"]}, "description": "The optional array to use, if no data\n       is provided, a new Float32Array is created.", "name": "buffer"}, {"type": {"names": ["number"]}, "description": "Width of the resource", "name": "width"}, {"type": {"names": ["number"]}, "description": "Height of the resource", "name": "height"}, {"optional": true, "type": {"names": ["object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "fromBuffer", "scope": "global", "name": "fromBuffer"}, {"comment": "/**\n     * Create a texture from a source and add to the cache.\n     *\n     * @static\n     * @param {HTMLImageElement|HTMLCanvasElement} source - The input source.\n     * @param {String} imageUrl - File name of texture, for cache and resolving resolution.\n     * @param {String} [name] - Human readable name for the texture cache. If no name is\n     *        specified, only `imageUrl` will be used as the cache ID.\n     * @return {PIXI.Texture} Output texture\n     */", "kind": "function", "description": "Create a texture from a source and add to the cache.", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "Output texture"}], "meta": {"code": {"paramnames": ["source", "imageUrl", "name"], "type": "MethodDefinition", "id": "astnode100000607", "name": "fromLoader"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [11295, 12324], "lineno": 358, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["HTMLImageElement", "HTMLCanvasElement"]}, "description": "The input source.", "name": "source"}, {"type": {"names": ["String"]}, "description": "File name of texture, for cache and resolving resolution.", "name": "imageUrl"}, {"optional": true, "type": {"names": ["String"]}, "description": "Human readable name for the texture cache. If no name is\n       specified, only `imageUrl` will be used as the cache ID.", "name": "name"}], "longname": "fromLoader", "scope": "global", "name": "fromLoader"}, {"comment": "/**\n     * Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */", "kind": "function", "description": "Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.", "meta": {"code": {"paramnames": ["texture", "id"], "type": "MethodDefinition", "id": "astnode100000694", "name": "addToCache"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [12617, 13097], "lineno": 400, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.Texture"]}, "description": "The Texture to add to the cache.", "name": "texture"}, {"type": {"names": ["string"]}, "description": "The id that the Texture will be stored against.", "name": "id"}], "longname": "addToCache", "scope": "global", "name": "addToCache"}, {"comment": "/**\n     * Remove a Texture from the global TextureCache.\n     *\n     * @static\n     * @param {string|PIXI.Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {PIXI.Texture|null} The Texture that was removed\n     */", "kind": "function", "description": "Remove a Texture from the global TextureCache.", "returns": [{"type": {"names": ["PIXI.Texture", "null"]}, "description": "The Texture that was removed"}], "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000743", "name": "removeFromCache"}, "vars": {"": null}, "columnno": 4, "filename": "Texture.js", "range": [13365, 14456], "lineno": 426, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["string", "PIXI.Texture"]}, "description": "id of a Texture to be removed, or a Texture instance itself", "name": "texture"}], "longname": "removeFromCache", "scope": "global", "name": "removeFromCache"}, {"comment": "", "kind": "function", "name": "createWhiteTexture", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001065", "name": "createWhiteTexture"}, "vars": {"context.fillStyle": "createWhiteTexture~context.fillStyle", "canvas": "createWhiteTexture~canvas", "canvas.height": "createWhiteTexture~canvas.height", "canvas.width": "createWhiteTexture~canvas.width", "context": "createWhiteTexture~context"}, "columnno": 0, "filename": "Texture.js", "range": [16601, 16921], "lineno": 553, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "createWhiteTexture", "scope": "global"}, {"comment": "", "kind": "function", "name": "removeAllHandlers", "undocumented": true, "meta": {"code": {"paramnames": ["tex"], "type": "FunctionDeclaration", "id": "astnode100001119", "name": "removeAllHandlers"}, "vars": {"": null, "tex.once": "tex.once", "tex.destroy": "tex.destroy", "tex.emit": "tex.emit", "tex.on": "tex.on"}, "columnno": 0, "filename": "Texture.js", "range": [16923, 17176], "lineno": 568, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "removeAllHandlers", "scope": "global"}, {"comment": "", "kind": "function", "name": "destroy", "memberof": "tex", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001124", "value": "_emptyDestroy", "name": "tex.destroy"}, "columnno": 4, "filename": "Texture.js", "range": [16961, 17015], "lineno": 570, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "longname": "tex.destroy", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "memberof": "tex", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001132", "value": "_emptyOn", "name": "tex.on"}, "columnno": 4, "filename": "Texture.js", "range": [17021, 17065], "lineno": 571, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "longname": "tex.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "tex", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001140", "value": "_emptyOnce", "name": "tex.once"}, "columnno": 4, "filename": "Texture.js", "range": [17071, 17119], "lineno": 572, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "longname": "tex.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "emit", "memberof": "tex", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001148", "value": "_emptyEmit", "name": "tex.emit"}, "columnno": 4, "filename": "Texture.js", "range": [17125, 17173], "lineno": 573, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "longname": "tex.emit", "scope": "static"}, {"comment": "/**\n     * Generate a new CubeTexture.\n     * @static\n     * @param {string[]|PIXI.resources.Resource[]} resources - Collection of 6 URLs or resources\n     * @param {object} [options] - Optional options passed to the resources being loaded.\n     *        See {@PIXI.resources.autoDetectResource autoDetectResource} for more info\n     *        on the options available to each resource.\n     */", "kind": "function", "description": "Generate a new CubeTexture.", "meta": {"code": {"paramnames": ["resources", "options"], "type": "MethodDefinition", "id": "astnode100000015", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "CubeTexture.js", "range": [668, 781], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["Array.<string>", "Array.<PIXI.resources.Resource>"]}, "description": "Collection of 6 URLs or resources", "name": "resources"}, {"optional": true, "type": {"names": ["object"]}, "description": "Optional options passed to the resources being loaded.\n       See {@PIXI.resources.autoDetectResource autoDetectResource} for more info\n       on the options available to each resource.", "name": "options"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */", "kind": "function", "description": "Checks to see when the last time a texture was used\nif the texture has not been used for a specified amount of time it will be removed from the GPU", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000064", "name": "postrender"}, "vars": {"": null}, "columnno": 4, "filename": "TextureGCSystem.js", "range": [1537, 1824], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "postrender", "scope": "global", "name": "postrender"}, {"comment": "/**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */", "kind": "function", "description": "Checks to see when the last time a texture was used\nif the texture has not been used for a specified amount of time it will be removed from the GPU", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000108", "name": "run"}, "vars": {"": null}, "columnno": 4, "filename": "TextureGCSystem.js", "range": [2008, 2934], "lineno": 85, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "run", "scope": "global", "name": "run"}, {"comment": "/**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */", "kind": "function", "description": "Removes all the textures within the specified displayObject and its children from the GPU", "meta": {"code": {"paramnames": ["displayObject"], "type": "MethodDefinition", "id": "astnode100000226", "name": "unload"}, "vars": {"": null}, "columnno": 4, "filename": "TextureGCSystem.js", "range": [3158, 3583], "lineno": 125, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "the displayObject to remove the textures from.", "name": "displayObject"}], "longname": "unload", "scope": "global", "name": "unload"}, {"comment": "/**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.GroupD8}\n     */", "kind": "function", "description": "Sets the texture Uvs based on the given frame information.", "access": "private", "meta": {"code": {"paramnames": ["frame", "baseFrame", "rotate"], "type": "MethodDefinition", "id": "astnode100000070", "name": "set"}, "vars": {"": null}, "columnno": 4, "filename": "TextureUvs.js", "range": [770, 2575], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The frame of the texture", "name": "frame"}, {"type": {"names": ["PIXI.Rectangle"]}, "description": "The base frame of the texture", "name": "baseFrame"}, {"type": {"names": ["number"]}, "description": "Rotation of frame, see {@link PIXI.GroupD8}", "name": "rotate"}], "longname": "set", "scope": "global", "name": "set"}, {"comment": "/**\n     * Multiplies uvs array to transform\n     * @param {Float32Array} uvs mesh uvs\n     * @param {Float32Array} [out=uvs] output\n     * @returns {Float32Array} output\n     */", "kind": "function", "description": "Multiplies uvs array to transform", "returns": [{"type": {"names": ["Float32Array"]}, "description": "output"}], "meta": {"code": {"paramnames": ["uvs", "out"], "type": "MethodDefinition", "id": "astnode100000107", "name": "multiplyUvs"}, "vars": {"": null}, "columnno": 4, "filename": "TextureMatrix.js", "range": [2617, 3033], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["Float32Array"]}, "description": "mesh uvs", "name": "uvs"}, {"optional": true, "defaultvalue": "uvs", "type": {"names": ["Float32Array"]}, "description": "output", "name": "out"}], "longname": "multiplyUvs", "scope": "global", "name": "multiplyUvs"}, {"comment": "/**\n     * updates matrices if texture was changed\n     * @param {boolean} forceUpdate if true, matrices will be updated any case\n     * @returns {boolean} whether or not it was updated\n     */", "kind": "function", "description": "updates matrices if texture was changed", "returns": [{"type": {"names": ["boolean"]}, "description": "whether or not it was updated"}], "meta": {"code": {"paramnames": ["forceUpdate"], "type": "MethodDefinition", "id": "astnode100000200", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "TextureMatrix.js", "range": [3237, 4765], "lineno": 122, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["boolean"]}, "description": "if true, matrices will be updated any case", "name": "forceUpdate"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Changes style options of BaseTexture\n     *\n     * @param {object} options\n     * @param {PIXI.SCALE_MODES} [scaleMode] - pixi scalemode\n     * @param {boolean} [mipmap] - enable mipmaps\n     * @returns {BaseTexture} this\n     */", "kind": "function", "description": "Changes style options of BaseTexture", "returns": [{"type": {"names": ["BaseTexture"]}, "description": "this"}], "meta": {"code": {"paramnames": ["scaleMode", "mipmap"], "type": "MethodDefinition", "id": "astnode100000335", "name": "setStyle"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [8826, 9276], "lineno": 309, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["object"]}, "name": "options"}, {"optional": true, "type": {"names": ["PIXI.SCALE_MODES"]}, "description": "pixi scalemode", "name": "scaleMode"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "enable mipmaps", "name": "mipmap"}], "longname": "setStyle", "scope": "global", "name": "setStyle"}, {"comment": "/**\n     * Changes w/h/resolution. Texture becomes valid if width and height are greater than zero.\n     *\n     * @param {number} width Visual width\n     * @param {number} height Visual height\n     * @param {number} [resolution] Optionally set resolution\n     * @returns {BaseTexture} this\n     */", "kind": "function", "description": "Changes w/h/resolution. Texture becomes valid if width and height are greater than zero.", "returns": [{"type": {"names": ["BaseTexture"]}, "description": "this"}], "meta": {"code": {"paramnames": ["width", "height", "resolution"], "type": "MethodDefinition", "id": "astnode100000396", "name": "setSize"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [9584, 9818], "lineno": 341, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["number"]}, "description": "Visual width", "name": "width"}, {"type": {"names": ["number"]}, "description": "Visual height", "name": "height"}, {"optional": true, "type": {"names": ["number"]}, "description": "Optionally set resolution", "name": "resolution"}], "longname": "setSize", "scope": "global", "name": "setSize"}, {"comment": "/**\n     * Sets real size of baseTexture, preserves current resolution.\n     *\n     * @param {number} realWidth Full rendered width\n     * @param {number} realHeight Full rendered height\n     * @param {number} [resolution] Optionally set resolution\n     * @returns {BaseTexture} this\n     */", "kind": "function", "description": "Sets real size of baseTexture, preserves current resolution.", "returns": [{"type": {"names": ["BaseTexture"]}, "description": "this"}], "meta": {"code": {"paramnames": ["realWidth", "realHeight", "resolution"], "type": "MethodDefinition", "id": "astnode100000437", "name": "setRealSize"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [10120, 10410], "lineno": 360, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["number"]}, "description": "Full rendered width", "name": "realWidth"}, {"type": {"names": ["number"]}, "description": "Full rendered height", "name": "realHeight"}, {"optional": true, "type": {"names": ["number"]}, "description": "Optionally set resolution", "name": "resolution"}], "longname": "setRealSize", "scope": "global", "name": "setRealSize"}, {"comment": "/**\n     * Refresh check for isPowerOfTwo texture based on size\n     *\n     * @private\n     */", "kind": "function", "description": "Refresh check for isPowerOfTwo texture based on size", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000486", "name": "_refreshPOT"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [10515, 10619], "lineno": 376, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "_refreshPOT", "scope": "global", "name": "_refreshPOT"}, {"comment": "/**\n     * Changes resolution\n     *\n     * @param {number} [resolution] res\n     * @returns {BaseTexture} this\n     */", "kind": "function", "description": "Changes resolution", "returns": [{"type": {"names": ["BaseTexture"]}, "description": "this"}], "meta": {"code": {"paramnames": ["resolution"], "type": "MethodDefinition", "id": "astnode100000506", "name": "setResolution"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [10749, 11223], "lineno": 387, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"optional": true, "type": {"names": ["number"]}, "description": "res", "name": "resolution"}], "longname": "setResolution", "scope": "global", "name": "setResolution"}, {"comment": "/**\n     * Sets the resource if it wasn't set. Throws error if resource already present\n     *\n     * @param {PIXI.resources.Resource} resource - that is managing this BaseTexture\n     * @returns {BaseTexture} this\n     */", "kind": "function", "description": "Sets the resource if it wasn't set. Throws error if resource already present", "returns": [{"type": {"names": ["BaseTexture"]}, "description": "this"}], "meta": {"code": {"paramnames": ["resource"], "type": "MethodDefinition", "id": "astnode100000572", "name": "setResource"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [11456, 11771], "lineno": 416, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.resources.Resource"]}, "description": "that is managing this BaseTexture", "name": "resource"}], "longname": "setResource", "scope": "global", "name": "setResource"}, {"comment": "/**\n     * Invalidates the object. Texture becomes valid if width and height are greater than zero.\n     */", "kind": "function", "description": "Invalidates the object. Texture becomes valid if width and height are greater than zero.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000609", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [11889, 12287], "lineno": 438, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Destroys this base texture.\n     * The method stops if resource doesn't want this texture to be destroyed.\n     * Removes texture from all caches.\n     */", "kind": "function", "description": "Destroys this base texture.\nThe method stops if resource doesn't want this texture to be destroyed.\nRemoves texture from all caches.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000670", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [12463, 13180], "lineno": 462, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     * @fires PIXI.BaseTexture#dispose\n     */", "kind": "function", "description": "Frees the texture from WebGL memory without destroying this texture object.\nThis means you can still use the texture later which will upload it to GPU\nmemory again.", "fires": ["PIXI.BaseTexture#event:dispose"], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000755", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [13434, 13491], "lineno": 500, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "dispose", "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Helper function that creates a base texture based on the source you provide.\n     * The source can be - image url, image element, canvas element. If the\n     * source is an image url or an image element and not in the base texture\n     * cache, it will be created and loaded.\n     *\n     * @static\n     * @param {string|HTMLImageElement|HTMLCanvasElement|SVGElement|HTMLVideoElement} source - The\n     *        source to create base texture from.\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.BaseTexture} The new base texture.\n     */", "kind": "function", "description": "Helper function that creates a base texture based on the source you provide.\nThe source can be - image url, image element, canvas element. If the\nsource is an image url or an image element and not in the base texture\ncache, it will be created and loaded.", "returns": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "The new base texture."}], "meta": {"code": {"paramnames": ["source", "options"], "type": "MethodDefinition", "id": "astnode100000766", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [14112, 14747], "lineno": 517, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["string", "HTMLImageElement", "HTMLCanvasElement", "SVGElement", "HTMLVideoElement"]}, "description": "The\n       source to create base texture from.", "name": "source"}, {"optional": true, "type": {"names": ["object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     * Create a new BaseTexture with a BufferResource from a Float32Array.\n     * RGBA values are floats from 0 to 1.\n     * @static\n     * @param {Float32Array|UintArray} buffer The optional array to use, if no data\n     *        is provided, a new Float32Array is created.\n     * @param {number} width - Width of the resource\n     * @param {number} height - Height of the resource\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.BaseTexture} The resulting new BaseTexture\n     */", "kind": "function", "description": "Create a new BaseTexture with a BufferResource from a Float32Array.\nRGBA values are floats from 0 to 1.", "returns": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "The resulting new BaseTexture"}], "meta": {"code": {"paramnames": ["buffer", "width", "height", "options"], "type": "MethodDefinition", "id": "astnode100000841", "name": "fromBuffer"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [15305, 15709], "lineno": 558, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["Float32Array", "UintArray"]}, "description": "The optional array to use, if no data\n       is provided, a new Float32Array is created.", "name": "buffer"}, {"type": {"names": ["number"]}, "description": "Width of the resource", "name": "width"}, {"type": {"names": ["number"]}, "description": "Height of the resource", "name": "height"}, {"optional": true, "type": {"names": ["object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "fromBuffer", "scope": "global", "name": "fromBuffer"}, {"comment": "/**\n     * Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.BaseTexture} baseTexture - The BaseTexture to add to the cache.\n     * @param {string} id - The id that the BaseTexture will be stored against.\n     */", "kind": "function", "description": "Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object.", "meta": {"code": {"paramnames": ["baseTexture", "id"], "type": "MethodDefinition", "id": "astnode100000903", "name": "addToCache"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [16026, 16534], "lineno": 575, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "The BaseTexture to add to the cache.", "name": "baseTexture"}, {"type": {"names": ["string"]}, "description": "The id that the BaseTexture will be stored against.", "name": "id"}], "longname": "addToCache", "scope": "global", "name": "addToCache"}, {"comment": "/**\n     * Remove a BaseTexture from the global BaseTextureCache.\n     *\n     * @static\n     * @param {string|PIXI.BaseTexture} baseTexture - id of a BaseTexture to be removed, or a BaseTexture instance itself.\n     * @return {PIXI.BaseTexture|null} The BaseTexture that was removed.\n     */", "kind": "function", "description": "Remove a BaseTexture from the global BaseTextureCache.", "returns": [{"type": {"names": ["PIXI.BaseTexture", "null"]}, "description": "The BaseTexture that was removed."}], "meta": {"code": {"paramnames": ["baseTexture"], "type": "MethodDefinition", "id": "astnode100000952", "name": "removeFromCache"}, "vars": {"": null}, "columnno": 4, "filename": "BaseTexture.js", "range": [16836, 17784], "lineno": 601, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["string", "PIXI.BaseTexture"]}, "description": "id of a BaseTexture to be removed, or a BaseTexture instance itself.", "name": "baseTexture"}], "longname": "removeFromCache", "scope": "global", "name": "removeFromCache"}, {"comment": "/**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */", "kind": "function", "description": "Sets up the renderer context and necessary buffers.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000051", "name": "contextChange"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [1016, 2470], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [], "longname": "contextChange", "scope": "global", "name": "contextChange"}, {"comment": "/**\n     * Bind a texture to a specific location\n     *\n     * @param {PIXI.Texture|PIXI.BaseTexture} texture - Texture to bind\n     * @param {number} [location=0] - Location to bind at\n     */", "kind": "function", "description": "Bind a texture to a specific location", "meta": {"code": {"paramnames": ["texture", "location"], "type": "MethodDefinition", "id": "astnode100000303", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [2674, 3965], "lineno": 97, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.Texture", "PIXI.BaseTexture"]}, "description": "Texture to bind", "name": "texture"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "Location to bind at", "name": "location"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Unbind a texture\n     * @param {PIXI.Texture|PIXI.BaseTexture} texture - Texture to bind\n     */", "kind": "function", "description": "Unbind a texture", "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000469", "name": "unbind"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [4083, 4622], "lineno": 146, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.Texture", "PIXI.BaseTexture"]}, "description": "Texture to bind", "name": "texture"}], "longname": "unbind", "scope": "global", "name": "unbind"}, {"comment": "/**\n     * Initialize a texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to initialize\n     */", "kind": "function", "description": "Initialize a texture", "access": "private", "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000552", "name": "initTexture"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [4760, 5114], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Texture to initialize", "name": "texture"}], "longname": "initTexture", "scope": "global", "name": "initTexture"}, {"comment": "/**\n     * Update a texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to initialize\n     */", "kind": "function", "description": "Update a texture", "access": "private", "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000605", "name": "updateTexture"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [5248, 6480], "lineno": 193, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Texture to initialize", "name": "texture"}], "longname": "updateTexture", "scope": "global", "name": "updateTexture"}, {"comment": "/**\n     * Deletes the texture from WebGL\n     *\n     * @private\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */", "kind": "function", "description": "Deletes the texture from WebGL", "access": "private", "meta": {"code": {"paramnames": ["texture", "skipRemove"], "type": "MethodDefinition", "id": "astnode100000736", "name": "destroyTexture"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [6749, 7460], "lineno": 242, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture", "PIXI.Texture"]}, "description": "the texture to destroy", "name": "texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to skip removing the texture from the TextureManager.", "name": "skipRemove"}], "longname": "destroyTexture", "scope": "global", "name": "destroyTexture"}, {"comment": "/**\n     * Update texture style such as mipmap flag\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to update\n     */", "kind": "function", "description": "Update texture style such as mipmap flag", "access": "private", "meta": {"code": {"paramnames": ["texture"], "type": "MethodDefinition", "id": "astnode100000838", "name": "updateTextureStyle"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [7614, 8381], "lineno": 275, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Texture to update", "name": "texture"}], "longname": "updateTextureStyle", "scope": "global", "name": "updateTextureStyle"}, {"comment": "/**\n     * Set style for texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to update\n     * @param {glTexture} glTexture\n     */", "kind": "function", "description": "Set style for texture", "access": "private", "meta": {"code": {"paramnames": ["texture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000934", "name": "setStyle"}, "vars": {"": null}, "columnno": 4, "filename": "TextureSystem.js", "range": [8552, 9412], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Texture to update", "name": "texture"}, {"type": {"names": ["glTexture"]}, "name": "glTexture"}], "longname": "setStyle", "scope": "global", "name": "setStyle"}, {"comment": "/**\n     * Set cross origin based detecting the url and the crossorigin\n     * @protected\n     * @param {HTMLElement} element - Element to apply crossOrigin\n     * @param {string} url - URL to check\n     * @param {boolean|string} [crossorigin=true] - Cross origin value to use\n     */", "kind": "function", "description": "Set cross origin based detecting the url and the crossorigin", "access": "protected", "meta": {"code": {"paramnames": ["element", "url", "crossorigin"], "type": "MethodDefinition", "id": "astnode100000035", "name": "crossOrigin"}, "vars": {"": null}, "columnno": 4, "filename": "BaseImageResource.js", "range": [937, 1299], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["HTMLElement"]}, "description": "Element to apply crossOrigin", "name": "element"}, {"type": {"names": ["string"]}, "description": "URL to check", "name": "url"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean", "string"]}, "description": "Cross origin value to use", "name": "crossorigin"}], "longname": "crossOrigin", "scope": "global", "name": "crossOrigin"}, {"comment": "/**\n     * Upload the texture to the GPU.\n     * @param {PIXI.Renderer} renderer Upload to the renderer\n     * @param {PIXI.BaseTexture} baseTexture Reference to parent texture\n     * @param {PIXI.glCore.GLTexture} glTexture Reference\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|SVGElement} source (optional)\n     */", "kind": "function", "description": "Upload the texture to the GPU.", "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture", "source"], "type": "MethodDefinition", "id": "astnode100000080", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "BaseImageResource.js", "range": [1649, 2443], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Upload to the renderer", "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "description": "Reference to parent texture", "name": "baseTexture"}, {"type": {"names": ["PIXI.glCore.GLTexture"]}, "description": "Reference", "name": "glTexture"}, {"type": {"names": ["HTMLImageElement", "HTMLCanvasElement", "HTMLVideoElement", "SVGElement"]}, "description": "(optional)", "name": "source"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Destroy this BaseImageResource\n     * @override\n     * @param {PIXI.BaseTexture} [fromTexture] Optional base texture\n     * @return {boolean} Destroy was successful\n     */", "kind": "function", "description": "Destroy this BaseImageResource", "returns": [{"type": {"names": ["boolean"]}, "description": "Destroy was successful"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000198", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "BaseImageResource.js", "range": [2637, 2686], "lineno": 84, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"optional": true, "type": {"names": ["PIXI.BaseTexture"]}, "description": "Optional base texture", "name": "fromTexture"}], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "", "kind": "function", "name": "load", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000077", "name": "load"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [1399, 2486], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "load", "scope": "global"}, {"comment": "", "kind": "function", "name": "_resolve", "memberof": "PIXI.resources.module.exports", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000101", "name": "this._resolve"}, "columnno": 12, "filename": "SVGResource.js", "range": [1610, 1758], "lineno": 67, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "longname": "PIXI.resources.module.exports#_resolve", "scope": "instance"}, {"comment": "/**\n     * Reads an SVG string from data URI and then calls `_loadString`.\n     *\n     * @param {string} dataUri - The data uri to load from.\n     */", "kind": "function", "description": "Reads an SVG string from data URI and then calls `_loadString`.", "meta": {"code": {"paramnames": ["dataUri"], "type": "MethodDefinition", "id": "astnode100000176", "name": "_loadDataUri"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [2646, 3056], "lineno": 103, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["string"]}, "description": "The data uri to load from.", "name": "dataUri"}], "longname": "_loadDataUri", "scope": "global", "name": "_loadDataUri"}, {"comment": "/**\n     * Loads an SVG string from `imageUrl` using XHR and then calls `_loadString`.\n     *\n     * @private\n     */", "kind": "function", "description": "Loads an SVG string from `imageUrl` using XHR and then calls `_loadString`.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000220", "name": "_loadXhr"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [3184, 3982], "lineno": 128, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_loadXhr", "scope": "global", "name": "_loadXhr"}, {"comment": "", "kind": "function", "name": "onload", "memberof": "<anonymous>~svgXhr", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000230", "name": "svgXhr.onload"}, "columnno": 8, "filename": "SVGResource.js", "range": [3587, 3846], "lineno": 139, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "longname": "<anonymous>~svgXhr.onload", "scope": "static"}, {"comment": "/**\n     * Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\n     * created canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n     * `_loadXhr` or `_loadDataUri`.\n     *\n     * @private\n     * @param  {string} svgString SVG source as string\n     *\n     * @fires loaded\n     */", "kind": "function", "description": "Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\ncreated canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n`_loadXhr` or `_loadDataUri`.", "access": "private", "fires": ["event:loaded"], "meta": {"code": {"paramnames": ["svgString"], "type": "MethodDefinition", "id": "astnode100000278", "name": "_loadString"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [4338, 5459], "lineno": 165, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["string"]}, "description": "SVG source as string", "name": "svgString"}], "longname": "_loadString", "scope": "global", "name": "_loadString"}, {"comment": "/**\n     * Get size from an svg string using regexp.\n     *\n     * @method\n     * @param {string} svgString - a serialized svg element\n     * @return {PIXI.resources.SVGResource~Size} image extension\n     */", "kind": "function", "description": "Get size from an svg string using regexp.", "returns": [{"type": {"names": ["PIXI.resources.SVGResource~Size"]}, "description": "image extension"}], "meta": {"code": {"paramnames": ["svgString"], "type": "MethodDefinition", "id": "astnode100000421", "name": "getSize"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [5892, 6226], "lineno": 219, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["string"]}, "description": "a serialized svg element", "name": "svgString"}], "longname": "getSize", "scope": "global", "name": "getSize"}, {"comment": "/**\n     * Destroys this texture\n     * @override\n     */", "kind": "function", "description": "Destroys this texture", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000477", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [6294, 6370], "lineno": 237, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @param {string} extension - The extension of source, if set\n     */", "kind": "function", "description": "Used to auto-detect the type of resource.", "meta": {"code": {"paramnames": ["source", "extension"], "type": "MethodDefinition", "id": "astnode100000492", "name": "test"}, "vars": {"": null}, "columnno": 4, "filename": "SVGResource.js", "range": [6575, 6818], "lineno": 250, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["*"]}, "description": "The source object", "name": "source"}, {"type": {"names": ["string"]}, "description": "The extension of source, if set", "name": "extension"}], "longname": "test", "scope": "global", "name": "test"}, {"comment": "/**\n * Create a resource element from a single source element. This\n * auto-detects which type of resource to create. All resources that\n * are auto-detectable must have a static `test` method and a constructor\n * with the arguments `(source, options?)`. Currently, the supported\n * resources for auto-detection include:\n *  - {@link PIXI.resources.ImageResource}\n *  - {@link PIXI.resources.CanvasResource}\n *  - {@link PIXI.resources.VideoResource}\n *  - {@link PIXI.resources.SVGResource}\n *  - {@link PIXI.resources.BufferResource}\n * @static\n * @function PIXI.resources.autoDetectResource\n * @param {string|*} source - Resource source, this can be the URL to the resource,\n *        a typed-array (for BufferResource), HTMLVideoElement, SVG data-uri\n *        or any other resource that can be auto-detected. If not resource is\n *        detected, it's assumed to be an ImageResource.\n * @param {object} [options] - Pass-through options to use for Resource\n * @param {number} [options.width] - BufferResource's width\n * @param {number} [options.height] - BufferResource's height\n * @param {boolean} [options.autoLoad=true] - Image, SVG and Video flag to start loading\n * @param {number} [options.scale=1] - SVG source scale\n * @param {boolean} [options.createBitmap=true] - Image option to create Bitmap object\n * @param {boolean} [options.crossorigin=true] - Image and Video option to set crossOrigin\n * @return {PIXI.resources.Resource} The created resource.\n */", "kind": "function", "description": "Create a resource element from a single source element. This\nauto-detects which type of resource to create. All resources that\nare auto-detectable must have a static `test` method and a constructor\nwith the arguments `(source, options?)`. Currently, the supported\nresources for auto-detection include:\n - {@link PIXI.resources.ImageResource}\n - {@link PIXI.resources.CanvasResource}\n - {@link PIXI.resources.VideoResource}\n - {@link PIXI.resources.SVGResource}\n - {@link PIXI.resources.BufferResource}", "memberof": "PIXI.resources", "returns": [{"type": {"names": ["PIXI.resources.Resource"]}, "description": "The created resource."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources", "columnno": 0, "lineno": 30, "filename": "autoDetectResource.js"}, "params": [{"type": {"names": ["string", "*"]}, "description": "Resource source, this can be the URL to the resource,\n       a typed-array (for BufferResource), HTMLVideoElement, SVG data-uri\n       or any other resource that can be auto-detected. If not resource is\n       detected, it's assumed to be an ImageResource.", "name": "source"}, {"optional": true, "type": {"names": ["object"]}, "description": "Pass-through options to use for Resource", "name": "options"}, {"optional": true, "type": {"names": ["number"]}, "description": "BufferResource's width", "name": "options.width"}, {"optional": true, "type": {"names": ["number"]}, "description": "BufferResource's height", "name": "options.height"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Image, SVG and Video flag to start loading", "name": "options.autoLoad"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "SVG source scale", "name": "options.scale"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Image option to create Bitmap object", "name": "options.createBitmap"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Image and Video option to set crossOrigin", "name": "options.crossorigin"}], "longname": "PIXI.resources.autoDetectResource", "scope": "static", "name": "autoDetectResource"}, {"comment": "", "kind": "function", "name": "autoDetectResource", "undocumented": true, "meta": {"code": {"paramnames": ["source", "options"], "type": "FunctionDeclaration", "id": "astnode100000011", "name": "exports.autoDetectResource"}, "columnno": 0, "filename": "autoDetectResource.js", "range": [2283, 3101], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "longname": "autoDetectResource", "scope": "global"}, {"comment": "", "kind": "function", "name": "autoDetectResource", "undocumented": true, "meta": {"code": {"paramnames": ["source", "options"], "type": "FunctionDeclaration", "id": "astnode100000012", "name": "autoDetectResource"}, "vars": {"i": "autoDetectResource~i", "ResourcePlugin": "autoDetectResource~ResourcePlugin", "result": "autoDetectResource~result", "extension": "autoDetectResource~extension"}, "columnno": 7, "filename": "autoDetectResource.js", "range": [2290, 3101], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "autoDetectResource", "scope": "global"}, {"comment": "/**\n     * Bind to a parent BaseTexture\n     *\n     * @param {PIXI.BaseTexture} baseTexture - Parent texture\n     */", "kind": "function", "description": "Bind to a parent BaseTexture", "meta": {"code": {"paramnames": ["baseTexture"], "type": "MethodDefinition", "id": "astnode100000061", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [1625, 1956], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Parent texture", "name": "baseTexture"}], "longname": "bind", "scope": "global", "name": "bind"}, {"comment": "/**\n     * Unbind to a parent BaseTexture\n     *\n     * @param {PIXI.BaseTexture} baseTexture - Parent texture\n     */", "kind": "function", "description": "Unbind to a parent BaseTexture", "meta": {"code": {"paramnames": ["baseTexture"], "type": "MethodDefinition", "id": "astnode100000104", "name": "unbind"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [2085, 2202], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "Parent texture", "name": "baseTexture"}], "longname": "unbind", "scope": "global", "name": "unbind"}, {"comment": "/**\n     * Trigger a resize event\n     */", "kind": "function", "description": "Trigger a resize event", "meta": {"code": {"paramnames": ["width", "height"], "type": "MethodDefinition", "id": "astnode100000125", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [2254, 2483], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "resize", "scope": "global", "name": "resize"}, {"comment": "/**\n     * Has been updated trigger event\n     */", "kind": "function", "description": "Has been updated trigger event", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000181", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [2704, 2806], "lineno": 119, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * This can be overridden to start preloading a resource\n     * or do any other prepare step.\n     * @protected\n     * @return {Promise} Handle the validate event\n     */", "kind": "function", "description": "This can be overridden to start preloading a resource\nor do any other prepare step.", "access": "protected", "returns": [{"type": {"names": ["Promise"]}, "description": "Handle the validate event"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000198", "name": "load"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [2995, 3047], "lineno": 133, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "load", "scope": "global", "name": "load"}, {"comment": "/**\n     * Uploads the texture or returns false if it cant for some reason. Override this.\n     *\n     * @param {PIXI.Renderer} renderer - yeah, renderer!\n     * @param {PIXI.BaseTexture} baseTexture - the texture\n     * @param {PIXI.glCore.Texture} glTexture - texture instance for this webgl context\n     * @returns {boolean} true is success\n     */", "kind": "function", "description": "Uploads the texture or returns false if it cant for some reason. Override this.", "returns": [{"type": {"names": ["boolean"]}, "description": "true is success"}], "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000223", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [3722, 3834], "lineno": 168, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "yeah, renderer!", "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "description": "the texture", "name": "baseTexture"}, {"type": {"names": ["PIXI.glCore.Texture"]}, "description": "texture instance for this webgl context", "name": "glTexture"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Set the style, optional to override\n     *\n     * @param {PIXI.Renderer} renderer - yeah, renderer!\n     * @param {PIXI.BaseTexture} baseTexture - the texture\n     * @param {PIXI.glCore.Texture} glTexture - texture instance for this webgl context\n     * @returns {boolean} `true` is success\n     */", "kind": "function", "description": "Set the style, optional to override", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` is success"}], "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000232", "name": "style"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [4154, 4265], "lineno": 181, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "yeah, renderer!", "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "description": "the texture", "name": "baseTexture"}, {"type": {"names": ["PIXI.glCore.Texture"]}, "description": "texture instance for this webgl context", "name": "glTexture"}], "longname": "style", "scope": "global", "name": "style"}, {"comment": "/**\n     * Clean up anything, this happens when destroying is ready.\n     *\n     * @protected\n     */", "kind": "function", "description": "Clean up anything, this happens when destroying is ready.", "access": "protected", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000241", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [4377, 4418], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Call when destroying resource, unbind any BaseTexture object\n     * before calling this method, as reference counts are maintained\n     * internally.\n     */", "kind": "function", "description": "Call when destroying resource, unbind any BaseTexture object\nbefore calling this method, as reference counts are maintained\ninternally.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000245", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Resource.js", "range": [4597, 4876], "lineno": 201, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * returns a promise when image will be loaded and processed\n     *\n     * @param {boolean} [createBitmap=true] whether process image into bitmap\n     * @returns {Promise}\n     */", "kind": "function", "description": "returns a promise when image will be loaded and processed", "returns": [{"type": {"names": ["Promise"]}}], "meta": {"code": {"paramnames": ["createBitmap"], "type": "MethodDefinition", "id": "astnode100000136", "name": "load"}, "vars": {"": null}, "columnno": 4, "filename": "ImageResource.js", "range": [2714, 3843], "lineno": 98, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "whether process image into bitmap", "name": "createBitmap"}], "longname": "load", "scope": "global", "name": "load"}, {"comment": "", "kind": "function", "name": "completed", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000188", "name": "completed"}, "vars": {"source.onerror": "source.onerror", "this._load": "<anonymous>#_load", "source.onload": "source.onload"}, "columnno": 18, "filename": "ImageResource.js", "range": [3074, 3603], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "<anonymous>~completed", "scope": "inner"}, {"comment": "/**\n     * Called when we need to convert image into BitmapImage.\n     * Can be called multiple times, real promise is cached inside.\n     *\n     * @returns {Promise} cached promise to fill that bitmap\n     */", "kind": "function", "description": "Called when we need to convert image into BitmapImage.\nCan be called multiple times, real promise is cached inside.", "returns": [{"type": {"names": ["Promise"]}, "description": "cached promise to fill that bitmap"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000267", "name": "process"}, "vars": {"": null}, "columnno": 4, "filename": "ImageResource.js", "range": [4063, 4892], "lineno": 156, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "process", "scope": "global", "name": "process"}, {"comment": "/**\n     * Upload the image resource to GPU.\n     *\n     * @param {PIXI.Renderer} renderer - Renderer to upload to\n     * @param {PIXI.BaseTexture} baseTexture - BaseTexture for this resource\n     * @param {PIXI.glCore.Texture} glTexture - GLTexture to use\n     */", "kind": "function", "description": "Upload the image resource to GPU.", "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000375", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "ImageResource.js", "range": [5167, 5979], "lineno": 195, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Renderer to upload to", "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "description": "BaseTexture for this resource", "name": "baseTexture"}, {"type": {"names": ["PIXI.glCore.Texture"]}, "description": "GLTexture to use", "name": "glTexture"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Destroys this texture\n     * @override\n     */", "kind": "function", "description": "Destroys this texture", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000462", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "ImageResource.js", "range": [6047, 6261], "lineno": 235, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "", "kind": "function", "name": "load", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000244", "name": "load"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [2799, 3844], "lineno": 97, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "load", "scope": "global"}, {"comment": "/**\n     * Returns true if the underlying source is playing.\n     *\n     * @private\n     * @return {boolean} True if playing.\n     */", "kind": "function", "description": "Returns true if the underlying source is playing.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "True if playing."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000386", "name": "_isSourcePlaying"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [3988, 4174], "lineno": 148, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_isSourcePlaying", "scope": "global", "name": "_isSourcePlaying"}, {"comment": "/**\n     * Returns true if the underlying source is ready for playing.\n     *\n     * @private\n     * @return {boolean} True if ready.\n     */", "kind": "function", "description": "Returns true if the underlying source is ready for playing.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "True if ready."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000420", "name": "_isSourceReady"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [4326, 4431], "lineno": 161, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_isSourceReady", "scope": "global", "name": "_isSourceReady"}, {"comment": "/**\n     * Runs the update loop when the video is ready to play\n     *\n     * @private\n     */", "kind": "function", "description": "Runs the update loop when the video is ready to play", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000440", "name": "_onPlayStart"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [4536, 4879], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_onPlayStart", "scope": "global", "name": "_onPlayStart"}, {"comment": "/**\n     * Fired when a pause event is triggered, stops the update loop\n     *\n     * @private\n     */", "kind": "function", "description": "Fired when a pause event is triggered, stops the update loop", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000482", "name": "_onPlayStop"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [4992, 5166], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_onPlayStop", "scope": "global", "name": "_onPlayStop"}, {"comment": "/**\n     * Fired when the video is loaded and ready to play\n     *\n     * @private\n     */", "kind": "function", "description": "Fired when the video is loaded and ready to play", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000508", "name": "_onCanPlay"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [5267, 5899], "lineno": 205, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "_onCanPlay", "scope": "global", "name": "_onCanPlay"}, {"comment": "/**\n     * Destroys this texture\n     * @override\n     */", "kind": "function", "description": "Destroys this texture", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000594", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [5967, 6265], "lineno": 237, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @param {string} extension - The extension of source, if set\n     * @return {boolean} `true` if video source\n     */", "kind": "function", "description": "Used to auto-detect the type of resource.", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` if video source"}], "meta": {"code": {"paramnames": ["source", "extension"], "type": "MethodDefinition", "id": "astnode100000726", "name": "test"}, "vars": {"": null}, "columnno": 4, "filename": "VideoResource.js", "range": [7272, 7426], "lineno": 290, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["*"]}, "description": "The source object", "name": "source"}, {"type": {"names": ["string"]}, "description": "The extension of source, if set", "name": "extension"}], "longname": "test", "scope": "global", "name": "test"}, {"comment": "/**\n     * Destroy this BaseImageResource\n     * @override\n     */", "kind": "function", "description": "Destroy this BaseImageResource", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000151", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "ArrayResource.js", "range": [2119, 2342], "lineno": 86, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Set a resource by ID\n     *\n     * @param {PIXI.resources.Resource} resource\n     * @param {number} index - Zero-based index of resource to set\n     * @return {PIXI.resources.ArrayResource} Instance for chaining\n     */", "kind": "function", "description": "Set a resource by ID", "returns": [{"type": {"names": ["PIXI.resources.ArrayResource"]}, "description": "Instance for chaining"}], "meta": {"code": {"paramnames": ["resource", "index"], "type": "MethodDefinition", "id": "astnode100000198", "name": "addResourceAt"}, "vars": {"": null}, "columnno": 4, "filename": "ArrayResource.js", "range": [2583, 3026], "lineno": 104, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.resources.Resource"]}, "name": "resource"}, {"type": {"names": ["number"]}, "description": "Zero-based index of resource to set", "name": "index"}], "longname": "addResourceAt", "scope": "global", "name": "addResourceAt"}, {"comment": "/**\n     * Load all the resources simultaneously\n     * @override\n     * @return {Promise} When load is resolved\n     */", "kind": "function", "description": "Load all the resources simultaneously", "returns": [{"type": {"names": ["Promise"]}, "description": "When load is resolved"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000340", "name": "load"}, "vars": {"": null}, "columnno": 4, "filename": "ArrayResource.js", "range": [3840, 4411], "lineno": 161, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "load", "override": true, "scope": "global", "name": "load"}, {"comment": "/**\n     * Upload the resources to the GPU.\n     * @param {PIXI.Renderer} renderer\n     * @param {PIXI.BaseTexture} texture\n     * @param {PIXI.glCore.Texture} glTexture\n     */", "kind": "function", "description": "Upload the resources to the GPU.", "meta": {"code": {"paramnames": ["renderer", "texture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000422", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "ArrayResource.js", "range": [4599, 5905], "lineno": 193, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "name": "texture"}, {"type": {"names": ["PIXI.glCore.Texture"]}, "name": "glTexture"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Upload the texture to the GPU.\n     * @param {PIXI.Renderer} renderer Upload to the renderer\n     * @param {PIXI.BaseTexture} baseTexture Reference to parent texture\n     */", "kind": "function", "description": "Upload the texture to the GPU.", "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000049", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "BufferResource.js", "range": [1135, 2204], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Upload to the renderer", "name": "renderer"}, {"type": {"names": ["PIXI.BaseTexture"]}, "description": "Reference to parent texture", "name": "baseTexture"}], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Destroy and don't use after this\n     * @override\n     */", "kind": "function", "description": "Destroy and don't use after this", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000163", "name": "dispose"}, "vars": {"": null}, "columnno": 4, "filename": "BufferResource.js", "range": [2283, 2330], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "dispose", "override": true, "scope": "global", "name": "dispose"}, {"comment": "/**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @return {boolean} `true` if <canvas>\n     */", "kind": "function", "description": "Used to auto-detect the type of resource.", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` if <canvas>"}], "meta": {"code": {"paramnames": ["source"], "type": "MethodDefinition", "id": "astnode100000173", "name": "test"}, "vars": {"": null}, "columnno": 4, "filename": "BufferResource.js", "range": [2512, 2679], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["*"]}, "description": "The source object", "name": "source"}], "longname": "test", "scope": "global", "name": "test"}, {"comment": "/**\n     * Add binding\n     * @override\n     * @param {PIXI.BaseTexture} baseTexture - parent base texture\n     */", "kind": "function", "description": "Add binding", "meta": {"code": {"paramnames": ["baseTexture"], "type": "MethodDefinition", "id": "astnode100000089", "name": "bind"}, "vars": {"": null}, "columnno": 4, "filename": "CubeResource.js", "range": [1214, 1332], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["PIXI.BaseTexture"]}, "description": "parent base texture", "name": "baseTexture"}], "longname": "bind", "override": true, "scope": "global", "name": "bind"}, {"comment": "/**\n     * Upload the resource\n     */", "kind": "function", "description": "Upload the resource", "meta": {"code": {"paramnames": ["renderer", "baseTexture", "glTexture"], "type": "MethodDefinition", "id": "astnode100000108", "name": "upload"}, "vars": {"": null}, "columnno": 4, "filename": "CubeResource.js", "range": [1381, 1963], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [], "longname": "upload", "scope": "global", "name": "upload"}, {"comment": "/**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @return {boolean} `true` if <canvas>\n     */", "kind": "function", "description": "Used to auto-detect the type of resource.", "returns": [{"type": {"names": ["boolean"]}, "description": "`true` if <canvas>"}], "meta": {"code": {"paramnames": ["source"], "type": "MethodDefinition", "id": "astnode100000011", "name": "test"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasResource.js", "range": [490, 575], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/core/src/textures/resources"}, "params": [{"type": {"names": ["*"]}, "description": "The source object", "name": "source"}], "longname": "test", "scope": "global", "name": "test"}, {"comment": "/**\n     * Stops the AnimatedSprite.\n     *\n     */", "kind": "function", "description": "Stops the AnimatedSprite.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000112", "name": "stop"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [3621, 3840], "lineno": 134, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [], "longname": "stop", "scope": "global", "name": "stop"}, {"comment": "/**\n     * Plays the AnimatedSprite.\n     *\n     */", "kind": "function", "description": "Plays the AnimatedSprite.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000145", "name": "play"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [3902, 4138], "lineno": 152, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [], "longname": "play", "scope": "global", "name": "play"}, {"comment": "/**\n     * Stops the AnimatedSprite and goes to a specific frame.\n     *\n     * @param {number} frameNumber - Frame index to stop at.\n     */", "kind": "function", "description": "Stops the AnimatedSprite and goes to a specific frame.", "meta": {"code": {"paramnames": ["frameNumber"], "type": "MethodDefinition", "id": "astnode100000180", "name": "gotoAndStop"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [4290, 4543], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"type": {"names": ["number"]}, "description": "Frame index to stop at.", "name": "frameNumber"}], "longname": "gotoAndStop", "scope": "global", "name": "gotoAndStop"}, {"comment": "/**\n     * Goes to a specific frame and begins playing the AnimatedSprite.\n     *\n     * @param {number} frameNumber - Frame index to start at.\n     */", "kind": "function", "description": "Goes to a specific frame and begins playing the AnimatedSprite.", "meta": {"code": {"paramnames": ["frameNumber"], "type": "MethodDefinition", "id": "astnode100000214", "name": "gotoAndPlay"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [4705, 4958], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"type": {"names": ["number"]}, "description": "Frame index to start at.", "name": "frameNumber"}], "longname": "gotoAndPlay", "scope": "global", "name": "gotoAndPlay"}, {"comment": "/**\n     * Updates the object transform for rendering.\n     *\n     * @private\n     * @param {number} deltaTime - Time since last tick.\n     */", "kind": "function", "description": "Updates the object transform for rendering.", "access": "private", "meta": {"code": {"paramnames": ["deltaTime"], "type": "MethodDefinition", "id": "astnode100000248", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [5111, 7005], "lineno": 210, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"type": {"names": ["number"]}, "description": "Time since last tick.", "name": "deltaTime"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Updates the displayed texture to match the current frame index.\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the displayed texture to match the current frame index.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000515", "name": "updateTexture"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [7121, 7464], "lineno": 285, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [], "longname": "updateTexture", "scope": "global", "name": "updateTexture"}, {"comment": "/**\n     * Stops the AnimatedSprite and destroys it.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value.\n     * @param {boolean} [options.children=false] - If set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well.\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well.\n     */", "kind": "function", "description": "Stops the AnimatedSprite and destroys it.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000576", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [8088, 8169], "lineno": 309, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value.", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "If set to true, all the children will have their destroy\n     method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the current texture of the sprite as well.", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the base texture of the sprite as well.", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * A short hand way of creating a movieclip from an array of frame ids.\n     *\n     * @static\n     * @param {string[]} frames - The array of frames ids the movieclip will use as its texture frames.\n     * @return {AnimatedSprite} The new animated sprite with the specified frames.\n     */", "kind": "function", "description": "A short hand way of creating a movieclip from an array of frame ids.", "returns": [{"type": {"names": ["AnimatedSprite"]}, "description": "The new animated sprite with the specified frames."}], "meta": {"code": {"paramnames": ["frames"], "type": "MethodDefinition", "id": "astnode100000592", "name": "fromFrames"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [8476, 8709], "lineno": 322, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"type": {"names": ["Array.<string>"]}, "description": "The array of frames ids the movieclip will use as its texture frames.", "name": "frames"}], "longname": "fromFrames", "scope": "global", "name": "fromFrames"}, {"comment": "/**\n     * A short hand way of creating a movieclip from an array of image ids.\n     *\n     * @static\n     * @param {string[]} images - The array of image urls the movieclip will use as its texture frames.\n     * @return {AnimatedSprite} The new animate sprite with the specified images as frames.\n     */", "kind": "function", "description": "A short hand way of creating a movieclip from an array of image ids.", "returns": [{"type": {"names": ["AnimatedSprite"]}, "description": "The new animate sprite with the specified images as frames."}], "meta": {"code": {"paramnames": ["images"], "type": "MethodDefinition", "id": "astnode100000630", "name": "fromImages"}, "vars": {"": null}, "columnno": 4, "filename": "AnimatedSprite.js", "range": [9025, 9258], "lineno": 341, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-animated/src"}, "params": [{"type": {"names": ["Array.<string>"]}, "description": "The array of image urls the movieclip will use as its texture frames.", "name": "images"}], "longname": "fromImages", "scope": "global", "name": "fromImages"}, {"comment": "/**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */", "kind": "function", "description": "Will return a HTML Image of the target", "returns": [{"type": {"names": ["HTMLImageElement"]}, "description": "HTML Image of the target"}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000044", "name": "image"}, "vars": {"": null}, "columnno": 4, "filename": "Extract.js", "range": [1239, 1364], "lineno": 41, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "image", "scope": "global", "name": "image"}, {"comment": "/**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `Extract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */", "kind": "function", "description": "Will return a a base64 encoded string of this target. It works by calling\n `Extract.getCanvas` and then running toDataURL on that.", "returns": [{"type": {"names": ["string"]}, "description": "A base64 encoded string of the texture."}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000066", "name": "base64"}, "vars": {"": null}, "columnno": 4, "filename": "Extract.js", "range": [1763, 1837], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "base64", "scope": "global", "name": "base64"}, {"comment": "/**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */", "kind": "function", "description": "Creates a Canvas element, renders this target to it and then returns it.", "returns": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "A Canvas element with the texture rendered on."}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000080", "name": "canvas"}, "vars": {"": null}, "columnno": 4, "filename": "Extract.js", "range": [2189, 4324], "lineno": 70, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "canvas", "scope": "global", "name": "canvas"}, {"comment": "/**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */", "kind": "function", "description": "Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\norder, with integer values between 0 and 255 (included).", "returns": [{"type": {"names": ["Uint8ClampedArray"]}, "description": "One-dimensional array containing the pixel data of the entire texture"}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000343", "name": "pixels"}, "vars": {"": null}, "columnno": 4, "filename": "Extract.js", "range": [4782, 6320], "lineno": 163, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "pixels", "scope": "global", "name": "pixels"}, {"comment": "/**\n     * Destroys the extract\n     *\n     */", "kind": "function", "description": "Destroys the extract", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000521", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Extract.js", "range": [6377, 6466], "lineno": 233, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/extract/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */", "kind": "function", "description": "When the texture is updated, this event will fire to update the scale and frame", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000239", "name": "_onTextureUpdate"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [5199, 5707], "lineno": 185, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [], "longname": "_onTextureUpdate", "scope": "global", "name": "_onTextureUpdate"}, {"comment": "/**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */", "kind": "function", "description": "Called when the anchor position updates.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000337", "name": "_onAnchorUpdate"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [5800, 5900], "lineno": 209, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [], "longname": "_onAnchorUpdate", "scope": "global", "name": "_onAnchorUpdate"}, {"comment": "/**\n     * calculates worldTransform * vertices, store it in vertexData\n     */", "kind": "function", "description": "calculates worldTransform * vertices, store it in vertexData", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000355", "name": "calculateVertices"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [5990, 7971], "lineno": 218, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [], "longname": "calculateVertices", "scope": "global", "name": "calculateVertices"}, {"comment": "/**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */", "kind": "function", "description": "calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\nThis is used to ensure that the true width and height of a trimmed texture is respected", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000717", "name": "calculateTrimmedVertices"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [8193, 9712], "lineno": 296, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [], "longname": "calculateTrimmedVertices", "scope": "global", "name": "calculateTrimmedVertices"}, {"comment": "/**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @private\n    * @param {PIXI.Renderer} renderer - The webgl renderer to use.\n    */", "kind": "function", "description": "Renders the object using the WebGL renderer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000995", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [9877, 10074], "lineno": 355, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The webgl renderer to use.", "name": "renderer"}], "longname": "_render", "scope": "global", "name": "_render"}, {"comment": "/**\n     * Updates the bounds of the sprite.\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the bounds of the sprite.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001031", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [10160, 10786], "lineno": 368, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {PIXI.Rectangle} rect - The output rectangle.\n     * @return {PIXI.Rectangle} The bounds.\n     */", "kind": "function", "description": "Gets the local bounds of the sprite object.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The bounds."}], "meta": {"code": {"paramnames": ["rect"], "type": "MethodDefinition", "id": "astnode100001102", "name": "getLocalBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [10970, 11802], "lineno": 394, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The output rectangle.", "name": "rect"}], "longname": "getLocalBounds", "scope": "global", "name": "getLocalBounds"}, {"comment": "/**\n     * Tests if a point is inside this sprite\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */", "kind": "function", "description": "Tests if a point is inside this sprite", "returns": [{"type": {"names": ["boolean"]}, "description": "the result of the test"}], "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100001242", "name": "containsPoint"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [11978, 12499], "lineno": 426, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "the point to test", "name": "point"}], "longname": "containsPoint", "scope": "global", "name": "containsPoint"}, {"comment": "/**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */", "kind": "function", "description": "Destroys this sprite and optionally its texture and children", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100001336", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [13139, 13675], "lineno": 458, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their destroy\n     method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the current texture of the sprite as well", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the base texture of the sprite as well", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.Texture|HTMLCanvasElement|HTMLVideoElement} source Source to create texture from\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.Sprite} The newly created sprite\n     */", "kind": "function", "description": "Helper function that creates a new sprite based on the source you provide.\nThe source can be - frame id, image url, video url, canvas element, video element, base texture", "returns": [{"type": {"names": ["PIXI.Sprite"]}, "description": "The newly created sprite"}], "meta": {"code": {"paramnames": ["source", "options"], "type": "MethodDefinition", "id": "astnode100001418", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "Sprite.js", "range": [14194, 14393], "lineno": 490, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite/src"}, "params": [{"type": {"names": ["number", "string", "PIXI.Texture", "HTMLCanvasElement", "HTMLVideoElement"]}, "description": "Source to create texture from", "name": "source"}, {"optional": true, "type": {"names": ["object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     *\n     * @param {PIXI.TilingSprite} ts tilingSprite to be rendered\n     */", "kind": "function", "name": "render", "meta": {"code": {"paramnames": ["ts"], "type": "MethodDefinition", "id": "astnode100000096", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSpriteRenderer.js", "range": [1110, 4103], "lineno": 43, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["PIXI.TilingSprite"]}, "description": "tilingSprite to be rendered", "name": "ts"}], "longname": "render", "scope": "global"}, {"comment": "/**\n     * @private\n     */", "kind": "function", "name": "_onTextureUpdate", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000179", "name": "_onTextureUpdate"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [3232, 3396], "lineno": 134, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [], "longname": "_onTextureUpdate", "scope": "global"}, {"comment": "/**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "Renders the object using the WebGL renderer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000204", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [3546, 3956], "lineno": 149, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "_render", "scope": "global", "name": "_render"}, {"comment": "/**\n     * Updates the bounds of the tiling sprite.\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the bounds of the tiling sprite.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000265", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [4049, 4375], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {PIXI.Rectangle} rect - The output rectangle.\n     * @return {PIXI.Rectangle} The bounds.\n     */", "kind": "function", "description": "Gets the local bounds of the sprite object.", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The bounds."}], "meta": {"code": {"paramnames": ["rect"], "type": "MethodDefinition", "id": "astnode100000337", "name": "getLocalBounds"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [4559, 5339], "lineno": 187, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The output rectangle.", "name": "rect"}], "longname": "getLocalBounds", "scope": "global", "name": "getLocalBounds"}, {"comment": "/**\n     * Checks if a point is inside this tiling sprite.\n     *\n     * @param {PIXI.Point} point - the point to check\n     * @return {boolean} Whether or not the sprite contains the point.\n     */", "kind": "function", "description": "Checks if a point is inside this tiling sprite.", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether or not the sprite contains the point."}], "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100000461", "name": "containsPoint"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [5548, 6031], "lineno": 219, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "the point to check", "name": "point"}], "longname": "containsPoint", "scope": "global", "name": "containsPoint"}, {"comment": "/**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */", "kind": "function", "description": "Destroys this sprite and optionally its texture and children", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000543", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [6671, 6797], "lineno": 250, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their destroy\n     method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the current texture of the sprite as well", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Should it destroy the base texture of the sprite as well", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Helper function that creates a new tiling sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.Texture} The newly created texture\n     */", "kind": "function", "description": "Helper function that creates a new tiling sprite based on the source you provide.\nThe source can be - frame id, image url, video url, canvas element, video element, base texture", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "The newly created texture"}], "meta": {"code": {"paramnames": ["source", "width", "height"], "type": "MethodDefinition", "id": "astnode100000566", "name": "from"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [7336, 7452], "lineno": 268, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["number", "string", "PIXI.BaseTexture", "HTMLCanvasElement", "HTMLVideoElement"]}, "description": "Source to create texture from", "name": "source"}, {"type": {"names": ["number"]}, "description": "the width of the tiling sprite", "name": "width"}, {"type": {"names": ["number"]}, "description": "the height of the tiling sprite", "name": "height"}], "longname": "from", "scope": "global", "name": "from"}, {"comment": "/**\n     * Helper function that creates a tiling sprite that will use a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.TilingSprite} A new TilingSprite using a texture from the texture cache matching the frameId\n     */", "kind": "function", "description": "Helper function that creates a tiling sprite that will use a texture from the TextureCache based on the frameId\nThe frame ids are created when a Texture packer file has been loaded", "returns": [{"type": {"names": ["PIXI.TilingSprite"]}, "description": "A new TilingSprite using a texture from the texture cache matching the frameId"}], "meta": {"code": {"paramnames": ["frameId", "width", "height"], "type": "MethodDefinition", "id": "astnode100000583", "name": "fromFrame"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [8005, 8306], "lineno": 283, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["string"]}, "description": "The frame Id of the texture in the cache", "name": "frameId"}, {"type": {"names": ["number"]}, "description": "the width of the tiling sprite", "name": "width"}, {"type": {"names": ["number"]}, "description": "the height of the tiling sprite", "name": "height"}], "longname": "fromFrame", "scope": "global", "name": "fromFrame"}, {"comment": "/**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @param {Object} [options] - See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.TilingSprite} A new TilingSprite using a texture from the texture cache matching the image id\n     */", "kind": "function", "description": "Helper function that creates a sprite that will contain a texture based on an image url\nIf the image is not in the texture cache it will be loaded", "returns": [{"type": {"names": ["PIXI.TilingSprite"]}, "description": "A new TilingSprite using a texture from the texture cache matching the image id"}], "meta": {"code": {"paramnames": ["imageId", "width", "height", "options"], "type": "MethodDefinition", "id": "astnode100000615", "name": "fromImage"}, "vars": {"": null}, "columnno": 4, "filename": "TilingSprite.js", "range": [8905, 9366], "lineno": 306, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/sprite-tiling/src"}, "params": [{"type": {"names": ["string"]}, "description": "The image url of the texture", "name": "imageId"}, {"type": {"names": ["number"]}, "description": "the width of the tiling sprite", "name": "width"}, {"type": {"names": ["number"]}, "description": "the height of the tiling sprite", "name": "height"}, {"optional": true, "type": {"names": ["Object"]}, "description": "See {@link PIXI.BaseTexture}'s constructor for options.", "name": "options"}], "longname": "fromImage", "scope": "global", "name": "fromImage"}, {"comment": "/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - The point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {Point} The updated point.\n */", "kind": "function", "description": "Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.", "memberof": "PIXI.DisplayObject", "returns": [{"type": {"names": ["Point"]}, "description": "The updated point."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-get-global-position/src", "columnno": 0, "lineno": 4, "filename": "index.js"}, "params": [{"type": {"names": ["Point"]}, "description": "The point to write the global value to. If null a new point will be returned", "name": "point"}, {"type": {"names": ["boolean"]}, "description": "Setting to true will stop the transforms of the scene graph from\n being updated. This means the calculation returned MAY be out of date BUT will give you a\n nice performance boost.", "name": "skipUpdate"}], "longname": "PIXI.DisplayObject#getGlobalPosition", "scope": "instance", "name": "getGlobalPosition"}, {"comment": "", "kind": "function", "name": "getGlobalPosition", "memberof": "DisplayObject", "undocumented": true, "meta": {"code": {"paramnames": ["point", "skipUpdate"], "type": "FunctionExpression", "id": "astnode100000011", "value": "getGlobalPosition", "name": "DisplayObject.prototype.getGlobalPosition"}, "vars": {"point.y": "point.y", "point.x": "point.x"}, "columnno": 0, "filename": "index.js", "range": [624, 946], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mixin-get-global-position/src"}, "longname": "DisplayObject#getGlobalPosition", "scope": "instance"}, {"comment": "", "kind": "function", "name": "resolveURL", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000061", "name": "resolveURL"}, "columnno": 14, "filename": "BitmapText.js", "range": [315, 370], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~resolveURL", "scope": "inner"}, {"comment": "", "kind": "function", "name": "loadXML", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000074", "name": "loadXML"}, "vars": {"": null}, "columnno": 14, "filename": "BitmapText.js", "range": [386, 648], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~loadXML", "scope": "inner"}, {"comment": "", "kind": "function", "name": "loadImage", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000117", "name": "loadImage"}, "vars": {"": null}, "columnno": 14, "filename": "BitmapText.js", "range": [665, 861], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~loadImage", "scope": "inner"}, {"comment": "", "kind": "function", "name": "onload", "memberof": "<anonymous>~image", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000132", "name": "image.onload"}, "columnno": 12, "filename": "BitmapText.js", "range": [773, 808], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "longname": "<anonymous>~image.onload", "scope": "static"}, {"comment": "", "kind": "function", "name": "resolveURL", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000115", "name": "resolveURL"}, "columnno": 14, "filename": "BitmapFontLoader.js", "range": [808, 863], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~resolveURL", "scope": "inner"}, {"comment": "", "kind": "function", "name": "loadXML", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000200", "name": "loadXML"}, "vars": {"": null}, "columnno": 14, "filename": "BitmapFontLoader.js", "range": [1383, 1645], "lineno": 43, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~loadXML", "scope": "inner"}, {"comment": "", "kind": "function", "name": "loadImage", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000243", "name": "loadImage"}, "vars": {"": null}, "columnno": 14, "filename": "BitmapFontLoader.js", "range": [1662, 1858], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "params": [], "longname": "<anonymous>~loadImage", "scope": "inner"}, {"comment": "", "kind": "function", "name": "onload", "memberof": "<anonymous>~image", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "ArrowFunctionExpression", "id": "astnode100000258", "name": "image.onload"}, "columnno": 12, "filename": "BitmapFontLoader.js", "range": [1770, 1805], "lineno": 54, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/test"}, "longname": "<anonymous>~image.onload", "scope": "static"}, {"comment": "/**\n     * Renders text and updates it when needed\n     *\n     * @private\n     */", "kind": "function", "description": "Renders text and updates it when needed", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000162", "name": "updateText"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapText.js", "range": [4696, 9605], "lineno": 157, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "updateText", "scope": "global", "name": "updateText"}, {"comment": "/**\n     * Updates the transform of this object\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the transform of this object", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000918", "name": "updateTransform"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapText.js", "range": [9694, 9789], "lineno": 327, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "updateTransform", "scope": "global", "name": "updateTransform"}, {"comment": "/**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */", "kind": "function", "description": "Validates text before calling parent's getLocalBounds", "returns": [{"type": {"names": ["PIXI.Rectangle"]}, "description": "The rectangular bounding area"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000932", "name": "getLocalBounds"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapText.js", "range": [9941, 10034], "lineno": 338, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "getLocalBounds", "scope": "global", "name": "getLocalBounds"}, {"comment": "/**\n     * Updates text when needed\n     *\n     * @private\n     */", "kind": "function", "description": "Updates text when needed", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000946", "name": "validate"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapText.js", "range": [10111, 10240], "lineno": 350, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "validate", "scope": "global", "name": "validate"}, {"comment": "/**\n     * Register a bitmap font with data and a texture.\n     *\n     * @static\n     * @param {XMLDocument} xml - The XML document data.\n     * @param {Object.<string, PIXI.Texture>|PIXI.Texture|PIXI.Texture[]} textures - List of textures for each page.\n     *  If providing an object, the key is the `<page>` element's `file` attribute in the FNT file.\n     * @return {Object} Result font object with font, size, lineHeight and char fields.\n     */", "kind": "function", "description": "Register a bitmap font with data and a texture.", "returns": [{"type": {"names": ["Object"]}, "description": "Result font object with font, size, lineHeight and char fields."}], "meta": {"code": {"paramnames": ["xml", "textures"], "type": "MethodDefinition", "id": "astnode100001351", "name": "registerFont"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapText.js", "range": [15018, 18012], "lineno": 569, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [{"type": {"names": ["XMLDocument"]}, "description": "The XML document data.", "name": "xml"}, {"type": {"names": ["Object.<string, PIXI.Texture>", "PIXI.Texture", "Array.<PIXI.Texture>"]}, "description": "List of textures for each page.\n If providing an object, the key is the `<page>` element's `file` attribute in the FNT file.", "name": "textures"}], "longname": "registerFont", "scope": "global", "name": "registerFont"}, {"comment": "/**\n     * Register a BitmapText font from loader resource.\n     *\n     * @param {PIXI.LoaderResource} resource - Loader resource.\n     * @param {PIXI.Texture} texture - Reference to texture.\n     */", "kind": "function", "description": "Register a BitmapText font from loader resource.", "meta": {"code": {"paramnames": ["resource", "texture"], "type": "MethodDefinition", "id": "astnode100000014", "name": "parse"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapFontLoader.js", "range": [533, 655], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [{"type": {"names": ["PIXI.LoaderResource"]}, "description": "Loader resource.", "name": "resource"}, {"type": {"names": ["PIXI.Texture"]}, "description": "Reference to texture.", "name": "texture"}], "longname": "parse", "scope": "global", "name": "parse"}, {"comment": "/**\n     * Called when the plugin is installed.\n     *\n     * @see PIXI.Loader.registerPlugin\n     */", "kind": "function", "description": "Called when the plugin is installed.", "see": ["PIXI.Loader.registerPlugin"], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000033", "name": "add"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapFontLoader.js", "range": [767, 885], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "add", "scope": "global", "name": "add"}, {"comment": "/**\n     * Replacement for NodeJS's path.dirname\n     * @private\n     * @param {string} url Path to get directory for\n     */", "kind": "function", "description": "Replacement for NodeJS's path.dirname", "access": "private", "meta": {"code": {"paramnames": ["url"], "type": "MethodDefinition", "id": "astnode100000048", "name": "dirname"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapFontLoader.js", "range": [1021, 1464], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [{"type": {"names": ["string"]}, "description": "Path to get directory for", "name": "url"}], "longname": "dirname", "scope": "global", "name": "dirname"}, {"comment": "/**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader~loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */", "kind": "function", "description": "Called after a resource is loaded.", "see": ["PIXI.Loader~loaderMiddleware"], "meta": {"code": {"paramnames": ["resource", "next"], "type": "MethodDefinition", "id": "astnode100000083", "name": "use"}, "vars": {"": null}, "columnno": 4, "filename": "BitmapFontLoader.js", "range": [1644, 5216], "lineno": 65, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [{"type": {"names": ["PIXI.LoaderResource"]}, "name": "resource"}, {"type": {"names": ["function"]}, "name": "next"}], "longname": "use", "scope": "global", "name": "use"}, {"comment": "", "kind": "function", "name": "completed", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000257", "name": "completed"}, "vars": {"textures[undefined]": "<anonymous>~textures.undefined]"}, "columnno": 14, "filename": "BitmapFontLoader.js", "range": [3319, 3597], "lineno": 119, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/text-bitmap/src"}, "params": [], "longname": "<anonymous>~completed", "scope": "inner"}, {"comment": "/**\n     * Gets called automatically by the Mesh. Intended to be overridden for custom\n     * MeshMaterial objects.\n     */", "kind": "function", "description": "Gets called automatically by the Mesh. Intended to be overridden for custom\nMeshMaterial objects.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000270", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "MeshMaterial.js", "range": [3528, 3933], "lineno": 139, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * updates\n     *\n     * @param {boolean} forceUpdate - force the update\n     */", "kind": "function", "description": "updates", "meta": {"code": {"paramnames": ["forceUpdate"], "type": "MethodDefinition", "id": "astnode100000050", "name": "update"}, "vars": {"": null}, "columnno": 4, "filename": "MeshBatchUvs.js", "range": [956, 1554], "lineno": 46, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [{"type": {"names": ["boolean"]}, "description": "force the update", "name": "forceUpdate"}], "longname": "update", "scope": "global", "name": "update"}, {"comment": "/**\n     * Standard renderer draw.\n     * @private\n     */", "kind": "function", "description": "Standard renderer draw.", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000311", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [6908, 7406], "lineno": 244, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [], "longname": "_render", "scope": "global", "name": "_render"}, {"comment": "/**\n     * Standard non-batching way of rendering.\n     * @private\n     * @param {PIXI.Renderer} renderer - Instance to renderer.\n     */", "kind": "function", "description": "Standard non-batching way of rendering.", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000366", "name": "_renderDefault"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [7554, 8306], "lineno": 266, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance to renderer.", "name": "renderer"}], "longname": "_renderDefault", "scope": "global", "name": "_renderDefault"}, {"comment": "/**\n     * Rendering by using the Batch system.\n     * @private\n     * @param {PIXI.Renderer} renderer - Instance to renderer.\n     */", "kind": "function", "description": "Rendering by using the Batch system.", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000477", "name": "_renderToBatch"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [8451, 9053], "lineno": 301, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "Instance to renderer.", "name": "renderer"}], "longname": "_renderToBatch", "scope": "global", "name": "_renderToBatch"}, {"comment": "/**\n     * Updates vertexData field based on transform and vertices\n     */", "kind": "function", "description": "Updates vertexData field based on transform and vertices", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000574", "name": "calculateVertices"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [9139, 10379], "lineno": 326, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [], "longname": "calculateVertices", "scope": "global", "name": "calculateVertices"}, {"comment": "/**\n     * Updates uv field based on from geometry uv's or batchUvs\n     */", "kind": "function", "description": "Updates uv field based on from geometry uv's or batchUvs", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000800", "name": "calculateUvs"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [10465, 10896], "lineno": 376, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [], "longname": "calculateUvs", "scope": "global", "name": "calculateUvs"}, {"comment": "/**\n     * Updates the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\n     * there must be a aVertexPosition attribute present in the geometry for bounds to be calculated correctly.\n     *\n     * @private\n     */", "kind": "function", "description": "Updates the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\nthere must be a aVertexPosition attribute present in the geometry for bounds to be calculated correctly.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000869", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [11169, 11314], "lineno": 401, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.\n     *\n     * @param {PIXI.Point} point the point to test\n     * @return {boolean} the result of the test\n     */", "kind": "function", "description": "Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.", "returns": [{"type": {"names": ["boolean"]}, "description": "the result of the test"}], "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100000894", "name": "containsPoint"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [11529, 12588], "lineno": 414, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "the point to test", "name": "point"}], "longname": "containsPoint", "scope": "global", "name": "containsPoint"}, {"comment": "/**\n     * Destroys the Mesh object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     */", "kind": "function", "description": "Destroys the Mesh object.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100001084", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Mesh.js", "range": [12967, 13199], "lineno": 459, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/mesh/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all\n options have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have\n their destroy method called as well. 'options' will be passed on to those calls.", "name": "options.children"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "withGL", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000054", "name": "withGL"}, "columnno": 0, "filename": "index.js", "range": [362, 451], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/test"}, "params": [], "longname": "withGL", "scope": "global"}, {"comment": "/**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.GraphicsGeometry} This GraphicsGeometry object. Good for chaining method calls\n     */", "kind": "function", "description": "Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.", "returns": [{"type": {"names": ["PIXI.GraphicsGeometry"]}, "description": "This GraphicsGeometry object. Good for chaining method calls"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000303", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [5264, 6279], "lineno": 227, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param {PIXI.FillStyle} fillStyle - Defines style of the fill.\n     * @param {PIXI.LineStyle} lineStyle - Defines style of the lines.\n     * @param {PIXI.Matrix} matrix - Transform applied to the points of the shape.\n     * @return {PIXI.GraphicsGeomery} Returns geometry for chaining.\n     */", "kind": "function", "description": "Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.", "returns": [{"type": {"names": ["PIXI.GraphicsGeomery"]}, "description": "Returns geometry for chaining."}], "meta": {"code": {"paramnames": ["shape", "fillStyle", "lineStyle", "matrix"], "type": "MethodDefinition", "id": "astnode100000489", "name": "drawShape"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [6839, 7056], "lineno": 276, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Circle", "PIXI.Ellipse", "PIXI.Polygon", "PIXI.Rectangle", "PIXI.RoundedRectangle"]}, "description": "The shape object to draw.", "name": "shape"}, {"type": {"names": ["PIXI.FillStyle"]}, "description": "Defines style of the fill.", "name": "fillStyle"}, {"type": {"names": ["PIXI.LineStyle"]}, "description": "Defines style of the lines.", "name": "lineStyle"}, {"type": {"names": ["PIXI.Matrix"]}, "description": "Transform applied to the points of the shape.", "name": "matrix"}], "longname": "drawShape", "scope": "global", "name": "drawShape"}, {"comment": "/**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param {PIXI.Matrix} matrix - Transform applied to the points of the shape.\n     * @return {PIXI.GraphicsGeomery} Returns geometry for chaining.\n     */", "kind": "function", "description": "Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.", "returns": [{"type": {"names": ["PIXI.GraphicsGeomery"]}, "description": "Returns geometry for chaining."}], "meta": {"code": {"paramnames": ["shape", "matrix"], "type": "MethodDefinition", "id": "astnode100000521", "name": "drawHole"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [7475, 7819], "lineno": 293, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Circle", "PIXI.Ellipse", "PIXI.Polygon", "PIXI.Rectangle", "PIXI.RoundedRectangle"]}, "description": "The shape object to draw.", "name": "shape"}, {"type": {"names": ["PIXI.Matrix"]}, "description": "Transform applied to the points of the shape.", "name": "matrix"}], "longname": "drawHole", "scope": "global", "name": "drawHole"}, {"comment": "/**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */", "kind": "function", "description": "Destroys the Graphics object.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000575", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [8554, 9407], "lineno": 323, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all\n options have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have\n their destroy method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the texture of the child sprite", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the base texture of the child sprite", "name": "options.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Check to see if a point is contained within this geometry.\n     *\n     * @param {PIXI.Point} point - Point to check if it's contained.\n     * @return {Boolean} `true` if the point is contained within geometry.\n     */", "kind": "function", "description": "Check to see if a point is contained within this geometry.", "returns": [{"type": {"names": ["Boolean"]}, "description": "`true` if the point is contained within geometry."}], "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100000741", "name": "containsPoint"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [9646, 10620], "lineno": 360, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "Point to check if it's contained.", "name": "point"}], "longname": "containsPoint", "scope": "global", "name": "containsPoint"}, {"comment": "/**\n     * Generates intermediate batch data. Either gets converted to drawCalls\n     * or used to convert to batch objects directly by the Graphics object.\n     * @private\n     */", "kind": "function", "description": "Generates intermediate batch data. Either gets converted to drawCalls\nor used to convert to batch objects directly by the Graphics object.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000847", "name": "updateBatches"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [10811, 15354], "lineno": 404, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "updateBatches", "scope": "global", "name": "updateBatches"}, {"comment": "/**\n     * Checks to see if this graphics geometry can be batched.\n     * Currently it needs to be small enough and not contain any native lines.\n     * @private\n     */", "kind": "function", "description": "Checks to see if this graphics geometry can be batched.\nCurrently it needs to be small enough and not contain any native lines.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001465", "name": "isBatchable"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [15534, 15842], "lineno": 557, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "isBatchable", "scope": "global", "name": "isBatchable"}, {"comment": "/**\n     * Converts intermediate batches data to drawCalls.\n     * @private\n     */", "kind": "function", "description": "Converts intermediate batches data to drawCalls.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001511", "name": "buildDrawCalls"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [15936, 19587], "lineno": 576, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "buildDrawCalls", "scope": "global", "name": "buildDrawCalls"}, {"comment": "/**\n     * Process the holes data.\n     *\n     * @param {PIXI.GraphicsData[]} holes - Holes to render\n     * @private\n     */", "kind": "function", "description": "Process the holes data.", "access": "private", "meta": {"code": {"paramnames": ["holes"], "type": "MethodDefinition", "id": "astnode100002000", "name": "proccessHoles"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [19723, 20067], "lineno": 708, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<PIXI.GraphicsData>"]}, "description": "Holes to render", "name": "holes"}], "longname": "proccessHoles", "scope": "global", "name": "proccessHoles"}, {"comment": "/**\n     * Update the local bounds of the object. Expensive to use performance-wise.\n     * @private\n     */", "kind": "function", "description": "Update the local bounds of the object. Expensive to use performance-wise.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002054", "name": "calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [20186, 24093], "lineno": 729, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "calculateBounds", "scope": "global", "name": "calculateBounds"}, {"comment": "/**\n     * Transform points using matrix.\n     *\n     * @private\n     * @param {number[]} points - Points to transform\n     * @param {PIXI.Matrix} matrix - Transform matrix\n     */", "kind": "function", "description": "Transform points using matrix.", "access": "private", "meta": {"code": {"paramnames": ["points", "matrix"], "type": "MethodDefinition", "id": "astnode100002710", "name": "transformPoints"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [24284, 24636], "lineno": 860, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "Points to transform", "name": "points"}, {"type": {"names": ["PIXI.Matrix"]}, "description": "Transform matrix", "name": "matrix"}], "longname": "transformPoints", "scope": "global", "name": "transformPoints"}, {"comment": "/**\n     * Add colors.\n     *\n     * @private\n     * @param {number[]} colors - List of colors to add to\n     * @param {number} color - Color to add\n     * @param {number} alpha - Alpha to use\n     * @param {number} size - Number of colors to add\n     */", "kind": "function", "description": "Add colors.", "access": "private", "meta": {"code": {"paramnames": ["colors", "color", "alpha", "size"], "type": "MethodDefinition", "id": "astnode100002795", "name": "addColors"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [24901, 25212], "lineno": 881, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "List of colors to add to", "name": "colors"}, {"type": {"names": ["number"]}, "description": "Color to add", "name": "color"}, {"type": {"names": ["number"]}, "description": "Alpha to use", "name": "alpha"}, {"type": {"names": ["number"]}, "description": "Number of colors to add", "name": "size"}], "longname": "addColors", "scope": "global", "name": "addColors"}, {"comment": "/**\n     * Add texture id that the shader/fragment wants to use.\n     *\n     * @private\n     * @param {number[]} textureIds\n     * @param {number} id\n     * @param {number} size\n     */", "kind": "function", "description": "Add texture id that the shader/fragment wants to use.", "access": "private", "meta": {"code": {"paramnames": ["textureIds", "id", "size"], "type": "MethodDefinition", "id": "astnode100002838", "name": "addTextureIds"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [25408, 25535], "lineno": 902, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "name": "textureIds"}, {"type": {"names": ["number"]}, "name": "id"}, {"type": {"names": ["number"]}, "name": "size"}], "longname": "addTextureIds", "scope": "global", "name": "addTextureIds"}, {"comment": "/**\n     * Generates the UVs for a shape.\n     *\n     * @private\n     * @param {number[]} verts - Vertices\n     * @param {number[]} uvs - UVs\n     * @param {PIXI.Texture} texture - Reference to Texture\n     * @param {number} start - Index buffer start index.\n     * @param {number} size - The size/length for index buffer.\n     * @param {PIXI.Matrix} [matrix] - Optional transform for all points.\n     */", "kind": "function", "description": "Generates the UVs for a shape.", "access": "private", "meta": {"code": {"paramnames": ["verts", "uvs", "texture", "start", "size", "matrix"], "type": "MethodDefinition", "id": "astnode100002857", "name": "addUvs"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsGeometry.js", "range": [25950, 26522], "lineno": 921, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<number>"]}, "description": "Vertices", "name": "verts"}, {"type": {"names": ["Array.<number>"]}, "description": "UVs", "name": "uvs"}, {"type": {"names": ["PIXI.Texture"]}, "description": "Reference to Texture", "name": "texture"}, {"type": {"names": ["number"]}, "description": "Index buffer start index.", "name": "start"}, {"type": {"names": ["number"]}, "description": "The size/length for index buffer.", "name": "size"}, {"optional": true, "type": {"names": ["PIXI.Matrix"]}, "description": "Optional transform for all points.", "name": "matrix"}], "longname": "addUvs", "scope": "global", "name": "addUvs"}, {"comment": "/**\n     * Creates a new GraphicsData object with the same values as this one.\n     *\n     * @return {PIXI.GraphicsData} Cloned GraphicsData object\n     */", "kind": "function", "description": "Creates a new GraphicsData object with the same values as this one.", "returns": [{"type": {"names": ["PIXI.GraphicsData"]}, "description": "Cloned GraphicsData object"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000064", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsData.js", "range": [1659, 1826], "lineno": 66, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Destroys the Graphics data.\n     */", "kind": "function", "description": "Destroys the Graphics data.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000083", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "GraphicsData.js", "range": [1883, 2111], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Creates a new Graphics object with the same values as this one.\n     * Note that the only the properties of the object are cloned, not its transform (position,scale,etc)\n     *\n     * @return {PIXI.Graphics} A clone of the graphics object\n     */", "kind": "function", "description": "Creates a new Graphics object with the same values as this one.\nNote that the only the properties of the object are cloned, not its transform (position,scale,etc)", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "A clone of the graphics object"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000206", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [4834, 4925], "lineno": 174, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @param {number} [width=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @param {number} [alignment=1] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n     * @param {boolean} [native=false] - If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\nmethod or the drawCircle() method.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["width", "color", "alpha", "alignment", "native"], "type": "MethodDefinition", "id": "astnode100000279", "name": "lineStyle"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [6726, 6927], "lineno": 248, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "width of the line to draw, will update the objects stored style", "name": "width"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "color of the line to draw, will update the objects stored style", "name": "color"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "alpha of the line to draw, will update the objects stored style", "name": "alpha"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)", "name": "alignment"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "If true the lines will be draw using LINES instead of TRIANGLE_STRIP", "name": "native"}], "longname": "lineStyle", "scope": "global", "name": "lineStyle"}, {"comment": "/**\n     * Like line style but support texture for line fill.\n     *\n     * @param {number} [width=0] - width of the line to draw, will update the objects stored style\n     * @param {PIXI.Texture} [texture=PIXI.Texture.WHITE] - Texture to use\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @param {PIXI.Matrix} [matrix=null] Texture matrix to transform texture\n     * @param {number} [alignment=0.5] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n     * @param {boolean} [native=false] - If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Like line style but support texture for line fill.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["width", "texture", "color", "alpha", "matrix", "alignment", "native"], "type": "MethodDefinition", "id": "astnode100000314", "name": "lineTextureStyle"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [7768, 8563], "lineno": 267, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "width of the line to draw, will update the objects stored style", "name": "width"}, {"optional": true, "defaultvalue": "PIXI.Texture.WHITE", "type": {"names": ["PIXI.Texture"]}, "description": "Texture to use", "name": "texture"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "color of the line to draw, will update the objects stored style", "name": "color"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "alpha of the line to draw, will update the objects stored style", "name": "alpha"}, {"optional": true, "defaultvalue": null, "type": {"names": ["PIXI.Matrix"]}, "description": "Texture matrix to transform texture", "name": "matrix"}, {"optional": true, "defaultvalue": 0.5, "type": {"names": ["number"]}, "description": "alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)", "name": "alignment"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "If true the lines will be draw using LINES instead of TRIANGLE_STRIP", "name": "native"}], "longname": "lineTextureStyle", "scope": "global", "name": "lineTextureStyle"}, {"comment": "/**\n     * Start a polygon object internally\n     * @private\n     */", "kind": "function", "description": "Start a polygon object internally", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000415", "name": "startPoly"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [8642, 9230], "lineno": 308, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "startPoly", "scope": "global", "name": "startPoly"}, {"comment": "/**\n     * Finish the polygon object.\n     * @private\n     */", "kind": "function", "description": "Finish the polygon object.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000505", "name": "finishPoly"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [9302, 9644], "lineno": 334, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "finishPoly", "scope": "global", "name": "finishPoly"}, {"comment": "/**\n     * Moves the current drawing position to x, y.\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Moves the current drawing position to x, y.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000550", "name": "moveTo"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [9918, 10070], "lineno": 357, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "the X coordinate to move to", "name": "x"}, {"type": {"names": ["number"]}, "description": "the Y coordinate to move to", "name": "y"}], "longname": "moveTo", "scope": "global", "name": "moveTo"}, {"comment": "/**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draws a line using the current line style from the current drawing position to (x, y);\nThe current drawing position is then set to (x, y).", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000583", "name": "lineTo"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [10446, 10844], "lineno": 374, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "the X coordinate to draw to", "name": "x"}, {"type": {"names": ["number"]}, "description": "the Y coordinate to draw to", "name": "y"}], "longname": "lineTo", "scope": "global", "name": "lineTo"}, {"comment": "/**\n     * Initialize the curve\n     *\n     * @private\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     */", "kind": "function", "description": "Initialize the curve", "access": "private", "meta": {"code": {"paramnames": ["x", "y"], "type": "MethodDefinition", "id": "astnode100000648", "name": "_initCurve"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [10975, 11257], "lineno": 401, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "name": "x"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "name": "y"}], "longname": "_initCurve", "scope": "global", "name": "_initCurve"}, {"comment": "/**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Calculate the points for a quadratic bezier curve and then draws it.\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["cpX", "cpY", "toX", "toY"], "type": "MethodDefinition", "id": "astnode100000692", "name": "quadraticCurveTo"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [11733, 12025], "lineno": 426, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}], "longname": "quadraticCurveTo", "scope": "global", "name": "quadraticCurveTo"}, {"comment": "/**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Calculate the points for a bezier curve and then draws it.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["cpX", "cpY", "cpX2", "cpY2", "toX", "toY"], "type": "MethodDefinition", "id": "astnode100000739", "name": "bezierCurveTo"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [12498, 12691], "lineno": 453, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Second Control point x", "name": "cpX2"}, {"type": {"names": ["number"]}, "description": "Second Control point y", "name": "cpY2"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}], "longname": "bezierCurveTo", "scope": "global", "name": "bezierCurveTo"}, {"comment": "/**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "The arcTo() method creates an arc/curve between two tangents on the canvas.\n\n\"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x1", "y1", "x2", "y2", "radius"], "type": "MethodDefinition", "id": "astnode100000772", "name": "arcTo"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [13304, 13724], "lineno": 474, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The x-coordinate of the beginning of the arc", "name": "x1"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the beginning of the arc", "name": "y1"}, {"type": {"names": ["number"]}, "description": "The x-coordinate of the end of the arc", "name": "x2"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the end of the arc", "name": "y2"}, {"type": {"names": ["number"]}, "description": "The radius of the arc", "name": "radius"}], "longname": "arcTo", "scope": "global", "name": "arcTo"}, {"comment": "/**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "The arc method creates an arc/curve (used to create circles, or parts of circles).", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["cx", "cy", "radius", "startAngle", "endAngle", "anticlockwise"], "type": "MethodDefinition", "id": "astnode100000841", "name": "arc"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [14540, 15772], "lineno": 506, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The x-coordinate of the center of the circle", "name": "cx"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the center of the circle", "name": "cy"}, {"type": {"names": ["number"]}, "description": "The radius of the circle", "name": "radius"}, {"type": {"names": ["number"]}, "description": "The starting angle, in radians (0 is at the 3 o'clock position\n of the arc's circle)", "name": "startAngle"}, {"type": {"names": ["number"]}, "description": "The ending angle, in radians", "name": "endAngle"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Specifies whether the drawing should be\n counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n indicates counter-clockwise.", "name": "anticlockwise"}], "longname": "arc", "scope": "global", "name": "arc"}, {"comment": "/**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n     * (such as lineTo() or drawCircle()) use when drawing.\n     *\n     * @param {number} [color=0] - the color of the fill\n     * @param {number} [alpha=1] - the alpha of the fill\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Specifies a simple one-color fill that subsequent calls to other Graphics methods\n(such as lineTo() or drawCircle()) use when drawing.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["color", "alpha"], "type": "MethodDefinition", "id": "astnode100000996", "name": "beginFill"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [16148, 16258], "lineno": 561, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "the color of the fill", "name": "color"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "the alpha of the fill", "name": "alpha"}], "longname": "beginFill", "scope": "global", "name": "beginFill"}, {"comment": "/**\n     * Begin the texture fill\n     *\n     * @param {PIXI.Texture} [texture=PIXI.Texture.WHITE] - Texture to fill\n     * @param {number} [color=0xffffff] - Background to fill behind texture\n     * @param {number} [alpha=1] - Alpha of fill\n     * @param {PIXI.Matrix} [matrix=null] - Transform matrix\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Begin the texture fill", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["texture", "color", "alpha", "matrix"], "type": "MethodDefinition", "id": "astnode100001016", "name": "beginTextureFill"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [16663, 17319], "lineno": 575, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "defaultvalue": "PIXI.Texture.WHITE", "type": {"names": ["PIXI.Texture"]}, "description": "Texture to fill", "name": "texture"}, {"optional": true, "defaultvalue": "0xffffff", "type": {"names": ["number"]}, "description": "Background to fill behind texture", "name": "color"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "Alpha of fill", "name": "alpha"}, {"optional": true, "defaultvalue": null, "type": {"names": ["PIXI.Matrix"]}, "description": "Transform matrix", "name": "matrix"}], "longname": "beginTextureFill", "scope": "global", "name": "beginTextureFill"}, {"comment": "/**\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001098", "name": "endFill"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [17541, 17645], "lineno": 613, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "endFill", "scope": "global", "name": "endFill"}, {"comment": "/**\n     * Draws a rectangle shape.\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draws a rectangle shape.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y", "width", "height"], "type": "MethodDefinition", "id": "astnode100001116", "name": "drawRect"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [18052, 18160], "lineno": 631, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The X coord of the top-left of the rectangle", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coord of the top-left of the rectangle", "name": "y"}, {"type": {"names": ["number"]}, "description": "The width of the rectangle", "name": "width"}, {"type": {"names": ["number"]}, "description": "The height of the rectangle", "name": "height"}], "longname": "drawRect", "scope": "global", "name": "drawRect"}, {"comment": "/**\n     * Draw a rectangle shape with rounded/beveled corners.\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @param {number} radius - Radius of the rectangle corners\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draw a rectangle shape with rounded/beveled corners.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y", "width", "height", "radius"], "type": "MethodDefinition", "id": "astnode100001135", "name": "drawRoundedRect"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [18659, 18797], "lineno": 646, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The X coord of the top-left of the rectangle", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coord of the top-left of the rectangle", "name": "y"}, {"type": {"names": ["number"]}, "description": "The width of the rectangle", "name": "width"}, {"type": {"names": ["number"]}, "description": "The height of the rectangle", "name": "height"}, {"type": {"names": ["number"]}, "description": "Radius of the rectangle corners", "name": "radius"}], "longname": "drawRoundedRect", "scope": "global", "name": "drawRoundedRect"}, {"comment": "/**\n     * Draws a circle.\n     *\n     * @param {number} x - The X coordinate of the center of the circle\n     * @param {number} y - The Y coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draws a circle.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y", "radius"], "type": "MethodDefinition", "id": "astnode100001156", "name": "drawCircle"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [19134, 19227], "lineno": 659, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the center of the circle", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the center of the circle", "name": "y"}, {"type": {"names": ["number"]}, "description": "The radius of the circle", "name": "radius"}], "longname": "drawCircle", "scope": "global", "name": "drawCircle"}, {"comment": "/**\n     * Draws an ellipse.\n     *\n     * @param {number} x - The X coordinate of the center of the ellipse\n     * @param {number} y - The Y coordinate of the center of the ellipse\n     * @param {number} width - The half width of the ellipse\n     * @param {number} height - The half height of the ellipse\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draws an ellipse.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y", "width", "height"], "type": "MethodDefinition", "id": "astnode100001173", "name": "drawEllipse"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [19635, 19744], "lineno": 673, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "The X coordinate of the center of the ellipse", "name": "x"}, {"type": {"names": ["number"]}, "description": "The Y coordinate of the center of the ellipse", "name": "y"}, {"type": {"names": ["number"]}, "description": "The half width of the ellipse", "name": "width"}, {"type": {"names": ["number"]}, "description": "The half height of the ellipse", "name": "height"}], "longname": "drawEllipse", "scope": "global", "name": "drawEllipse"}, {"comment": "/**\n     * Draws a polygon using the given path.\n     *\n     * @param {number[]|PIXI.Point[]|PIXI.Polygon} path - The path data used to construct the polygon.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draws a polygon using the given path.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["path"], "type": "MethodDefinition", "id": "astnode100001192", "name": "drawPolygon"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [20005, 21002], "lineno": 684, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["Array.<number>", "Array.<PIXI.Point>", "PIXI.Polygon"]}, "description": "The path data used to construct the polygon.", "name": "path"}], "longname": "drawPolygon", "scope": "global", "name": "drawPolygon"}, {"comment": "/**\n     * Draw any shape.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - Shape to draw\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draw any shape.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["shape"], "type": "MethodDefinition", "id": "astnode100001279", "name": "drawShape"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [21251, 21663], "lineno": 726, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Circle", "PIXI.Ellipse", "PIXI.Polygon", "PIXI.Rectangle", "PIXI.RoundedRectangle"]}, "description": "Shape to draw", "name": "shape"}], "longname": "drawShape", "scope": "global", "name": "drawShape"}, {"comment": "/**\n     * Draw a star shape with an arbitrary number of points.\n     *\n     * @param {number} x - Center X position of the star\n     * @param {number} y - Center Y position of the star\n     * @param {number} points - The number of points of the star, must be > 1\n     * @param {number} radius - The outer radius of the star\n     * @param {number} [innerRadius] - The inner radius between points, default half `radius`\n     * @param {number} [rotation=0] - The rotation of the star in radians, where 0 is vertical\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Draw a star shape with an arbitrary number of points.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": ["x", "y", "points", "radius", "innerRadius", "rotation"], "type": "MethodDefinition", "id": "astnode100001327", "name": "drawStar"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [22279, 22436], "lineno": 757, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["number"]}, "description": "Center X position of the star", "name": "x"}, {"type": {"names": ["number"]}, "description": "Center Y position of the star", "name": "y"}, {"type": {"names": ["number"]}, "description": "The number of points of the star, must be > 1", "name": "points"}, {"type": {"names": ["number"]}, "description": "The outer radius of the star", "name": "radius"}, {"optional": true, "type": {"names": ["number"]}, "description": "The inner radius between points, default half `radius`", "name": "innerRadius"}, {"optional": true, "defaultvalue": 0, "type": {"names": ["number"]}, "description": "The rotation of the star in radians, where 0 is vertical", "name": "rotation"}], "longname": "drawStar", "scope": "global", "name": "drawStar"}, {"comment": "/**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */", "kind": "function", "description": "Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "This Graphics object. Good for chaining method calls"}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001352", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [22658, 22858], "lineno": 767, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\n     * masked with gl.scissor.\n     *\n     * @returns {boolean} True if only 1 rect.\n     */", "kind": "function", "description": "True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\nmasked with gl.scissor.", "returns": [{"type": {"names": ["boolean"]}, "description": "True if only 1 rect."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001389", "name": "isFastRect"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [23057, 23281], "lineno": 785, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "isFastRect", "scope": "global", "name": "isFastRect"}, {"comment": "/**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.Renderer} renderer - The renderer\n     */", "kind": "function", "description": "Renders the object using the WebGL renderer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100001395", "name": "_render"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [23431, 28403], "lineno": 800, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Renderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "_render", "scope": "global", "name": "_render"}, {"comment": "/**\n     * Retrieves the bounds of the graphic shape as a rectangle object\n     *\n     * @private\n     */", "kind": "function", "description": "Retrieves the bounds of the graphic shape as a rectangle object", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001955", "name": "_calculateBounds"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [28519, 28701], "lineno": 958, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "_calculateBounds", "scope": "global", "name": "_calculateBounds"}, {"comment": "/**\n     * Tests if a point is inside this graphics object\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */", "kind": "function", "description": "Tests if a point is inside this graphics object", "returns": [{"type": {"names": ["boolean"]}, "description": "the result of the test"}], "meta": {"code": {"paramnames": ["point"], "type": "MethodDefinition", "id": "astnode100001994", "name": "containsPoint"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [28886, 29056], "lineno": 972, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Point"]}, "description": "the point to test", "name": "point"}], "longname": "containsPoint", "scope": "global", "name": "containsPoint"}, {"comment": "/**\n     * Recalcuate the tint by applying tin to batches using Graphics tint.\n     * @private\n     */", "kind": "function", "description": "Recalcuate the tint by applying tin to batches using Graphics tint.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002020", "name": "calculateTints"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [29169, 29986], "lineno": 983, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "calculateTints", "scope": "global", "name": "calculateTints"}, {"comment": "/**\n     * If there's a transform update or a change to the shape of the\n     * geometry, recaculate the vertices.\n     * @private\n     */", "kind": "function", "description": "If there's a transform update or a change to the shape of the\ngeometry, recaculate the vertices.", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002147", "name": "calculateVertices"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [30135, 30954], "lineno": 1016, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "calculateVertices", "scope": "global", "name": "calculateVertices"}, {"comment": "/**\n     * Closes the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */", "kind": "function", "description": "Closes the current path.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002293", "name": "closePath"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [31062, 31315], "lineno": 1054, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "closePath", "scope": "global", "name": "closePath"}, {"comment": "/**\n     * Apply a matrix to the positional data.\n     *\n     * @param {PIXI.Matrix} matrix - Matrix to use for transform current shape.\n     * @return {PIXI.Graphics} Returns itself.\n     */", "kind": "function", "description": "Apply a matrix to the positional data.", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": ["matrix"], "type": "MethodDefinition", "id": "astnode100002319", "name": "setMatrix"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [31517, 31599], "lineno": 1073, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"type": {"names": ["PIXI.Matrix"]}, "description": "Matrix to use for transform current shape.", "name": "matrix"}], "longname": "setMatrix", "scope": "global", "name": "setMatrix"}, {"comment": "/**\n     * Begin adding holes to the last draw shape\n     * IMPORTANT: holes must be fully inside a shape to work\n     * Also weirdness ensues if holes overlap!\n     * @return {PIXI.Graphics} Returns itself.\n     */", "kind": "function", "description": "Begin adding holes to the last draw shape\nIMPORTANT: holes must be fully inside a shape to work\nAlso weirdness ensues if holes overlap!", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002332", "name": "beginHole"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [31825, 31928], "lineno": 1086, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "beginHole", "scope": "global", "name": "beginHole"}, {"comment": "/**\n     * End adding holes to the last draw shape\n     * @return {PIXI.Graphics} Returns itself.\n     */", "kind": "function", "description": "End adding holes to the last draw shape", "returns": [{"type": {"names": ["PIXI.Graphics"]}, "description": "Returns itself."}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100002349", "name": "endHole"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [32044, 32146], "lineno": 1098, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [], "longname": "endHole", "scope": "global", "name": "endHole"}, {"comment": "/**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     * @param {boolean} [options.geometry=false] - if set to true, the geometry object will be\n     *  be destroyed.\n     */", "kind": "function", "description": "Destroys the Graphics object.", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100002366", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Graphics.js", "range": [32998, 33619], "lineno": 1120, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "params": [{"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all\n options have been set to that value", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have\n their destroy method called as well. 'options' will be passed on to those calls.", "name": "options.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the texture of the child sprite", "name": "options.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if options.children is set to true\n Should it destroy the base texture of the child sprite", "name": "options.baseTexture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, the geometry object will be\n be destroyed.", "name": "options.geometry"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "_segmentsCount", "memberof": "GRAPHICS_CURVES", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000015", "name": "_segmentsCount"}, "vars": {"result": "GRAPHICS_CURVES._segmentsCount~result"}, "columnno": 4, "filename": "const.js", "range": [884, 1307], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src"}, "longname": "GRAPHICS_CURVES._segmentsCount", "scope": "static"}, {"comment": "/**\n     * Clones the object\n     *\n     * @return {PIXI.LineStyle}\n     */", "kind": "function", "description": "Clones the object", "returns": [{"type": {"names": ["PIXI.LineStyle"]}}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000011", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "LineStyle.js", "range": [279, 633], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/styles"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Reset the line style to default.\n     */", "kind": "function", "description": "Reset the line style to default.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000086", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "LineStyle.js", "range": [694, 1370], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/styles"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * Clones the object\n     *\n     * @return {PIXI.FillStyle}\n     */", "kind": "function", "description": "Clones the object", "returns": [{"type": {"names": ["PIXI.FillStyle"]}}], "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000019", "name": "clone"}, "vars": {"": null}, "columnno": 4, "filename": "FillStyle.js", "range": [280, 528], "lineno": 20, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/styles"}, "params": [], "longname": "clone", "scope": "global", "name": "clone"}, {"comment": "/**\n     * Reset\n     */", "kind": "function", "description": "Reset", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000070", "name": "reset"}, "vars": {"": null}, "columnno": 4, "filename": "FillStyle.js", "range": [563, 1444], "lineno": 36, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/styles"}, "params": [], "longname": "reset", "scope": "global", "name": "reset"}, {"comment": "/**\n     * Destroy and don't use after this\n     */", "kind": "function", "description": "Destroy and don't use after this", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000106", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "FillStyle.js", "range": [1506, 1584], "lineno": 82, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/styles"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "", "kind": "function", "name": "build", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000008", "name": "build"}, "vars": {"graphicsData.points": "graphicsData.points"}, "columnno": 4, "filename": "buildPoly.js", "range": [519, 615], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.build", "scope": "static"}, {"comment": "", "kind": "function", "name": "triangulate", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000025", "name": "triangulate"}, "vars": {"holeArray": "module.exports.triangulate~holeArray", "i": "module.exports.triangulate~i", "holes": "module.exports.triangulate~holes", "points": "module.exports.triangulate~points", "verts": "module.exports.triangulate~verts", "vertPos": "module.exports.triangulate~vertPos", "indices": "module.exports.triangulate~indices", "hole": "module.exports.triangulate~hole", "triangles": "module.exports.triangulate~triangles"}, "columnno": 4, "filename": "buildPoly.js", "range": [622, 1792], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.triangulate", "scope": "static"}, {"comment": "", "kind": "function", "name": "build", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000008", "name": "build"}, "vars": {"points.length": "module.exports.build~points.length", "height": "module.exports.build~height", "width": "module.exports.build~width", "points": "module.exports.build~points", "radius": "module.exports.build~radius", "y": "module.exports.build~y", "x": "module.exports.build~x", "rrectData": "module.exports.build~rrectData"}, "columnno": 4, "filename": "buildRoundedRectangle.js", "range": [529, 1522], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.build", "scope": "static"}, {"comment": "", "kind": "function", "name": "triangulate", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000151", "name": "triangulate"}, "vars": {"triangles": "module.exports.triangulate~triangles", "i": "module.exports.triangulate~i", "j": "module.exports.triangulate~j", "points": "module.exports.triangulate~points", "verts": "module.exports.triangulate~verts", "indices": "module.exports.triangulate~indices", "vecPos": "module.exports.triangulate~vecPos"}, "columnno": 4, "filename": "buildRoundedRectangle.js", "range": [1529, 2295], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.triangulate", "scope": "static"}, {"comment": "/**\n * Calculate a single point for a quadratic bezier curve.\n * Utility function used by quadraticBezierCurve.\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} n1 - first number\n * @param {number} n2 - second number\n * @param {number} perc - percentage\n * @return {number} the result\n *\n */", "access": "private", "kind": "function", "description": "Calculate a single point for a quadratic bezier curve.\nUtility function used by quadraticBezierCurve.\nIgnored from docs since it is not directly exposed.", "ignore": true, "returns": [{"type": {"names": ["number"]}, "description": "the result"}], "meta": {"code": {"paramnames": ["n1", "n2", "perc"], "type": "FunctionDeclaration", "id": "astnode100000269", "name": "getPt"}, "vars": {"diff": "getPt~diff"}, "columnno": 0, "filename": "buildRoundedRectangle.js", "range": [2644, 2734], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "first number", "name": "n1"}, {"type": {"names": ["number"]}, "description": "second number", "name": "n2"}, {"type": {"names": ["number"]}, "description": "percentage", "name": "perc"}], "longname": "getPt", "scope": "global", "name": "getPt"}, {"comment": "/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */", "access": "private", "kind": "function", "description": "Calculate the points for a quadratic bezier curve. (helper function..)\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n\nIgnored from docs since it is not directly exposed.", "ignore": true, "returns": [{"type": {"names": ["Array.<number>"]}, "description": "an array of points"}], "meta": {"code": {"paramnames": ["fromX", "fromY", "cpX", "cpY", "toX", "toY", "out"], "type": "FunctionDeclaration", "id": "astnode100000287", "name": "quadraticBezierCurve"}, "vars": {"yb": "quadraticBezierCurve~yb", "i": "quadraticBezierCurve~i", "ya": "quadraticBezierCurve~ya", "xa": "quadraticBezierCurve~xa", "n": "quadraticBezierCurve~n", "xb": "quadraticBezierCurve~xb", "points": "quadraticBezierCurve~points", "y": "quadraticBezierCurve~y", "x": "quadraticBezierCurve~x", "j": "quadraticBezierCurve~j"}, "columnno": 0, "filename": "buildRoundedRectangle.js", "range": [3402, 3985], "lineno": 103, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Origin point x", "name": "fromX"}, {"type": {"names": ["number"]}, "description": "Origin point x", "name": "fromY"}, {"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array.<number>"]}, "description": "The output array to add points into. If not passed, a new array is created.", "name": "out"}], "longname": "quadraticBezierCurve", "scope": "global", "name": "quadraticBezierCurve"}, {"comment": "/**\n     * Calculate length of quadratic curve\n     * @see {@link http://www.malczak.linuxpl.com/blog/quadratic-bezier-curve-length/}\n     * for the detailed explanation of math behind this.\n     *\n     * @private\n     * @param {number} fromX - x-coordinate of curve start point\n     * @param {number} fromY - y-coordinate of curve start point\n     * @param {number} cpX - x-coordinate of curve control point\n     * @param {number} cpY - y-coordinate of curve control point\n     * @param {number} toX - x-coordinate of curve end point\n     * @param {number} toY - y-coordinate of curve end point\n     * @return {number} Length of quadratic curve\n     */", "kind": "function", "description": "Calculate length of quadratic curve", "returns": [{"type": {"names": ["number"]}, "description": "Length of quadratic curve"}], "access": "private", "see": ["{@link http://www.malczak.linuxpl.com/blog/quadratic-bezier-curve-length/}\nfor the detailed explanation of math behind this."], "meta": {"code": {"paramnames": ["fromX", "fromY", "cpX", "cpY", "toX", "toY"], "type": "MethodDefinition", "id": "astnode100000010", "name": "curveLength"}, "vars": {"": null}, "columnno": 4, "filename": "QuadraticUtils.js", "range": [809, 1636], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "x-coordinate of curve start point", "name": "fromX"}, {"type": {"names": ["number"]}, "description": "y-coordinate of curve start point", "name": "fromY"}, {"type": {"names": ["number"]}, "description": "x-coordinate of curve control point", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "y-coordinate of curve control point", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "x-coordinate of curve end point", "name": "toX"}, {"type": {"names": ["number"]}, "description": "y-coordinate of curve end point", "name": "toY"}], "longname": "curveLength", "scope": "global", "name": "curveLength"}, {"comment": "/**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @param {number[]} points - Points to add segments to.\n     */", "kind": "function", "description": "Calculate the points for a quadratic bezier curve and then draws it.\nBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c", "meta": {"code": {"paramnames": ["cpX", "cpY", "toX", "toY", "points"], "type": "MethodDefinition", "id": "astnode100000182", "name": "curveTo"}, "vars": {"": null}, "columnno": 4, "filename": "QuadraticUtils.js", "range": [2089, 2729], "lineno": 60, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}, {"type": {"names": ["Array.<number>"]}, "description": "Points to add segments to.", "name": "points"}], "longname": "curveTo", "scope": "global", "name": "curveTo"}, {"comment": "/**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {object} If the arc length is valid, return center of circle, radius and other info otherwise `null`.\n     */", "kind": "function", "description": "The arcTo() method creates an arc/curve between two tangents on the canvas.\n\n\"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!", "returns": [{"type": {"names": ["object"]}, "description": "If the arc length is valid, return center of circle, radius and other info otherwise `null`."}], "meta": {"code": {"paramnames": ["x1", "y1", "x2", "y2", "radius", "points"], "type": "MethodDefinition", "id": "astnode100000014", "name": "curveTo"}, "vars": {"": null}, "columnno": 4, "filename": "ArcUtils.js", "range": [814, 2202], "lineno": 23, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "The x-coordinate of the beginning of the arc", "name": "x1"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the beginning of the arc", "name": "y1"}, {"type": {"names": ["number"]}, "description": "The x-coordinate of the end of the arc", "name": "x2"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the end of the arc", "name": "y2"}, {"type": {"names": ["number"]}, "description": "The radius of the arc", "name": "radius"}], "longname": "curveTo", "scope": "global", "name": "curveTo"}, {"comment": "/**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} startX - Start x location of arc\n     * @param {number} startY - Start y location of arc\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} anticlockwise - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @param {number} n - Number of segments\n     * @param {number[]} points - Collection of points to add to\n     */", "kind": "function", "description": "The arc method creates an arc/curve (used to create circles, or parts of circles).", "meta": {"code": {"paramnames": ["startX", "startY", "cx", "cy", "radius", "startAngle", "endAngle", "anticlockwise", "points"], "type": "MethodDefinition", "id": "astnode100000293", "name": "arc"}, "vars": {"": null}, "columnno": 4, "filename": "ArcUtils.js", "range": [3149, 4109], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Start x location of arc", "name": "startX"}, {"type": {"names": ["number"]}, "description": "Start y location of arc", "name": "startY"}, {"type": {"names": ["number"]}, "description": "The x-coordinate of the center of the circle", "name": "cx"}, {"type": {"names": ["number"]}, "description": "The y-coordinate of the center of the circle", "name": "cy"}, {"type": {"names": ["number"]}, "description": "The radius of the circle", "name": "radius"}, {"type": {"names": ["number"]}, "description": "The starting angle, in radians (0 is at the 3 o'clock position\n of the arc's circle)", "name": "startAngle"}, {"type": {"names": ["number"]}, "description": "The ending angle, in radians", "name": "endAngle"}, {"type": {"names": ["boolean"]}, "description": "Specifies whether the drawing should be\n counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n indicates counter-clockwise.", "name": "anticlockwise"}, {"type": {"names": ["number"]}, "description": "Number of segments", "name": "n"}, {"type": {"names": ["Array.<number>"]}, "description": "Collection of points to add to", "name": "points"}], "longname": "arc", "scope": "global", "name": "arc"}, {"comment": "/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */", "access": "private", "kind": "function", "description": "Builds a line to draw\n\nIgnored from docs since it is not directly exposed.", "memberof": "module", "ignore": true, "meta": {"code": {"paramnames": ["graphicsData", "graphicsGeometry"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "buildLine.js", "range": [492, 732], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["PIXI.WebGLGraphicsData"]}, "description": "The graphics object containing all the necessary properties", "name": "graphicsData"}, {"type": {"names": ["object"]}, "description": "an object containing all the webGL-specific information to create this shape", "name": "webGLData"}, {"type": {"names": ["object"]}, "description": "an object containing all the webGL-specific information to create nativeLines", "name": "webGLDataNativeLines"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "/**\n * Builds a line to draw using the polygon method.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */", "access": "private", "kind": "function", "description": "Builds a line to draw using the polygon method.\n\nIgnored from docs since it is not directly exposed.", "ignore": true, "meta": {"code": {"paramnames": ["graphicsData", "graphicsGeometry"], "type": "FunctionDeclaration", "id": "astnode100000029", "name": "buildLine"}, "vars": {"dist": "buildLine~dist", "lastPoint": "buildLine~lastPoint", "p1x": "buildLine~p1x", "p3x": "buildLine~p3x", "p3y": "buildLine~p3y", "b1": "buildLine~b1", "b2": "buildLine~b2", "p1y": "buildLine~p1y", "perpx": "buildLine~perpx", "perpy": "buildLine~perpy", "perp2y": "buildLine~perp2y", "style": "buildLine~style", "ratio": "buildLine~ratio", "px": "buildLine~px", "py": "buildLine~py", "width": "buildLine~width", "pdist": "buildLine~pdist", "denom": "buildLine~denom", "firstPoint": "buildLine~firstPoint", "perp2x": "buildLine~perp2x", "midPointY": "buildLine~midPointY", "midPointX": "buildLine~midPointX", "a1": "buildLine~a1", "a2": "buildLine~a2", "c2": "buildLine~c2", "c1": "buildLine~c1", "p2y": "buildLine~p2y", "p2x": "buildLine~p2x", "r1": "buildLine~r1", "r2": "buildLine~r2", "i": "buildLine~i", "indexStart": "buildLine~indexStart", "length": "buildLine~length", "points": "buildLine~points", "verts": "buildLine~verts", "indices": "buildLine~indices", "indexCount": "buildLine~indexCount", "perp3x": "buildLine~perp3x", "perp3y": "buildLine~perp3y"}, "columnno": 0, "filename": "buildLine.js", "range": [1095, 6429], "lineno": 36, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["PIXI.WebGLGraphicsData"]}, "description": "The graphics object containing all the necessary properties", "name": "graphicsData"}, {"type": {"names": ["object"]}, "description": "an object containing all the webGL-specific information to create this shape", "name": "webGLData"}], "longname": "buildLine", "scope": "global", "name": "buildLine"}, {"comment": "/**\n * Builds a line to draw using the gl.drawArrays(gl.LINES) method\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */", "access": "private", "kind": "function", "description": "Builds a line to draw using the gl.drawArrays(gl.LINES) method\n\nIgnored from docs since it is not directly exposed.", "ignore": true, "meta": {"code": {"paramnames": ["graphicsData", "graphicsGeometry"], "type": "FunctionDeclaration", "id": "astnode100001009", "name": "buildNativeLine"}, "vars": {"i": "buildNativeLine~i", "indexStart": "buildNativeLine~indexStart", "p1x": "buildNativeLine~p1x", "length": "buildNativeLine~length", "points": "buildNativeLine~points", "verts": "buildNativeLine~verts", "indices": "buildNativeLine~indices", "p1y": "buildNativeLine~p1y", "p2y": "buildNativeLine~p2y", "p2x": "buildNativeLine~p2x"}, "columnno": 0, "filename": "buildLine.js", "range": [6807, 7500], "lineno": 246, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["PIXI.WebGLGraphicsData"]}, "description": "The graphics object containing all the necessary properties", "name": "graphicsData"}, {"type": {"names": ["object"]}, "description": "an object containing all the webGL-specific information to create this shape", "name": "webGLData"}], "longname": "buildNativeLine", "scope": "global", "name": "buildNativeLine"}, {"comment": "/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number} n - Number of segments approximating the bezier curve\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */", "kind": "function", "description": "Calculate the points for a bezier curve and then draws it.\n\nIgnored from docs since it is not directly exposed.", "memberof": "module", "ignore": true, "returns": [{"type": {"names": ["Array.<number>"]}, "description": "Array of points of the curve"}], "meta": {"code": {"paramnames": ["fromX", "fromY", "cpX", "cpY", "cpX2", "cpY2", "toX", "toY", "n", "path"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "module.exports"}, "columnno": 0, "filename": "bezierCurveTo.js", "range": [688, 1303], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Starting point x", "name": "fromX"}, {"type": {"names": ["number"]}, "description": "Starting point y", "name": "fromY"}, {"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Second Control point x", "name": "cpX2"}, {"type": {"names": ["number"]}, "description": "Second Control point y", "name": "cpY2"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}, {"type": {"names": ["number"]}, "description": "Number of segments approximating the bezier curve", "name": "n"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array.<number>"]}, "description": "Path array to push points into", "name": "path"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "bezierCurveTo", "undocumented": true, "meta": {"code": {"paramnames": ["fromX", "fromY", "cpX", "cpY", "cpX2", "cpY2", "toX", "toY", "n", "path"], "type": "FunctionDeclaration", "id": "astnode100000003", "name": "bezierCurveTo"}, "vars": {"i": "bezierCurveTo~i", "j": "bezierCurveTo~j", "t2": "bezierCurveTo~t2", "t3": "bezierCurveTo~t3", "dt3": "bezierCurveTo~dt3", "dt2": "bezierCurveTo~dt2", "dt": "bezierCurveTo~dt"}, "columnno": 15, "filename": "bezierCurveTo.js", "range": [703, 1303], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [], "longname": "bezierCurveTo", "scope": "global"}, {"comment": "", "kind": "function", "name": "build", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000004", "name": "build"}, "vars": {"points.length": "module.exports.build~points.length", "height": "module.exports.build~height", "width": "module.exports.build~width", "rectData": "module.exports.build~rectData", "points": "module.exports.build~points", "y": "module.exports.build~y", "x": "module.exports.build~x"}, "columnno": 4, "filename": "buildRectangle.js", "range": [482, 971], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.build", "scope": "static"}, {"comment": "", "kind": "function", "name": "triangulate", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000071", "name": "triangulate"}, "vars": {"points": "module.exports.triangulate~points", "verts": "module.exports.triangulate~verts", "vertPos": "module.exports.triangulate~vertPos"}, "columnno": 4, "filename": "buildRectangle.js", "range": [978, 1438], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.triangulate", "scope": "static"}, {"comment": "/**\n     * Calculate length of bezier curve.\n     * Analytical solution is impossible, since it involves an integral that does not integrate in general.\n     * Therefore numerical solution is used.\n     *\n     * @private\n     * @param {number} fromX - Starting point x\n     * @param {number} fromY - Starting point y\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {number} Length of bezier curve\n     */", "kind": "function", "description": "Calculate length of bezier curve.\nAnalytical solution is impossible, since it involves an integral that does not integrate in general.\nTherefore numerical solution is used.", "access": "private", "returns": [{"type": {"names": ["number"]}, "description": "Length of bezier curve"}], "meta": {"code": {"paramnames": ["fromX", "fromY", "cpX", "cpY", "cpX2", "cpY2", "toX", "toY"], "type": "MethodDefinition", "id": "astnode100000010", "name": "curveLength"}, "vars": {"": null}, "columnno": 4, "filename": "BezierUtils.js", "range": [815, 1793], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Starting point x", "name": "fromX"}, {"type": {"names": ["number"]}, "description": "Starting point y", "name": "fromY"}, {"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Second Control point x", "name": "cpX2"}, {"type": {"names": ["number"]}, "description": "Second Control point y", "name": "cpY2"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}], "longname": "curveLength", "scope": "global", "name": "curveLength"}, {"comment": "/**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * Ignored from docs since it is not directly exposed.\n     *\n     * @ignore\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @param {number[]} points - Path array to push points into\n     */", "kind": "function", "description": "Calculate the points for a bezier curve and then draws it.\n\nIgnored from docs since it is not directly exposed.", "ignore": true, "meta": {"code": {"paramnames": ["cpX", "cpY", "cpX2", "cpY2", "toX", "toY", "points"], "type": "MethodDefinition", "id": "astnode100000213", "name": "curveTo"}, "vars": {"": null}, "columnno": 4, "filename": "BezierUtils.js", "range": [2328, 3242], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["number"]}, "description": "Control point x", "name": "cpX"}, {"type": {"names": ["number"]}, "description": "Control point y", "name": "cpY"}, {"type": {"names": ["number"]}, "description": "Second Control point x", "name": "cpX2"}, {"type": {"names": ["number"]}, "description": "Second Control point y", "name": "cpY2"}, {"type": {"names": ["number"]}, "description": "Destination point x", "name": "toX"}, {"type": {"names": ["number"]}, "description": "Destination point y", "name": "toY"}, {"type": {"names": ["Array.<number>"]}, "description": "Path array to push points into", "name": "points"}], "longname": "curveTo", "scope": "global", "name": "curveTo"}, {"comment": "", "kind": "function", "name": "build", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000008", "name": "build"}, "vars": {"points.length": "module.exports.build~points.length", "i": "module.exports.build~i", "totalSegs": "module.exports.build~totalSegs", "height": "module.exports.build~height", "seg": "module.exports.build~seg", "width": "module.exports.build~width", "points": "module.exports.build~points", "y": "module.exports.build~y", "x": "module.exports.build~x", "circleData": "module.exports.build~circleData"}, "columnno": 4, "filename": "buildCircle.js", "range": [485, 1673], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.build", "scope": "static"}, {"comment": "", "kind": "function", "name": "triangulate", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000189", "name": "triangulate"}, "vars": {"center": "module.exports.triangulate~center", "i": "module.exports.triangulate~i", "points": "module.exports.triangulate~points", "verts": "module.exports.triangulate~verts", "vertPos": "module.exports.triangulate~vertPos", "indices": "module.exports.triangulate~indices"}, "columnno": 4, "filename": "buildCircle.js", "range": [1680, 2219], "lineno": 66, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "longname": "module.exports.triangulate", "scope": "static"}, {"comment": "/**\n * Builds a complex polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.Graphics} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */", "access": "private", "kind": "function", "description": "Builds a complex polygon to draw\n\nIgnored from docs since it is not directly exposed.", "memberof": "module", "ignore": true, "meta": {"code": {"paramnames": ["graphicsData", "webGLData"], "type": "FunctionDeclaration", "id": "astnode100000006", "name": "module.exports"}, "columnno": 0, "filename": "buildComplexPoly.js", "range": [377, 1648], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [{"type": {"names": ["PIXI.Graphics"]}, "description": "The graphics object containing all the necessary properties", "name": "graphicsData"}, {"type": {"names": ["object"]}, "description": "an object containing all the webGL-specific information to create this shape", "name": "webGLData"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "buildComplexPoly", "undocumented": true, "meta": {"code": {"paramnames": ["graphicsData", "webGLData"], "type": "FunctionDeclaration", "id": "astnode100000007", "name": "buildComplexPoly"}, "vars": {"maxX": "buildComplexPoly~maxX", "maxY": "buildComplexPoly~maxY", "y": "buildComplexPoly~y", "webGLData.points": "webGLData.points", "i": "buildComplexPoly~i", "webGLData.alpha": "webGLData.alpha", "webGLData.color": "webGLData.color", "minX": "buildComplexPoly~minX", "minY": "buildComplexPoly~minY", "length": "buildComplexPoly~length", "points": "buildComplexPoly~points", "indices": "buildComplexPoly~indices", "x": "buildComplexPoly~x"}, "columnno": 15, "filename": "buildComplexPoly.js", "range": [392, 1648], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/graphics/src/utils"}, "params": [], "longname": "buildComplexPoly", "scope": "global"}, {"comment": "/**\n     * Register a middleware plugin for the application\n     * @static\n     * @param {PIXI.Application~Plugin} plugin - Plugin being installed\n     */", "kind": "function", "description": "Register a middleware plugin for the application", "meta": {"code": {"paramnames": ["plugin"], "type": "MethodDefinition", "id": "astnode100000107", "name": "registerPlugin"}, "vars": {"": null}, "columnno": 4, "filename": "Application.js", "range": [4216, 4300], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [{"type": {"names": ["PIXI.Application~Plugin"]}, "description": "Plugin being installed", "name": "plugin"}], "longname": "registerPlugin", "scope": "global", "name": "registerPlugin"}, {"comment": "/**\n     * Create the new renderer, this is here to overridden to support Canvas.\n     *\n     * @protected\n     * @param {Object} [options] See constructor for complete arguments\n     */", "kind": "function", "description": "Create the new renderer, this is here to overridden to support Canvas.", "access": "protected", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000120", "name": "createRenderer"}, "vars": {"": null}, "columnno": 4, "filename": "Application.js", "range": [4497, 4570], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "description": "See constructor for complete arguments", "name": "options"}], "longname": "createRenderer", "scope": "global", "name": "createRenderer"}, {"comment": "/**\n     * Render the current stage.\n     */", "kind": "function", "description": "Render the current stage.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000129", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "Application.js", "range": [4625, 4687], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Destroy and don't use after this.\n     * @param {Boolean} [removeView=false] Automatically remove canvas from DOM.\n     * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'stageOptions' will be passed on to those calls.\n     * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the texture of the child sprite\n     * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the base texture of the child sprite\n     */", "kind": "function", "description": "Destroy and don't use after this.", "meta": {"code": {"paramnames": ["removeView"], "type": "MethodDefinition", "id": "astnode100000163", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "Application.js", "range": [5971, 6433], "lineno": 152, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["Boolean"]}, "description": "Automatically remove canvas from DOM.", "name": "removeView"}, {"optional": true, "type": {"names": ["object", "boolean"]}, "description": "Options parameter. A boolean will act as if all options\n have been set to that value", "name": "stageOptions"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "if set to true, all the children will have their destroy\n method called as well. 'stageOptions' will be passed on to those calls.", "name": "stageOptions.children"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if stageOptions.children is set\n to true. Should it destroy the texture of the child sprite", "name": "stageOptions.texture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Only used for child Sprites if stageOptions.children is set\n to true. Should it destroy the base texture of the child sprite", "name": "stageOptions.baseTexture"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */", "kind": "function", "description": "Initialize the plugin with scope of application instance", "access": "private", "meta": {"code": {"paramnames": ["options"], "type": "MethodDefinition", "id": "astnode100000006", "name": "init"}, "vars": {"": null}, "columnno": 4, "filename": "ResizePlugin.js", "range": [297, 2006], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [{"optional": true, "type": {"names": ["object"]}, "description": "See application options", "name": "options"}], "longname": "init", "scope": "global", "name": "init"}, {"comment": "", "kind": "function", "name": "set", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000019", "name": "set"}, "vars": {"this._resizeTo": "module.exports#_resizeTo"}, "columnno": 16, "filename": "ResizePlugin.js", "range": [592, 933], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "longname": "set", "scope": "global"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000055", "name": "get"}, "columnno": 16, "filename": "ResizePlugin.js", "range": [951, 1035], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "longname": "get", "scope": "global"}, {"comment": "/**\n         * If `resizeTo` is set, calling this function\n         * will resize to the width and height of that element.\n         * @method PIXI.Application#resize\n         */", "kind": "function", "description": "If `resizeTo` is set, calling this function\nwill resize to the width and height of that element.", "memberof": "PIXI.Application", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src", "columnno": 8, "lineno": 40, "filename": "ResizePlugin.js"}, "longname": "PIXI.Application#resize", "scope": "instance", "name": "resize"}, {"comment": "", "kind": "function", "name": "resize", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000063", "name": "this.resize"}, "columnno": 8, "filename": "ResizePlugin.js", "range": [1248, 1896], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "longname": "module.exports#resize", "scope": "instance"}, {"comment": "/**\n     * Clean up the ticker, scoped to application\n     * @static\n     * @private\n     */", "kind": "function", "description": "Clean up the ticker, scoped to application", "access": "private", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000128", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "ResizePlugin.js", "range": [2109, 2195], "lineno": 78, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/app/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "TilingSprite", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000015", "value": "_renderCanvas", "name": "TilingSprite.prototype._renderCanvas"}, "vars": {"this.cachedTint": "TilingSprite#_renderCanvas#cachedTint", "context.globalAlpha": "TilingSprite#_renderCanvas~context.globalAlpha", "this._canvasPattern": "TilingSprite#_renderCanvas#_canvasPattern", "baseTexture": "TilingSprite#_renderCanvas~baseTexture", "modX": "TilingSprite#_renderCanvas~modX", "modY": "TilingSprite#_renderCanvas~modY", "this._textureID": "TilingSprite#_renderCanvas#_textureID", "transform": "TilingSprite#_renderCanvas~transform", "texture": "TilingSprite#_renderCanvas~texture", "anchorY": "TilingSprite#_renderCanvas~anchorY", "context.fillStyle": "TilingSprite#_renderCanvas~context.fillStyle", "source": "TilingSprite#_renderCanvas~source", "tempCanvas": "TilingSprite#_renderCanvas~tempCanvas", "anchorX": "TilingSprite#_renderCanvas~anchorX", "context": "TilingSprite#_renderCanvas~context", "this.tintedTexture": "TilingSprite#_renderCanvas#tintedTexture", "resolution": "TilingSprite#_renderCanvas~resolution", "baseTextureResolution": "TilingSprite#_renderCanvas~baseTextureResolution"}, "columnno": 0, "filename": "TilingSprite.js", "range": [304, 3127], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite-tiling/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "a reference to the canvas renderer", "name": "renderer"}], "longname": "TilingSprite#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "/**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */", "kind": "function", "description": "Basically this method just needs a sprite and a color and tints the sprite with the given color.", "memberof": "PIXI.CanvasTinter", "returns": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "The tinted canvas"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000016", "name": "getTintedTexture"}, "vars": {"texture.tintCache": "PIXI.CanvasTinter.getTintedTexture~texture.tintCache", "canvas": "PIXI.CanvasTinter.getTintedTexture~canvas", "canvas.tintId": "PIXI.CanvasTinter.getTintedTexture~canvas.tintId", "tintImage": "PIXI.CanvasTinter.getTintedTexture~tintImage", "color": "PIXI.CanvasTinter.getTintedTexture~color", "texture": "PIXI.CanvasTinter.getTintedTexture~texture", "stringColor": "PIXI.CanvasTinter.getTintedTexture~stringColor", "cachedTexture": "PIXI.CanvasTinter.getTintedTexture~cachedTexture", "tintImage.src": "PIXI.CanvasTinter.getTintedTexture~tintImage.src", "CanvasTinter.canvas": "PIXI.CanvasTinter.canvas", "texture.tintCache[undefined]": "PIXI.CanvasTinter.getTintedTexture~texture.tintCache[undefined]"}, "columnno": 4, "filename": "CanvasTinter.js", "range": [572, 1899], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["PIXI.Sprite"]}, "description": "the sprite to tint", "name": "sprite"}, {"type": {"names": ["number"]}, "description": "the color to use to tint the sprite with", "name": "color"}], "longname": "PIXI.CanvasTinter.getTintedTexture", "scope": "static", "name": "getTintedTexture"}, {"comment": "/**\n     * Tint a texture using the 'multiply' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */", "kind": "function", "description": "Tint a texture using the 'multiply' operation.", "memberof": "PIXI.CanvasTinter", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000176", "name": "tintWithMultiply"}, "vars": {"canvas.height": "canvas.height", "crop.width": "PIXI.CanvasTinter.tintWithMultiply~crop.width", "crop.y": "PIXI.CanvasTinter.tintWithMultiply~crop.y", "context.fillStyle": "PIXI.CanvasTinter.tintWithMultiply~context.fillStyle", "source": "PIXI.CanvasTinter.tintWithMultiply~source", "crop.height": "PIXI.CanvasTinter.tintWithMultiply~crop.height", "context.globalCompositeOperation": "PIXI.CanvasTinter.tintWithMultiply~context.globalCompositeOperation", "crop.x": "PIXI.CanvasTinter.tintWithMultiply~crop.x", "context": "PIXI.CanvasTinter.tintWithMultiply~context", "canvas.width": "canvas.width", "resolution": "PIXI.CanvasTinter.tintWithMultiply~resolution", "crop": "PIXI.CanvasTinter.tintWithMultiply~crop"}, "columnno": 4, "filename": "CanvasTinter.js", "range": [2211, 3476], "lineno": 78, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["PIXI.Texture"]}, "description": "the texture to tint", "name": "texture"}, {"type": {"names": ["number"]}, "description": "the color to use to tint the sprite with", "name": "color"}, {"type": {"names": ["HTMLCanvasElement"]}, "description": "the current canvas", "name": "canvas"}], "longname": "PIXI.CanvasTinter.tintWithMultiply", "scope": "static", "name": "tintWithMultiply"}, {"comment": "/**\n     * Tint a texture using the 'overlay' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */", "kind": "function", "description": "Tint a texture using the 'overlay' operation.", "memberof": "PIXI.CanvasTinter", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000374", "name": "tintWithOverlay"}, "vars": {"canvas.height": "canvas.height", "crop.width": "PIXI.CanvasTinter.tintWithOverlay~crop.width", "crop.y": "PIXI.CanvasTinter.tintWithOverlay~crop.y", "context.fillStyle": "PIXI.CanvasTinter.tintWithOverlay~context.fillStyle", "crop.height": "PIXI.CanvasTinter.tintWithOverlay~crop.height", "context.globalCompositeOperation": "PIXI.CanvasTinter.tintWithOverlay~context.globalCompositeOperation", "crop.x": "PIXI.CanvasTinter.tintWithOverlay~crop.x", "context": "PIXI.CanvasTinter.tintWithOverlay~context", "canvas.width": "canvas.width", "resolution": "PIXI.CanvasTinter.tintWithOverlay~resolution", "crop": "PIXI.CanvasTinter.tintWithOverlay~crop"}, "columnno": 4, "filename": "CanvasTinter.js", "range": [3787, 4836], "lineno": 137, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["PIXI.Texture"]}, "description": "the texture to tint", "name": "texture"}, {"type": {"names": ["number"]}, "description": "the color to use to tint the sprite with", "name": "color"}, {"type": {"names": ["HTMLCanvasElement"]}, "description": "the current canvas", "name": "canvas"}], "longname": "PIXI.CanvasTinter.tintWithOverlay", "scope": "static", "name": "tintWithOverlay"}, {"comment": "/**\n     * Tint a texture pixel per pixel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */", "kind": "function", "description": "Tint a texture pixel per pixel.", "memberof": "PIXI.CanvasTinter", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000542", "name": "tintWithPerPixel"}, "vars": {"canvas.height": "canvas.height", "b": "PIXI.CanvasTinter.tintWithPerPixel~b", "pixels[undefined]": "PIXI.CanvasTinter.tintWithPerPixel~pixels.undefined]", "g": "PIXI.CanvasTinter.tintWithPerPixel~g", "pixels": "PIXI.CanvasTinter.tintWithPerPixel~pixels", "rgbValues": "PIXI.CanvasTinter.tintWithPerPixel~rgbValues", "crop.width": "PIXI.CanvasTinter.tintWithPerPixel~crop.width", "crop.y": "PIXI.CanvasTinter.tintWithPerPixel~crop.y", "i": "PIXI.CanvasTinter.tintWithPerPixel~i", "crop.height": "PIXI.CanvasTinter.tintWithPerPixel~crop.height", "r": "PIXI.CanvasTinter.tintWithPerPixel~r", "context.globalCompositeOperation": "PIXI.CanvasTinter.tintWithPerPixel~context.globalCompositeOperation", "crop.x": "PIXI.CanvasTinter.tintWithPerPixel~crop.x", "context": "PIXI.CanvasTinter.tintWithPerPixel~context", "pixelData": "PIXI.CanvasTinter.tintWithPerPixel~pixelData", "canvas.width": "canvas.width", "resolution": "PIXI.CanvasTinter.tintWithPerPixel~resolution", "crop": "PIXI.CanvasTinter.tintWithPerPixel~crop"}, "columnno": 4, "filename": "CanvasTinter.js", "range": [5133, 6404], "lineno": 181, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["PIXI.Texture"]}, "description": "the texture to tint", "name": "texture"}, {"type": {"names": ["number"]}, "description": "the color to use to tint the sprite with", "name": "color"}, {"type": {"names": ["HTMLCanvasElement"]}, "description": "the current canvas", "name": "canvas"}], "longname": "PIXI.CanvasTinter.tintWithPerPixel", "scope": "static", "name": "tintWithPerPixel"}, {"comment": "/**\n     * Rounds the specified color according to the CanvasTinter.cacheStepsPerColorChannel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {number} color - the color to round, should be a hex color\n     * @return {number} The rounded color.\n     */", "kind": "function", "description": "Rounds the specified color according to the CanvasTinter.cacheStepsPerColorChannel.", "memberof": "PIXI.CanvasTinter", "returns": [{"type": {"names": ["number"]}, "description": "The rounded color."}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000759", "name": "roundColor"}, "vars": {"step": "PIXI.CanvasTinter.roundColor~step", "rgbValues[0]": "PIXI.CanvasTinter.roundColor~rgbValues.0]", "rgbValues[1]": "PIXI.CanvasTinter.roundColor~rgbValues.1]", "rgbValues": "PIXI.CanvasTinter.roundColor~rgbValues", "rgbValues[2]": "PIXI.CanvasTinter.roundColor~rgbValues.2]"}, "columnno": 4, "filename": "CanvasTinter.js", "range": [6676, 7055], "lineno": 236, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["number"]}, "description": "the color to round, should be a hex color", "name": "color"}], "longname": "PIXI.CanvasTinter.roundColor", "scope": "static", "name": "roundColor"}, {"comment": "/**\n* Renders the object using the Canvas renderer\n*\n* @private\n* @method _renderCanvas\n* @memberof PIXI.Sprite#\n* @param {PIXI.CanvasRenderer} renderer - The renderer\n*/", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.Sprite", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src", "columnno": 0, "lineno": 3, "filename": "Sprite.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "PIXI.Sprite#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "Sprite", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "Sprite.prototype._renderCanvas"}, "columnno": 0, "filename": "Sprite.js", "range": [211, 322], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "longname": "Sprite#_renderCanvas", "scope": "instance"}, {"comment": "/**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */", "kind": "function", "description": "Renders the sprite object.", "meta": {"code": {"paramnames": ["sprite"], "type": "MethodDefinition", "id": "astnode100000036", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasSpriteRenderer.js", "range": [1130, 5281], "lineno": 41, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [{"type": {"names": ["PIXI.Sprite"]}, "description": "the sprite to render when using this spritebatch", "name": "sprite"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * destroy the sprite object.\n     *\n     */", "kind": "function", "description": "destroy the sprite object.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000545", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasSpriteRenderer.js", "range": [5344, 5395], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-sprite/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Renders a Graphics object to a canvas.\n     *\n     * @param {PIXI.Graphics} graphics - the actual graphics object to render\n     */", "kind": "function", "description": "Renders a Graphics object to a canvas.", "meta": {"code": {"paramnames": ["graphics"], "type": "MethodDefinition", "id": "astnode100000021", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasGraphicsRenderer.js", "range": [986, 8216], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "params": [{"type": {"names": ["PIXI.Graphics"]}, "description": "the actual graphics object to render", "name": "graphics"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Updates the tint of a graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - the graphics that will have its tint updated\n     */", "kind": "function", "description": "Updates the tint of a graphics object", "access": "private", "meta": {"code": {"paramnames": ["graphics"], "type": "MethodDefinition", "id": "astnode100001080", "name": "updateGraphicsTint"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasGraphicsRenderer.js", "range": [8392, 9484], "lineno": 226, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "params": [{"type": {"names": ["PIXI.Graphics"]}, "description": "the graphics that will have its tint updated", "name": "graphics"}], "longname": "updateGraphicsTint", "scope": "global", "name": "updateGraphicsTint"}, {"comment": "/**\n     * Renders a polygon.\n     *\n     * @param {PIXI.Point[]} points - The points to render\n     * @param {boolean} close - Should the polygon be closed\n     * @param {CanvasRenderingContext2D} context - The rendering context to use\n     */", "kind": "function", "description": "Renders a polygon.", "meta": {"code": {"paramnames": ["points", "close", "context"], "type": "MethodDefinition", "id": "astnode100001258", "name": "renderPolygon"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasGraphicsRenderer.js", "range": [9739, 10044], "lineno": 264, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "params": [{"type": {"names": ["Array.<PIXI.Point>"]}, "description": "The points to render", "name": "points"}, {"type": {"names": ["boolean"]}, "description": "Should the polygon be closed", "name": "close"}, {"type": {"names": ["CanvasRenderingContext2D"]}, "description": "The rendering context to use", "name": "context"}], "longname": "renderPolygon", "scope": "global", "name": "renderPolygon"}, {"comment": "/**\n     * destroy graphics object\n     *\n     */", "kind": "function", "description": "destroy graphics object", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001316", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasGraphicsRenderer.js", "range": [10104, 10155], "lineno": 283, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Generates a canvas texture.\n * @method generateCanvasTexture\n * @memberof PIXI.Graphics#\n * @param {number} scaleMode - The scale mode of the texture.\n * @param {number} resolution - The resolution of the texture.\n * @return {PIXI.Texture} The new texture.\n */", "kind": "function", "description": "Generates a canvas texture.", "memberof": "PIXI.Graphics", "returns": [{"type": {"names": ["PIXI.Texture"]}, "description": "The new texture."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src", "columnno": 0, "lineno": 9, "filename": "Graphics.js"}, "params": [{"type": {"names": ["number"]}, "description": "The scale mode of the texture.", "name": "scaleMode"}, {"type": {"names": ["number"]}, "description": "The resolution of the texture.", "name": "resolution"}], "longname": "PIXI.Graphics#generateCanvasTexture", "scope": "instance", "name": "generateCanvasTexture"}, {"comment": "", "kind": "function", "name": "generateCanvasTexture", "memberof": "Graphics", "undocumented": true, "meta": {"code": {"paramnames": ["scaleMode", "resolution"], "type": "FunctionExpression", "id": "astnode100000029", "value": "generateCanvasTexture", "name": "Graphics.prototype.generateCanvasTexture"}, "vars": {"canvasRenderer": "Graphics#generateCanvasTexture~canvasRenderer", "bounds": "Graphics#generateCanvasTexture~bounds", "texture": "Graphics#generateCanvasTexture~texture", "texture.baseTexture.resolution": "Graphics#generateCanvasTexture~texture.baseTexture.resolution", "tempMatrix.tx": "tempMatrix.tx", "tempMatrix.ty": "tempMatrix.ty", "canvasBuffer": "Graphics#generateCanvasTexture~canvasBuffer"}, "columnno": 0, "filename": "Graphics.js", "range": [512, 1317], "lineno": 17, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "longname": "Graphics#generateCanvasTexture", "scope": "instance"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @method _renderCanvas\n * @memberof PIXI.Graphics#\n * @private\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.Graphics", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src", "columnno": 0, "lineno": 50, "filename": "Graphics.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "PIXI.Graphics#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "Graphics", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000163", "value": "_renderCanvas", "name": "Graphics.prototype._renderCanvas"}, "columnno": 0, "filename": "Graphics.js", "range": [1545, 1742], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-graphics/src"}, "longname": "Graphics#_renderCanvas", "scope": "instance"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "ParticleContainer", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "renderCanvas", "name": "ParticleContainer.prototype.renderCanvas"}, "vars": {"positionX": "ParticleContainer#renderCanvas~positionX", "positionY": "ParticleContainer#renderCanvas~positionY", "context": "ParticleContainer#renderCanvas~context", "i": "ParticleContainer#renderCanvas~i", "frame": "ParticleContainer#renderCanvas~frame", "transform": "ParticleContainer#renderCanvas~transform", "context.globalAlpha": "ParticleContainer#renderCanvas~context.globalAlpha", "childTransform": "ParticleContainer#renderCanvas~childTransform", "finalWidth": "ParticleContainer#renderCanvas~finalWidth", "child": "ParticleContainer#renderCanvas~child", "isRotated": "ParticleContainer#renderCanvas~isRotated", "resolution": "ParticleContainer#renderCanvas~resolution", "finalHeight": "ParticleContainer#renderCanvas~finalHeight"}, "columnno": 0, "filename": "ParticleContainer.js", "range": [203, 3624], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-particles/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "a reference to the canvas renderer", "name": "renderer"}], "longname": "ParticleContainer#renderCanvas", "scope": "instance", "name": "renderCanvas"}, {"comment": "/**\n * Renders the mesh using the Canvas renderer\n *\n * @private\n * @method render\n * @memberof PIXI.MeshMaterial#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n * @param {PIXI.Mesh} mesh - Mesh to render.\n */", "kind": "function", "description": "Renders the mesh using the Canvas renderer", "memberof": "PIXI.MeshMaterial", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 3, "filename": "MeshMaterial.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The canvas renderer.", "name": "renderer"}, {"type": {"names": ["PIXI.Mesh"]}, "description": "Mesh to render.", "name": "mesh"}], "longname": "PIXI.MeshMaterial#render", "scope": "instance", "name": "render"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "MeshMaterial", "undocumented": true, "meta": {"code": {"paramnames": ["renderer", "mesh"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "MeshMaterial.prototype._renderCanvas"}, "columnno": 0, "filename": "MeshMaterial.js", "range": [272, 393], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "MeshMaterial#_renderCanvas", "scope": "instance"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.Mesh", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 3, "filename": "SimpleRope.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The canvas renderer.", "name": "renderer"}], "longname": "PIXI.Mesh#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "SimpleRope", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "SimpleRope.prototype._renderCanvas"}, "vars": {"this.geometry.width": "SimpleRope#_renderCanvas#geometry.width"}, "columnno": 0, "filename": "SimpleRope.js", "range": [233, 642], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "SimpleRope#_renderCanvas", "scope": "instance"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.NineSlicePlane#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.NineSlicePlane", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 3, "filename": "NineSlicePlane.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The canvas renderer to render with.", "name": "renderer"}], "longname": "PIXI.NineSlicePlane#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "NineSlicePlane", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "NineSlicePlane.prototype._renderCanvas"}, "vars": {"context.globalAlpha": "NineSlicePlane#_renderCanvas~context.globalAlpha", "w": "NineSlicePlane#_renderCanvas~w", "textureSource": "NineSlicePlane#_renderCanvas~textureSource", "res": "NineSlicePlane#_renderCanvas~res", "transform": "NineSlicePlane#_renderCanvas~transform", "base": "NineSlicePlane#_renderCanvas~base", "context": "NineSlicePlane#_renderCanvas~context", "h": "NineSlicePlane#_renderCanvas~h"}, "columnno": 0, "filename": "NineSlicePlane.js", "range": [262, 1864], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "NineSlicePlane#_renderCanvas", "scope": "instance"}, {"comment": "/**\n * Renders one segment of the plane.\n * to mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\n * that the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.\n *\n * @method drawSegment\n * @memberof PIXI.NineSlicePlane#\n * @param {CanvasRenderingContext2D} context - The context to draw with.\n * @param {CanvasImageSource} textureSource - The source to draw.\n * @param {number} w - width of the texture\n * @param {number} h - height of the texture\n * @param {number} x1 - x index 1\n * @param {number} y1 - y index 1\n * @param {number} x2 - x index 2\n * @param {number} y2 - y index 2\n */", "kind": "function", "description": "Renders one segment of the plane.\nto mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\nthat the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.", "memberof": "PIXI.NineSlicePlane", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 60, "filename": "NineSlicePlane.js"}, "params": [{"type": {"names": ["CanvasRenderingContext2D"]}, "description": "The context to draw with.", "name": "context"}, {"type": {"names": ["CanvasImageSource"]}, "description": "The source to draw.", "name": "textureSource"}, {"type": {"names": ["number"]}, "description": "width of the texture", "name": "w"}, {"type": {"names": ["number"]}, "description": "height of the texture", "name": "h"}, {"type": {"names": ["number"]}, "description": "x index 1", "name": "x1"}, {"type": {"names": ["number"]}, "description": "y index 1", "name": "y1"}, {"type": {"names": ["number"]}, "description": "x index 2", "name": "x2"}, {"type": {"names": ["number"]}, "description": "y index 2", "name": "y2"}], "longname": "PIXI.NineSlicePlane#drawSegment", "scope": "instance", "name": "drawSegment"}, {"comment": "", "kind": "function", "name": "drawSegment", "memberof": "NineSlicePlane", "undocumented": true, "meta": {"code": {"paramnames": ["context", "textureSource", "w", "h", "x1", "y1", "x2", "y2"], "type": "FunctionExpression", "id": "astnode100000284", "value": "drawSegment", "name": "NineSlicePlane.prototype.drawSegment"}, "vars": {"dh": "NineSlicePlane#drawSegment~dh", "uvs": "NineSlicePlane#drawSegment~uvs", "sw": "NineSlicePlane#drawSegment~sw", "vertices": "NineSlicePlane#drawSegment~vertices", "sh": "NineSlicePlane#drawSegment~sh", "dw": "NineSlicePlane#drawSegment~dw"}, "columnno": 0, "filename": "NineSlicePlane.js", "range": [2551, 3487], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "NineSlicePlane#drawSegment", "scope": "instance"}, {"comment": "/**\n     * Renders the Mesh\n     *\n     * @param {PIXI.Mesh} mesh - the Mesh to render\n     */", "kind": "function", "description": "Renders the Mesh", "meta": {"code": {"paramnames": ["mesh"], "type": "MethodDefinition", "id": "astnode100000021", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [449, 1555], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [{"type": {"names": ["PIXI.Mesh"]}, "description": "the Mesh to render", "name": "mesh"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param {PIXI.RawMesh} mesh - the Mesh to render\n     */", "kind": "function", "description": "Draws the object in Triangle Mesh mode", "access": "private", "meta": {"code": {"paramnames": ["mesh"], "type": "MethodDefinition", "id": "astnode100000170", "name": "_renderTriangleMesh"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [1701, 2040], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [{"type": {"names": ["PIXI.RawMesh"]}, "description": "the Mesh to render", "name": "mesh"}], "longname": "_renderTriangleMesh", "scope": "global", "name": "_renderTriangleMesh"}, {"comment": "/**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param {PIXI.RawMesh} mesh - the current mesh\n     */", "kind": "function", "description": "Draws the object in triangle mode using canvas", "access": "private", "meta": {"code": {"paramnames": ["mesh"], "type": "MethodDefinition", "id": "astnode100000221", "name": "_renderTriangles"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [2192, 2655], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [{"type": {"names": ["PIXI.RawMesh"]}, "description": "the current mesh", "name": "mesh"}], "longname": "_renderTriangles", "scope": "global", "name": "_renderTriangles"}, {"comment": "/**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param {PIXI.RawMesh} mesh - the current mesh\n     * @param {number} index0 - the index of the first vertex\n     * @param {number} index1 - the index of the second vertex\n     * @param {number} index2 - the index of the third vertex\n     */", "kind": "function", "description": "Draws one of the triangles that from the Mesh", "access": "private", "meta": {"code": {"paramnames": ["mesh", "index0", "index1", "index2"], "type": "MethodDefinition", "id": "astnode100000292", "name": "_renderDrawTriangle"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [2993, 6669], "lineno": 121, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [{"type": {"names": ["PIXI.RawMesh"]}, "description": "the current mesh", "name": "mesh"}, {"type": {"names": ["number"]}, "description": "the index of the first vertex", "name": "index0"}, {"type": {"names": ["number"]}, "description": "the index of the second vertex", "name": "index1"}, {"type": {"names": ["number"]}, "description": "the index of the third vertex", "name": "index2"}], "longname": "_renderDrawTriangle", "scope": "global", "name": "_renderDrawTriangle"}, {"comment": "/**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param {PIXI.RawMesh} mesh - The Mesh to render\n     */", "kind": "function", "description": "Renders a flat Mesh", "access": "private", "meta": {"code": {"paramnames": ["mesh"], "type": "MethodDefinition", "id": "astnode100000987", "name": "renderMeshFlat"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [6796, 7652], "lineno": 236, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [{"type": {"names": ["PIXI.RawMesh"]}, "description": "The Mesh to render", "name": "mesh"}], "longname": "renderMeshFlat", "scope": "global", "name": "renderMeshFlat"}, {"comment": "/**\n     * destroy the the renderer.\n     *\n     */", "kind": "function", "description": "destroy the the renderer.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100001127", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMeshRenderer.js", "range": [7714, 7765], "lineno": 274, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.Mesh", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 3, "filename": "SimpleMesh.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The canvas renderer.", "name": "renderer"}], "longname": "PIXI.Mesh#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "SimpleMesh", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "SimpleMesh.prototype._renderCanvas"}, "columnno": 0, "filename": "SimpleMesh.js", "range": [233, 554], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "SimpleMesh#_renderCanvas", "scope": "instance"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "PIXI.Mesh", "access": "private", "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src", "columnno": 0, "lineno": 4, "filename": "Mesh.js"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The canvas renderer.", "name": "renderer"}], "longname": "PIXI.Mesh#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "", "kind": "function", "name": "_renderCanvas", "memberof": "Mesh", "undocumented": true, "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000011", "value": "_renderCanvas", "name": "Mesh.prototype._renderCanvas"}, "columnno": 0, "filename": "Mesh.js", "range": [259, 486], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "Mesh#_renderCanvas", "scope": "instance"}, {"comment": "", "kind": "function", "name": "get", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000069", "name": "get"}, "columnno": 4, "filename": "Mesh.js", "range": [1332, 1447], "lineno": 47, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "get", "scope": "global"}, {"comment": "", "kind": "function", "name": "set", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000085", "name": "set"}, "vars": {"this._canvasPadding": null}, "columnno": 4, "filename": "Mesh.js", "range": [1453, 1512], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-mesh/src"}, "longname": "set", "scope": "global"}, {"comment": "/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {object} [options] - The optional renderer parameters\n * @param {number} [options.width=800] - the width of the renderers view\n * @param {number} [options.height=600] - the height of the renderers view\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n *   resolutions other than 1\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *  need to call toDataUrl on the webgl context\n * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n *  (shown if not transparent).\n * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n *   not before the new render pass.\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present\n * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n *  FXAA is faster, but may not always look as great **webgl only**\n * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n *  for devices with dual graphics card **webgl only**\n * @return {PIXI.Renderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */", "kind": "function", "description": "This helper function will automatically detect which renderer you should be using.\nWebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\nthe browser then this function will return a canvas renderer", "memberof": "PIXI", "returns": [{"type": {"names": ["PIXI.Renderer", "PIXI.CanvasRenderer"]}, "description": "Returns WebGL renderer if available, otherwise CanvasRenderer"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src", "columnno": 0, "lineno": 6, "filename": "autoDetectRenderer.js"}, "params": [{"optional": true, "type": {"names": ["object"]}, "description": "The optional renderer parameters", "name": "options"}, {"optional": true, "defaultvalue": 800, "type": {"names": ["number"]}, "description": "the width of the renderers view", "name": "options.width"}, {"optional": true, "defaultvalue": 600, "type": {"names": ["number"]}, "description": "the height of the renderers view", "name": "options.height"}, {"optional": true, "type": {"names": ["HTMLCanvasElement"]}, "description": "the canvas to use as a view, optional", "name": "options.view"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "If the render view is transparent, default false", "name": "options.transparent"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Resizes renderer view in CSS pixels to allow for\n  resolutions other than 1", "name": "options.autoDensity"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "sets antialias (only applicable in chrome at the moment)", "name": "options.antialias"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "enables drawing buffer preservation, enable this if you\n need to call toDataUrl on the webgl context", "name": "options.preserveDrawingBuffer"}, {"optional": true, "defaultvalue": "0x000000", "type": {"names": ["number"]}, "description": "The background color of the rendered area\n (shown if not transparent).", "name": "options.backgroundColor"}, {"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "This sets if the renderer will clear the canvas or\n  not before the new render pass.", "name": "options.clearBeforeRender"}, {"optional": true, "defaultvalue": 1, "type": {"names": ["number"]}, "description": "The resolution / device pixel ratio of the renderer, retina would be 2", "name": "options.resolution"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "prevents selection of WebGL renderer, even if such is present", "name": "options.forceCanvas"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "forces FXAA antialiasing to be used over native.\n FXAA is faster, but may not always look as great **webgl only**", "name": "options.forceFXAA"}, {"optional": true, "type": {"names": ["string"]}, "description": "Parameter passed to webgl context, set to \"high-performance\"\n for devices with dual graphics card **webgl only**", "name": "options.powerPreference"}], "longname": "PIXI.autoDetectRenderer", "scope": "static", "name": "autoDetectRenderer"}, {"comment": "", "kind": "function", "name": "autoDetectRenderer", "undocumented": true, "meta": {"code": {"paramnames": ["options", "arg1", "arg2", "arg3"], "type": "FunctionDeclaration", "id": "astnode100000014", "name": "exports.autoDetectRenderer"}, "columnno": 0, "filename": "autoDetectRenderer.js", "range": [2204, 2606], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "longname": "autoDetectRenderer", "scope": "global"}, {"comment": "", "kind": "function", "name": "autoDetectRenderer", "undocumented": true, "meta": {"code": {"paramnames": ["options", "arg1", "arg2", "arg3"], "type": "FunctionDeclaration", "id": "astnode100000015", "name": "autoDetectRenderer"}, "vars": {"forceCanvas": "autoDetectRenderer~forceCanvas"}, "columnno": 7, "filename": "autoDetectRenderer.js", "range": [2211, 2606], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [], "longname": "autoDetectRenderer", "scope": "global"}, {"comment": "/**\n     * Renders the object to this canvas view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered\n     * @param {PIXI.RenderTexture} [renderTexture] - A render texture to be rendered to.\n     *  If unset, it will render to the root context.\n     * @param {boolean} [clear=false] - Whether to clear the canvas before drawing\n     * @param {PIXI.Matrix} [transform] - A transformation to be applied\n     * @param {boolean} [skipUpdateTransform=false] - Whether to skip the update transform\n     */", "kind": "function", "description": "Renders the object to this canvas view", "meta": {"code": {"paramnames": ["displayObject", "renderTexture", "clear", "transform", "skipUpdateTransform"], "type": "MethodDefinition", "id": "astnode100000210", "name": "render"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [4989, 8299], "lineno": 133, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject"]}, "description": "The object to be rendered", "name": "displayObject"}, {"optional": true, "type": {"names": ["PIXI.RenderTexture"]}, "description": "A render texture to be rendered to.\n If unset, it will render to the root context.", "name": "renderTexture"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to clear the canvas before drawing", "name": "clear"}, {"optional": true, "type": {"names": ["PIXI.Matrix"]}, "description": "A transformation to be applied", "name": "transform"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to skip the update transform", "name": "skipUpdateTransform"}], "longname": "render", "scope": "global", "name": "render"}, {"comment": "/**\n     * Clear the canvas of renderer.\n     *\n     * @param {string} [clearColor] - Clear the canvas with this color, except the canvas is transparent.\n     */", "kind": "function", "description": "Clear the canvas of renderer.", "meta": {"code": {"paramnames": ["clearColor"], "type": "MethodDefinition", "id": "astnode100000564", "name": "clear"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [8471, 8869], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "Clear the canvas with this color, except the canvas is transparent.", "name": "clearColor"}], "longname": "clear", "scope": "global", "name": "clear"}, {"comment": "/**\n     * Sets the blend mode of the renderer.\n     *\n     * @param {number} blendMode - See {@link PIXI.BLEND_MODES} for valid values.\n     */", "kind": "function", "description": "Sets the blend mode of the renderer.", "meta": {"code": {"paramnames": ["blendMode"], "type": "MethodDefinition", "id": "astnode100000624", "name": "setBlendMode"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [9024, 9268], "lineno": 273, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"type": {"names": ["number"]}, "description": "See {@link PIXI.BLEND_MODES} for valid values.", "name": "blendMode"}], "longname": "setBlendMode", "scope": "global", "name": "setBlendMode"}, {"comment": "/**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */", "kind": "function", "description": "Removes everything from the renderer and optionally removes the Canvas DOM element.", "meta": {"code": {"paramnames": ["removeView"], "type": "MethodDefinition", "id": "astnode100000655", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [9474, 9740], "lineno": 289, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Removes the Canvas element from the DOM.", "name": "removeView"}], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n     * Resizes the canvas view to the specified width and height.\n     *\n     * @extends PIXI.AbstractRenderer#resize\n     *\n     * @param {number} screenWidth - the new width of the screen\n     * @param {number} screenHeight - the new height of the screen\n     */", "kind": "function", "description": "Resizes the canvas view to the specified width and height.", "meta": {"code": {"paramnames": ["screenWidth", "screenHeight"], "type": "MethodDefinition", "id": "astnode100000697", "name": "resize"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [10019, 10420], "lineno": 312, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"type": {"names": ["number"]}, "description": "the new width of the screen", "name": "screenWidth"}, {"type": {"names": ["number"]}, "description": "the new height of the screen", "name": "screenHeight"}], "longname": "resize", "augments": ["PIXI.AbstractRenderer#resize"], "scope": "global", "name": "resize"}, {"comment": "/**\n     * Checks if blend mode has changed.\n     */", "kind": "function", "description": "Checks if blend mode has changed.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000731", "name": "invalidateBlendMode"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [10483, 10612], "lineno": 327, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [], "longname": "invalidateBlendMode", "scope": "global", "name": "invalidateBlendMode"}, {"comment": "/**\n     * Adds a plugin to the renderer.\n     *\n     * @method\n     * @param {string} pluginName - The name of the plugin.\n     * @param {Function} ctor - The constructor function or class for the plugin.\n     */", "kind": "function", "description": "Adds a plugin to the renderer.", "meta": {"code": {"paramnames": ["pluginName", "ctor"], "type": "MethodDefinition", "id": "astnode100000751", "name": "registerPlugin"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasRenderer.js", "range": [11555, 11726], "lineno": 352, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "params": [{"type": {"names": ["string"]}, "description": "The name of the plugin.", "name": "pluginName"}, {"type": {"names": ["function"]}, "description": "The constructor function or class for the plugin.", "name": "ctor"}], "longname": "registerPlugin", "scope": "global", "name": "registerPlugin"}, {"comment": "/**\n * Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable\n * for rendering with CanvasRenderer. Provided by **@pixi/canvas-renderer** package.\n * @method getDrawableSource\n * @memberof PIXI.BaseTexture#\n * @return {CanvasImageSource} Source to render with CanvasRenderer\n */", "kind": "function", "description": "Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable\nfor rendering with CanvasRenderer. Provided by **@pixi/canvas-renderer** package.", "memberof": "PIXI.BaseTexture", "returns": [{"type": {"names": ["CanvasImageSource"]}, "description": "Source to render with CanvasRenderer"}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src", "columnno": 0, "lineno": 3, "filename": "BaseTexture.js"}, "longname": "PIXI.BaseTexture#getDrawableSource", "scope": "instance", "name": "getDrawableSource"}, {"comment": "", "kind": "function", "name": "getDrawableSource", "memberof": "BaseTexture", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000007", "value": "getDrawableSource", "name": "BaseTexture.prototype.getDrawableSource"}, "vars": {"resource": "BaseTexture#getDrawableSource~resource"}, "columnno": 0, "filename": "BaseTexture.js", "range": [347, 532], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src"}, "longname": "BaseTexture#getDrawableSource", "scope": "instance"}, {"comment": "/**\n * Maps blend combinations to Canvas.\n *\n * @memberof PIXI\n * @function mapCanvasBlendModesToPixi\n * @private\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */", "kind": "function", "description": "Maps blend combinations to Canvas.", "memberof": "PIXI", "access": "private", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "Mapped modes."}], "meta": {"code": {}, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils", "columnno": 0, "lineno": 4, "filename": "mapCanvasBlendModesToPixi.js"}, "params": [{"optional": true, "defaultvalue": "[]", "type": {"names": ["Array.<string>"]}, "description": "The array to output into.", "name": "array"}], "longname": "PIXI.mapCanvasBlendModesToPixi", "scope": "static", "name": "mapCanvasBlendModesToPixi"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "module.exports"}, "columnno": 0, "filename": "mapCanvasBlendModesToPixi.js", "range": [331, 2592], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "mapCanvasBlendModesToPixi", "undocumented": true, "meta": {"code": {"paramnames": ["array"], "type": "FunctionDeclaration", "id": "astnode100000011", "name": "mapCanvasBlendModesToPixi"}, "vars": {"array[undefined]": null}, "columnno": 15, "filename": "mapCanvasBlendModesToPixi.js", "range": [346, 2592], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [], "longname": "mapCanvasBlendModesToPixi", "scope": "global"}, {"comment": "/**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {object} maskData - the maskData that will be pushed\n     */", "kind": "function", "description": "This method adds it to the current stack of masks.", "meta": {"code": {"paramnames": ["maskData"], "type": "MethodDefinition", "id": "astnode100000021", "name": "pushMask"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMaskManager.js", "range": [473, 1300], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [{"type": {"names": ["object"]}, "description": "the maskData that will be pushed", "name": "maskData"}], "longname": "pushMask", "scope": "global", "name": "pushMask"}, {"comment": "/**\n     * Renders a PIXI.Graphics shape.\n     *\n     * @param {PIXI.Graphics} graphics - The object to render.\n     */", "kind": "function", "description": "Renders a PIXI.Graphics shape.", "meta": {"code": {"paramnames": ["graphics"], "type": "MethodDefinition", "id": "astnode100000121", "name": "renderGraphicsShape"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMaskManager.js", "range": [1430, 5090], "lineno": 59, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [{"type": {"names": ["PIXI.Graphics"]}, "description": "The object to render.", "name": "graphics"}], "longname": "renderGraphicsShape", "scope": "global", "name": "renderGraphicsShape"}, {"comment": "/**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer context to use.\n     */", "kind": "function", "description": "Restores the current drawing context to the state it was before the mask was applied.", "meta": {"code": {"paramnames": ["renderer"], "type": "MethodDefinition", "id": "astnode100000679", "name": "popMask"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMaskManager.js", "range": [5288, 5393], "lineno": 161, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer context to use.", "name": "renderer"}], "longname": "popMask", "scope": "global", "name": "popMask"}, {"comment": "/**\n     * Destroys this canvas mask manager.\n     *\n     */", "kind": "function", "description": "Destroys this canvas mask manager.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000696", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasMaskManager.js", "range": [5464, 5505], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {string} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */", "kind": "function", "description": "Creates a little colored canvas", "ignore": true, "returns": [{"type": {"names": ["canvas"]}, "description": "a small canvas element"}], "meta": {"code": {"paramnames": ["color"], "type": "FunctionDeclaration", "id": "astnode100000002", "name": "createColoredCanvas"}, "vars": {"context.fillStyle": "createColoredCanvas~context.fillStyle", "canvas": "createColoredCanvas~canvas", "canvas.height": "createColoredCanvas~canvas.height", "canvas.width": "createColoredCanvas~canvas.width", "context": "createColoredCanvas~context"}, "columnno": 0, "filename": "canUseNewCanvasBlendModes.js", "range": [156, 426], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [{"type": {"names": ["string"]}, "description": "The color to make the canvas", "name": "color"}], "longname": "createColoredCanvas", "scope": "global", "name": "createColoredCanvas"}, {"comment": "/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @return {boolean} whether they are supported\n */", "kind": "function", "description": "Checks whether the Canvas BlendModes are supported by the current browser", "memberof": "module", "returns": [{"type": {"names": ["boolean"]}, "description": "whether they are supported"}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000051", "name": "module.exports"}, "columnno": 0, "filename": "canUseNewCanvasBlendModes.js", "range": [564, 1282], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "canUseNewCanvasBlendModes", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000052", "name": "canUseNewCanvasBlendModes"}, "vars": {"canvas.height": "canUseNewCanvasBlendModes~canvas.height", "imageData": "canUseNewCanvasBlendModes~imageData", "canvas": "canUseNewCanvasBlendModes~canvas", "yellow": "canUseNewCanvasBlendModes~yellow", "context.globalCompositeOperation": "canUseNewCanvasBlendModes~context.globalCompositeOperation", "context": "canUseNewCanvasBlendModes~context", "canvas.width": "canUseNewCanvasBlendModes~canvas.width", "data": "canUseNewCanvasBlendModes~data", "magenta": "canUseNewCanvasBlendModes~magenta"}, "columnno": 15, "filename": "canUseNewCanvasBlendModes.js", "range": [579, 1282], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-renderer/src/utils"}, "params": [], "longname": "canUseNewCanvasBlendModes", "scope": "global"}, {"comment": "/**\n     * Destroys the plugin, don't use after this.\n     *\n     */", "kind": "function", "description": "Destroys the plugin, don't use after this.", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000078", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasPrepare.js", "range": [1469, 1568], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-prepare/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}, {"comment": "/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {*} prepare - Instance of CanvasPrepare\n * @param {*} item - Item to check\n * @return {boolean} If item was uploaded.\n */", "kind": "function", "description": "Built-in hook to upload PIXI.Texture objects to the GPU.", "access": "private", "returns": [{"type": {"names": ["boolean"]}, "description": "If item was uploaded."}], "meta": {"code": {"paramnames": ["prepare", "item"], "type": "FunctionDeclaration", "id": "astnode100000099", "name": "uploadBaseTextures"}, "vars": {"image": "uploadBaseTextures~image", "imageHeight": "uploadBaseTextures~imageHeight", "imageWidth": "uploadBaseTextures~imageWidth"}, "columnno": 0, "filename": "CanvasPrepare.js", "range": [1783, 2734], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-prepare/src"}, "params": [{"type": {"names": ["*"]}, "description": "Instance of CanvasPrepare", "name": "prepare"}, {"type": {"names": ["*"]}, "description": "Item to check", "name": "item"}], "longname": "uploadBaseTextures", "scope": "global", "name": "uploadBaseTextures"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "DisplayObject", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "renderCanvas", "name": "DisplayObject.prototype.renderCanvas"}, "columnno": 0, "filename": "DisplayObject.js", "range": [163, 293], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-display/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "DisplayObject#renderCanvas", "scope": "instance", "name": "renderCanvas"}, {"comment": "/**\n * To be overridden by the subclass\n *\n * @private\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */", "kind": "function", "description": "To be overridden by the subclass", "memberof": "Container", "access": "private", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000007", "value": "_renderCanvas", "name": "Container.prototype._renderCanvas"}, "columnno": 0, "filename": "Container.js", "range": [159, 322], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-display/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "Container#_renderCanvas", "scope": "instance", "name": "_renderCanvas"}, {"comment": "/**\n * Renders the object using the Canvas renderer\n *\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */", "kind": "function", "description": "Renders the object using the Canvas renderer", "memberof": "Container", "meta": {"code": {"paramnames": ["renderer"], "type": "FunctionExpression", "id": "astnode100000018", "value": "renderCanvas", "name": "Container.prototype.renderCanvas"}, "vars": {"i": "Container#renderCanvas~i", "j": "Container#renderCanvas~j"}, "columnno": 0, "filename": "Container.js", "range": [440, 992], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-display/src"}, "params": [{"type": {"names": ["PIXI.CanvasRenderer"]}, "description": "The renderer", "name": "renderer"}], "longname": "Container#renderCanvas", "scope": "instance", "name": "renderCanvas"}, {"comment": "/**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */", "kind": "function", "description": "Will return a HTML Image of the target", "returns": [{"type": {"names": ["HTMLImageElement"]}, "description": "HTML Image of the target"}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000040", "name": "image"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasExtract.js", "range": [1242, 1367], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "image", "scope": "global", "name": "image"}, {"comment": "/**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `CanvasExtract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */", "kind": "function", "description": "Will return a a base64 encoded string of this target. It works by calling\n `CanvasExtract.getCanvas` and then running toDataURL on that.", "returns": [{"type": {"names": ["string"]}, "description": "A base64 encoded string of the texture."}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000062", "name": "base64"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasExtract.js", "range": [1772, 1846], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "base64", "scope": "global", "name": "base64"}, {"comment": "/**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */", "kind": "function", "description": "Creates a Canvas element, renders this target to it and then returns it.", "returns": [{"type": {"names": ["HTMLCanvasElement"]}, "description": "A Canvas element with the texture rendered on."}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000076", "name": "canvas"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasExtract.js", "range": [2198, 3490], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "canvas", "scope": "global", "name": "canvas"}, {"comment": "/**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */", "kind": "function", "description": "Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\norder, with integer values between 0 and 255 (included).", "returns": [{"type": {"names": ["Uint8ClampedArray"]}, "description": "One-dimensional array containing the pixel data of the entire texture"}], "meta": {"code": {"paramnames": ["target"], "type": "MethodDefinition", "id": "astnode100000237", "name": "pixels"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasExtract.js", "range": [3948, 4920], "lineno": 124, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-extract/src"}, "params": [{"type": {"names": ["PIXI.DisplayObject", "PIXI.RenderTexture"]}, "description": "A displayObject or renderTexture\n to convert. If left empty will use use the main renderer", "name": "target"}], "longname": "pixels", "scope": "global", "name": "pixels"}, {"comment": "/**\n     * Destroys the extract\n     *\n     */", "kind": "function", "description": "Destroys the extract", "meta": {"code": {"paramnames": [], "type": "MethodDefinition", "id": "astnode100000356", "name": "destroy"}, "vars": {"": null}, "columnno": 4, "filename": "CanvasExtract.js", "range": [4977, 5066], "lineno": 166, "path": "/home/zcl/Desktop/parametermismatch/dataset/pixi.js/packages/canvas/canvas-extract/src"}, "params": [], "longname": "destroy", "scope": "global", "name": "destroy"}]