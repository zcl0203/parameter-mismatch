[{"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["config"], "type": "ArrowFunctionExpression", "id": "astnode100000059", "name": "module.exports"}, "vars": {"": null, "bundleDirpath": "module.exports~bundleDirpath", "cfg.sauceLabs.testName": "module.exports~cfg.sauceLabs.testName", "MOCHA_TEST": "module.exports~MOCHA_TEST", "cfg": "module.exports~cfg", "cfg.browsers": "module.exports~cfg.browsers", "cfg.client.mocha.ui": "module.exports~cfg.client.mocha.ui", "cfg.sauceLabs": "module.exports~cfg.sauceLabs", "env": "module.exports~env", "sauceConfig": "module.exports~sauceConfig", "cfg.files": "module.exports~cfg.files", "id": "module.exports~id"}, "columnno": 0, "filename": "karma.conf.js", "range": [460, 4804], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "configure", "memberof": "module.exports~cfg.browserify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000089", "value": "configure", "name": "configure"}, "vars": {"": null}, "columnno": 6, "filename": "karma.conf.js", "range": [833, 1369], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "module.exports~cfg.browserify.configure", "scope": "static"}, {"comment": "", "kind": "function", "name": "addSauceTests", "undocumented": true, "meta": {"code": {"paramnames": ["cfg"], "type": "FunctionDeclaration", "id": "astnode100000494", "name": "addSauceTests"}, "vars": {"": null, "cfg.concurrency": "cfg.concurrency", "cfg.customLaunchers": "cfg.customLaunchers", "cfg.browsers": "cfg.browsers", "browsers": "addSauceTests~browsers", "cfg.retryLimit": "cfg.retryLimit", "cfg.browserNoActivityTimeout": "cfg.browserNoActivityTimeout", "cfg.captureTimeout": "cfg.captureTimeout"}, "columnno": 0, "filename": "karma.conf.js", "range": [4809, 5904], "lineno": 165, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "params": [], "longname": "addSauceTests", "scope": "global"}, {"comment": "/**\r\n * Generates a command to run mocha tests with or without test coverage\r\n * as desired for the current runmode.\r\n * @param {string} testName The name of the test to be used for coverage reporting.\r\n * @param {string} mochaParams Parameters for the mocha CLI to execute the desired test.\r\n * @returns {string} Command string to be executed by nps.\r\n */", "kind": "function", "description": "Generates a command to run mocha tests with or without test coverage\ras desired for the current runmode.", "returns": [{"type": {"names": ["string"]}, "description": "Command string to be executed by nps."}], "meta": {"code": {"paramnames": ["testName", "mochaParams"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "test"}, "vars": {"mochaCommand": "test~mochaCommand", "coverageCommand": "test~coverageCommand", "mochaParams": "test~mochaParams"}, "columnno": 0, "filename": "package-scripts.js", "range": [408, 859], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "params": [{"type": {"names": ["string"]}, "description": "The name of the test to be used for coverage reporting.", "name": "testName"}, {"type": {"names": ["string"]}, "description": "Parameters for the mocha CLI to execute the desired test.", "name": "mochaParams"}], "longname": "test", "scope": "global", "name": "test"}, {"comment": "/**\r\n * Remove uncaughtException listener.\r\n * Revert to original onerror handler if previously defined.\r\n */", "kind": "function", "description": "Remove uncaughtException listener.\rRevert to original onerror handler if previously defined.", "memberof": "process", "meta": {"code": {"paramnames": ["e", "fn"], "type": "FunctionExpression", "id": "astnode100000071", "name": "process.removeListener"}, "vars": {"": null, "i": "process.removeListener~i", "global.onerror": "global.onerror"}, "columnno": 0, "filename": "browser-entry.js", "range": [800, 1156], "lineno": 41, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "process.removeListener", "scope": "static", "name": "removeListener"}, {"comment": "", "kind": "function", "name": "onerror", "memberof": "global", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000095", "name": "global.onerror"}, "columnno": 6, "filename": "browser-entry.js", "range": [983, 1013], "lineno": 46, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "global.onerror", "scope": "static"}, {"comment": "/**\r\n * Implements uncaughtException listener.\r\n */", "kind": "function", "description": "Implements uncaughtException listener.", "memberof": "process", "meta": {"code": {"paramnames": ["e", "fn"], "type": "FunctionExpression", "id": "astnode100000123", "name": "process.on"}, "vars": {"": null, "global.onerror": "global.onerror"}, "columnno": 0, "filename": "browser-entry.js", "range": [1216, 1483], "lineno": 59, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "process.on", "scope": "static", "name": "on"}, {"comment": "", "kind": "function", "name": "onerror", "memberof": "global", "undocumented": true, "meta": {"code": {"paramnames": ["err", "url", "line"], "type": "FunctionExpression", "id": "astnode100000137", "name": "global.onerror"}, "columnno": 4, "filename": "browser-entry.js", "range": [1288, 1433], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "global.onerror", "scope": "static"}, {"comment": "", "kind": "function", "name": "timeslice", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000188", "name": "timeslice"}, "vars": {"immediateTimeout": "timeslice~immediateTimeout", "immediateStart": "timeslice~immediateStart"}, "columnno": 0, "filename": "browser-entry.js", "range": [1826, 2144], "lineno": 77, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "params": [], "longname": "timeslice", "scope": "global"}, {"comment": "/**\r\n * High-performance override of Runner.immediately.\r\n */", "kind": "function", "description": "High-performance override of Runner.immediately.", "memberof": "Mocha.Runner", "meta": {"code": {"paramnames": ["callback"], "type": "FunctionExpression", "id": "astnode100000238", "name": "Mocha.Runner.immediately"}, "vars": {"immediateTimeout": "Mocha.Runner.immediately~immediateTimeout"}, "columnno": 0, "filename": "browser-entry.js", "range": [2213, 2380], "lineno": 93, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "Mocha.Runner.immediately", "scope": "static", "name": "immediately"}, {"comment": "/**\r\n * Function to allow assertion libraries to throw errors directly into mocha.\r\n * This is useful when running tests in a browser because window.onerror will\r\n * only receive the 'message' attribute of the Error.\r\n */", "kind": "function", "description": "Function to allow assertion libraries to throw errors directly into mocha.\rThis is useful when running tests in a browser because window.onerror will\ronly receive the 'message' attribute of the Error.", "memberof": "mocha", "meta": {"code": {"paramnames": ["err"], "type": "FunctionExpression", "id": "astnode100000265", "name": "mocha.throwError"}, "vars": {"": null}, "columnno": 0, "filename": "browser-entry.js", "range": [2608, 2732], "lineno": 105, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "mocha.throwError", "scope": "static", "name": "throwError"}, {"comment": "/**\r\n * Override ui to ensure that the ui functions are initialized.\r\n * Normally this would happen in Mocha.prototype.loadFiles.\r\n */", "kind": "function", "description": "Override ui to ensure that the ui functions are initialized.\rNormally this would happen in Mocha.prototype.loadFiles.", "memberof": "mocha", "meta": {"code": {"paramnames": ["ui"], "type": "FunctionExpression", "id": "astnode100000287", "name": "mocha.ui"}, "columnno": 0, "filename": "browser-entry.js", "range": [2875, 3012], "lineno": 117, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "mocha.ui", "scope": "static", "name": "ui"}, {"comment": "/**\r\n * Setup mocha with the given setting options.\r\n */", "kind": "function", "description": "Setup mocha with the given setting options.", "memberof": "mocha", "meta": {"code": {"paramnames": ["opts"], "type": "FunctionExpression", "id": "astnode100000319", "name": "mocha.setup"}, "vars": {"opt": "mocha.setup~opt", "opts": "mocha.setup~opts"}, "columnno": 0, "filename": "browser-entry.js", "range": [3077, 3295], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "mocha.setup", "scope": "static", "name": "setup"}, {"comment": "/**\r\n * Run mocha, returning the Runner.\r\n */", "kind": "function", "description": "Run mocha, returning the Runner.", "memberof": "mocha", "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100000362", "name": "mocha.run"}, "vars": {"": null, "query": "mocha.run~query", "options": "mocha.run~options"}, "columnno": 0, "filename": "browser-entry.js", "range": [3349, 4042], "lineno": 143, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "mocha.run", "scope": "static", "name": "run"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000005", "name": "module.exports"}, "vars": {"": null}, "columnno": 0, "filename": ".wallaby.js", "range": [17, 1872], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "setup", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000057", "name": "setup"}, "vars": {"": null, "childProcess": "setup~childProcess", "mochaUnderTest": "setup~mochaUnderTest", "execFile": "setup~execFile", "childProcess.execFile": "setup~childProcess.execFile", "runningMocha": "setup~runningMocha"}, "columnno": 4, "filename": ".wallaby.js", "range": [796, 1845], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "setup", "scope": "global"}, {"comment": "", "kind": "function", "name": "execFile", "memberof": "setup~childProcess", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "setup", "type": "FunctionExpression", "id": "astnode100000104", "name": "childProcess.execFile"}, "vars": {"opts.cwd": "setup~childProcess.execFile~opts.cwd", "opts": "setup~childProcess.execFile~opts"}, "columnno": 6, "filename": ".wallaby.js", "range": [1493, 1805], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha"}, "longname": "setup~childProcess.execFile", "scope": "static"}, {"comment": "", "kind": "function", "name": "mixinMochaAssertions", "undocumented": true, "meta": {"code": {"paramnames": ["expect"], "type": "FunctionExpression", "id": "astnode100000005", "name": "exports.mixinMochaAssertions"}, "vars": {"": null}, "columnno": 0, "filename": "assertions.js", "range": [17, 9793], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test"}, "longname": "mixinMochaAssertions", "scope": "global"}, {"comment": "", "kind": "function", "name": "identify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000088", "name": "identify"}, "columnno": 6, "filename": "assertions.js", "range": [156, 411], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test"}, "longname": "identify", "scope": "global"}, {"comment": "", "kind": "function", "name": "identify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000134", "name": "identify"}, "columnno": 6, "filename": "assertions.js", "range": [496, 782], "lineno": 20, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test"}, "longname": "identify", "scope": "global"}, {"comment": "", "kind": "function", "name": "identify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000185", "name": "identify"}, "columnno": 6, "filename": "assertions.js", "range": [866, 1211], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test"}, "longname": "identify", "scope": "global"}, {"comment": "", "kind": "function", "name": "CircleError", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000201", "name": "CircleError"}, "vars": {"this.message": "<anonymous>~CircleError#message", "this.circular": "<anonymous>~CircleError#circular"}, "columnno": 4, "filename": "json.spec.js", "range": [1591, 1684], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~CircleError", "scope": "inner"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000104", "name": "draw"}, "vars": {"calledDraw": "draw~calledDraw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [728, 795], "lineno": 27, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000111", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [810, 839], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000149", "name": "draw"}, "vars": {"calledDraw": "draw~calledDraw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [1189, 1256], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000156", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [1271, 1300], "lineno": 48, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000189", "name": "slow"}, "columnno": 10, "filename": "nyan.spec.js", "range": [1599, 1618], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000206", "name": "draw"}, "vars": {"calledDraw": "draw~calledDraw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [1749, 1816], "lineno": 67, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000213", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [1831, 1860], "lineno": 70, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000260", "name": "draw"}, "vars": {"calledDraw": "draw~calledDraw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [2272, 2339], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000267", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [2354, 2383], "lineno": 91, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000305", "name": "draw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [2733, 2752], "lineno": 106, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000308", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [2767, 2796], "lineno": 107, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000311", "name": "epilogue"}, "vars": {"calledEpilogue": "epilogue~calledEpilogue"}, "columnno": 12, "filename": "nyan.spec.js", "range": [2811, 2886], "lineno": 108, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000349", "name": "draw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3236, 3255], "lineno": 123, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000352", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3270, 3299], "lineno": 124, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000355", "name": "epilogue"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3314, 3337], "lineno": 125, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "show", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000399", "name": "Base.cursor.show"}, "vars": {"showCalled": "Base.cursor.show~showCalled"}, "columnno": 8, "filename": "nyan.spec.js", "range": [3736, 3808], "lineno": 140, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.show", "scope": "static"}, {"comment": "", "kind": "function", "name": "draw", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000422", "name": "draw"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3908, 3927], "lineno": 146, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "draw", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateColors", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000425", "name": "generateColors"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3942, 3971], "lineno": 147, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "generateColors", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000428", "name": "epilogue"}, "columnno": 12, "filename": "nyan.spec.js", "range": [3986, 4009], "lineno": 148, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100000477", "name": "process.stdout.write"}, "columnno": 6, "filename": "nyan.spec.js", "range": [4362, 4457], "lineno": 167, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000525", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [4708, 4725], "lineno": 178, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000528", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [4727, 4746], "lineno": 178, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "appendRainbow", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000553", "name": "appendRainbow"}, "columnno": 10, "filename": "nyan.spec.js", "range": [4879, 4907], "lineno": 183, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "appendRainbow", "scope": "global"}, {"comment": "", "kind": "function", "name": "rainbowify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000556", "name": "rainbowify"}, "columnno": 10, "filename": "nyan.spec.js", "range": [4920, 4945], "lineno": 184, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "rainbowify", "scope": "global"}, {"comment": "", "kind": "function", "name": "drawScoreboard", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000559", "name": "drawScoreboard"}, "columnno": 10, "filename": "nyan.spec.js", "range": [4958, 4987], "lineno": 185, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "drawScoreboard", "scope": "global"}, {"comment": "", "kind": "function", "name": "drawRainbow", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000562", "name": "drawRainbow"}, "columnno": 10, "filename": "nyan.spec.js", "range": [5000, 5026], "lineno": 186, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "drawRainbow", "scope": "global"}, {"comment": "", "kind": "function", "name": "face", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000576", "name": "face"}, "columnno": 10, "filename": "nyan.spec.js", "range": [5156, 5175], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "face", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000579", "name": "cursorUp"}, "columnno": 10, "filename": "nyan.spec.js", "range": [5188, 5211], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000622", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [5765, 5782], "lineno": 213, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000625", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [5784, 5803], "lineno": 213, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "appendRainbow", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000650", "name": "appendRainbow"}, "columnno": 10, "filename": "nyan.spec.js", "range": [5935, 5963], "lineno": 218, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "appendRainbow", "scope": "global"}, {"comment": "", "kind": "function", "name": "rainbowify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000653", "name": "rainbowify"}, "columnno": 10, "filename": "nyan.spec.js", "range": [5976, 6001], "lineno": 219, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "rainbowify", "scope": "global"}, {"comment": "", "kind": "function", "name": "drawScoreboard", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000656", "name": "drawScoreboard"}, "columnno": 10, "filename": "nyan.spec.js", "range": [6014, 6043], "lineno": 220, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "drawScoreboard", "scope": "global"}, {"comment": "", "kind": "function", "name": "drawRainbow", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000659", "name": "drawRainbow"}, "columnno": 10, "filename": "nyan.spec.js", "range": [6056, 6082], "lineno": 221, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "drawRainbow", "scope": "global"}, {"comment": "", "kind": "function", "name": "face", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000673", "name": "face"}, "columnno": 10, "filename": "nyan.spec.js", "range": [6212, 6231], "lineno": 225, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "face", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000676", "name": "cursorUp"}, "columnno": 10, "filename": "nyan.spec.js", "range": [6244, 6267], "lineno": 226, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "type": "FunctionExpression", "id": "astnode100000731", "name": "process.stdout.write"}, "columnno": 6, "filename": "nyan.spec.js", "range": [6851, 6931], "lineno": 255, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000771", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [7142, 7159], "lineno": 265, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000774", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [7161, 7180], "lineno": 265, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100000832", "name": "process.stdout.write"}, "columnno": 6, "filename": "nyan.spec.js", "range": [7569, 7664], "lineno": 281, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000874", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [7873, 7890], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000877", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [7892, 7911], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000960", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [8519, 8536], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000963", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [8538, 8557], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001041", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [9221, 9238], "lineno": 335, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001044", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [9240, 9259], "lineno": 335, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001113", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [9903, 9920], "lineno": 356, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001116", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [9922, 9941], "lineno": 356, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "rainbowify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001144", "name": "rainbowify"}, "vars": {"expectedSegment": "rainbowify~expectedSegment"}, "columnno": 10, "filename": "nyan.spec.js", "range": [10155, 10239], "lineno": 362, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "rainbowify", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001176", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [10564, 10581], "lineno": 373, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001179", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [10583, 10602], "lineno": 373, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "rainbowify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001222", "name": "rainbowify"}, "columnno": 10, "filename": "nyan.spec.js", "range": [11049, 11124], "lineno": 387, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "rainbowify", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001257", "name": "on"}, "columnno": 35, "filename": "nyan.spec.js", "range": [11460, 11477], "lineno": 400, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001260", "name": "once"}, "columnno": 54, "filename": "nyan.spec.js", "range": [11479, 11498], "lineno": 400, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "rainbowify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001288", "name": "rainbowify"}, "vars": {"expectedSegment": "rainbowify~expectedSegment"}, "columnno": 10, "filename": "nyan.spec.js", "range": [11713, 11797], "lineno": 406, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "rainbowify", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100001345", "name": "process.stdout.write"}, "columnno": 6, "filename": "nyan.spec.js", "range": [12229, 12430], "lineno": 428, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "color", "memberof": "Base", "undocumented": true, "meta": {"code": {"paramnames": ["type", "n"], "type": "FunctionExpression", "id": "astnode100001383", "name": "Base.color"}, "columnno": 6, "filename": "nyan.spec.js", "range": [12472, 12539], "lineno": 435, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.color", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001438", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [12851, 12868], "lineno": 449, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001441", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [12870, 12889], "lineno": 449, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001452", "name": "cursorUp"}, "columnno": 8, "filename": "nyan.spec.js", "range": [12939, 12962], "lineno": 451, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001511", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [13548, 13565], "lineno": 474, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001514", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [13567, 13586], "lineno": 474, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001525", "name": "cursorUp"}, "vars": {"expectedCursorArgument": "cursorUp~expectedCursorArgument"}, "columnno": 8, "filename": "nyan.spec.js", "range": [13636, 13717], "lineno": 476, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100001583", "name": "process.stdout.write"}, "columnno": 6, "filename": "nyan.spec.js", "range": [14130, 14331], "lineno": 495, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001657", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [14702, 14719], "lineno": 513, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001660", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [14721, 14740], "lineno": 513, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001671", "name": "cursorUp"}, "columnno": 8, "filename": "nyan.spec.js", "range": [14787, 14810], "lineno": 515, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001717", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [15301, 15318], "lineno": 533, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001720", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [15320, 15339], "lineno": 533, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "cursorUp", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001731", "name": "cursorUp"}, "vars": {"expectedCursorArgument": "cursorUp~expectedCursorArgument"}, "columnno": 8, "filename": "nyan.spec.js", "range": [15386, 15467], "lineno": 535, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "cursorUp", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001771", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [15821, 15838], "lineno": 548, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001774", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [15840, 15859], "lineno": 548, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001810", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [16108, 16125], "lineno": 554, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001813", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [16127, 16146], "lineno": 554, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001849", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [16372, 16389], "lineno": 560, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001852", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [16391, 16410], "lineno": 560, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001889", "name": "on"}, "columnno": 33, "filename": "nyan.spec.js", "range": [16635, 16652], "lineno": 566, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001892", "name": "once"}, "columnno": 52, "filename": "nyan.spec.js", "range": [16654, 16673], "lineno": 566, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000120", "name": "on"}, "columnno": 14, "filename": "xunit.spec.js", "range": [915, 932], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000123", "name": "once"}, "columnno": 33, "filename": "xunit.spec.js", "range": [934, 953], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "sync", "memberof": "mkdirp", "undocumented": true, "meta": {"code": {"paramnames": ["directory"], "type": "FunctionExpression", "id": "astnode100000228", "name": "mkdirp.sync"}, "vars": {"expectedDirectory": "mkdirp.sync~expectedDirectory"}, "columnno": 8, "filename": "xunit.spec.js", "range": [1964, 2052], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "mkdirp.sync", "scope": "static"}, {"comment": "", "kind": "function", "name": "dirname", "memberof": "path", "undocumented": true, "meta": {"code": {"paramnames": ["location"], "type": "FunctionExpression", "id": "astnode100000240", "name": "path.dirname"}, "columnno": 8, "filename": "xunit.spec.js", "range": [2063, 2137], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "path.dirname", "scope": "static"}, {"comment": "", "kind": "function", "name": "createWriteStream", "memberof": "fs", "undocumented": true, "meta": {"code": {"paramnames": ["streamDetails"], "type": "FunctionExpression", "id": "astnode100000250", "name": "fs.createWriteStream"}, "columnno": 8, "filename": "xunit.spec.js", "range": [2148, 2240], "lineno": 64, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "fs.createWriteStream", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~pendingTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000323", "name": "slow"}, "columnno": 8, "filename": "xunit.spec.js", "range": [2864, 2883], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~pendingTest.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~failTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000332", "name": "slow"}, "columnno": 8, "filename": "xunit.spec.js", "range": [2950, 2969], "lineno": 91, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~failTest.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~passTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000341", "name": "slow"}, "columnno": 8, "filename": "xunit.spec.js", "range": [3036, 3055], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~passTest.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000349", "name": "runner.once"}, "columnno": 18, "filename": "xunit.spec.js", "range": [3085, 3432], "lineno": 97, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000402", "name": "write"}, "columnno": 10, "filename": "xunit.spec.js", "range": [3506, 3526], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "write", "scope": "global"}, {"comment": "", "kind": "function", "name": "test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000405", "name": "test"}, "columnno": 10, "filename": "xunit.spec.js", "range": [3539, 3611], "lineno": 116, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "test", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000453", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [3996, 4013], "lineno": 131, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000456", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [4015, 4034], "lineno": 131, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "callback", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000460", "name": "callback"}, "vars": {"callbackArgument": "<anonymous>~callback~callbackArgument"}, "columnno": 12, "filename": "xunit.spec.js", "range": [4051, 4133], "lineno": 132, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~callback", "scope": "inner"}, {"comment": "", "kind": "function", "name": "end", "memberof": "<anonymous>~fileStream", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000477", "name": "end"}, "vars": {"calledEnd": "<anonymous>~fileStream.end~calledEnd"}, "columnno": 10, "filename": "xunit.spec.js", "range": [4206, 4300], "lineno": 137, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~fileStream.end", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000530", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [4662, 4679], "lineno": 150, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000533", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [4681, 4700], "lineno": 150, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "callback", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000537", "name": "callback"}, "vars": {"callbackArgument": "<anonymous>~callback~callbackArgument"}, "columnno": 12, "filename": "xunit.spec.js", "range": [4717, 4799], "lineno": 151, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~callback", "scope": "inner"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000588", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [5165, 5182], "lineno": 164, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000591", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [5184, 5203], "lineno": 164, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "write", "memberof": "<anonymous>~fileStream", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000598", "name": "write"}, "vars": {"expectedWrite": "<anonymous>~fileStream.write~expectedWrite"}, "columnno": 10, "filename": "xunit.spec.js", "range": [5246, 5319], "lineno": 166, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~fileStream.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "type": "FunctionExpression", "id": "astnode100000646", "name": "process.stdout.write"}, "columnno": 8, "filename": "xunit.spec.js", "range": [5675, 5759], "lineno": 178, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000667", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [5795, 5812], "lineno": 182, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000670", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [5814, 5833], "lineno": 182, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "log", "memberof": "console", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "type": "FunctionExpression", "id": "astnode100000729", "name": "console.log"}, "columnno": 8, "filename": "xunit.spec.js", "range": [6331, 6406], "lineno": 195, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "console.log", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000748", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [6442, 6459], "lineno": 199, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000751", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [6461, 6480], "lineno": 199, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000807", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [6943, 6960], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000810", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [6962, 6981], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedTest.parent", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000823", "name": "fullTitle"}, "columnno": 12, "filename": "xunit.spec.js", "range": [7110, 7189], "lineno": 217, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.parent.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000848", "name": "write"}, "vars": {"expectedWrite": "write~expectedWrite"}, "columnno": 12, "filename": "xunit.spec.js", "range": [7457, 7536], "lineno": 231, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "write", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000905", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [8131, 8148], "lineno": 256, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000908", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [8150, 8169], "lineno": 256, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "isPending", "memberof": "<anonymous>~expectedTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000915", "name": "isPending"}, "columnno": 10, "filename": "xunit.spec.js", "range": [8216, 8278], "lineno": 259, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.isPending", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedTest.parent", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000924", "name": "fullTitle"}, "columnno": 12, "filename": "xunit.spec.js", "range": [8347, 8426], "lineno": 264, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.parent.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000939", "name": "write"}, "vars": {"expectedWrite": "write~expectedWrite"}, "columnno": 12, "filename": "xunit.spec.js", "range": [8531, 8610], "lineno": 272, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "write", "scope": "global"}, {"comment": "", "kind": "function", "name": "on", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000984", "name": "on"}, "columnno": 31, "filename": "xunit.spec.js", "range": [9073, 9090], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "on", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000987", "name": "once"}, "columnno": 50, "filename": "xunit.spec.js", "range": [9092, 9111], "lineno": 291, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "once", "scope": "global"}, {"comment": "", "kind": "function", "name": "isPending", "memberof": "<anonymous>~expectedTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000994", "name": "isPending"}, "columnno": 10, "filename": "xunit.spec.js", "range": [9158, 9221], "lineno": 294, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.isPending", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedTest.parent", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001003", "name": "fullTitle"}, "columnno": 12, "filename": "xunit.spec.js", "range": [9290, 9369], "lineno": 299, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.parent.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001018", "name": "write"}, "vars": {"expectedWrite": "write~expectedWrite"}, "columnno": 12, "filename": "xunit.spec.js", "range": [9475, 9554], "lineno": 307, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "write", "scope": "global"}, {"comment": "", "kind": "function", "name": "generateTest", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001068", "name": "generateTest"}, "vars": {"": null, "t": "<anonymous>~generateTest~t"}, "columnno": 10, "filename": "xunit.spec.js", "range": [10106, 10588], "lineno": 332, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~generateTest", "scope": "inner"}, {"comment": "", "kind": "function", "name": "isPending", "memberof": "<anonymous>~generateTest~t", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001086", "name": "isPending"}, "columnno": 10, "filename": "xunit.spec.js", "range": [10259, 10322], "lineno": 336, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~generateTest~t.isPending", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~generateTest~t", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001091", "name": "slow"}, "columnno": 10, "filename": "xunit.spec.js", "range": [10335, 10393], "lineno": 339, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~generateTest~t.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~generateTest~t.parent", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001098", "name": "fullTitle"}, "columnno": 12, "filename": "xunit.spec.js", "range": [10429, 10508], "lineno": 343, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~generateTest~t.parent.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "memberof": "<anonymous>~xunit", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001127", "name": "xunit.write"}, "vars": {"expectedWrite": "<anonymous>~xunit.write~expectedWrite"}, "columnno": 6, "filename": "xunit.spec.js", "range": [10741, 10816], "lineno": 356, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~xunit.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["eventName", "eventHandler"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001236", "name": "runner.once"}, "vars": {"events[undefined]": "<anonymous>~events.undefined]"}, "columnno": 18, "filename": "xunit.spec.js", "range": [11829, 11968], "lineno": 388, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "write", "memberof": "<anonymous>~fileStream", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001258", "name": "write"}, "columnno": 8, "filename": "xunit.spec.js", "range": [12022, 12124], "lineno": 395, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~fileStream.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "hide", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000156", "name": "Base.cursor.hide"}, "columnno": 6, "filename": "landing.spec.js", "range": [1026, 1058], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.hide", "scope": "static"}, {"comment": "", "kind": "function", "name": "hide", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000210", "name": "Base.cursor.hide"}, "vars": {"calledCursorHide": "Base.cursor.hide~calledCursorHide"}, "columnno": 6, "filename": "landing.spec.js", "range": [1395, 1469], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.hide", "scope": "static"}, {"comment": "", "kind": "function", "name": "show", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000366", "name": "Base.cursor.show"}, "vars": {"calledCursorShow": "Base.cursor.show~calledCursorShow"}, "columnno": 6, "filename": "landing.spec.js", "range": [2688, 2762], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.show", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000393", "name": "epilogue"}, "vars": {"calledEpilogue": "epilogue~calledEpilogue"}, "columnno": 10, "filename": "landing.spec.js", "range": [2891, 2962], "lineno": 104, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000132", "name": "epilogue"}, "columnno": 32, "filename": "spec.spec.js", "range": [876, 899], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000184", "name": "epilogue"}, "columnno": 32, "filename": "spec.spec.js", "range": [1294, 1317], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000234", "name": "slow"}, "columnno": 10, "filename": "spec.spec.js", "range": [1766, 1820], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000255", "name": "epilogue"}, "columnno": 34, "filename": "spec.spec.js", "range": [1938, 1961], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000314", "name": "slow"}, "columnno": 10, "filename": "spec.spec.js", "range": [2536, 2590], "lineno": 80, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000335", "name": "epilogue"}, "columnno": 34, "filename": "spec.spec.js", "range": [2708, 2731], "lineno": 85, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000402", "name": "epilogue"}, "columnno": 32, "filename": "spec.spec.js", "range": [3216, 3239], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "color", "memberof": "Base", "undocumented": true, "meta": {"code": {"paramnames": ["type", "str"], "type": "FunctionExpression", "id": "astnode100000108", "name": "Base.color"}, "columnno": 4, "filename": "dot.spec.js", "range": [617, 709], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.color", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000181", "name": "epilogue"}, "columnno": 32, "filename": "dot.spec.js", "range": [1045, 1068], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000241", "name": "epilogue"}, "columnno": 34, "filename": "dot.spec.js", "range": [1529, 1552], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000289", "name": "epilogue"}, "columnno": 34, "filename": "dot.spec.js", "range": [1930, 1953], "lineno": 59, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000323", "name": "slow"}, "columnno": 6, "filename": "dot.spec.js", "range": [2198, 2244], "lineno": 68, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000375", "name": "epilogue"}, "columnno": 36, "filename": "dot.spec.js", "range": [2623, 2646], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000440", "name": "epilogue"}, "columnno": 36, "filename": "dot.spec.js", "range": [3162, 3185], "lineno": 90, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000504", "name": "epilogue"}, "columnno": 36, "filename": "dot.spec.js", "range": [3645, 3668], "lineno": 100, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000568", "name": "epilogue"}, "columnno": 36, "filename": "dot.spec.js", "range": [4137, 4160], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000653", "name": "epilogue"}, "columnno": 34, "filename": "dot.spec.js", "range": [4833, 4856], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000704", "name": "epilogue"}, "columnno": 34, "filename": "dot.spec.js", "range": [5254, 5277], "lineno": 138, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000750", "name": "epilogue"}, "vars": {"epilogueCalled": "<anonymous>~epilogue~epilogueCalled"}, "columnno": 10, "filename": "dot.spec.js", "range": [5615, 5679], "lineno": 148, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~epilogue", "scope": "inner"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100000079", "name": "process.stdout.write"}, "columnno": 4, "filename": "progress.spec.js", "range": [502, 657], "lineno": 19, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "hide", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000143", "name": "Base.cursor.hide"}, "vars": {"calledCursorHide": "Base.cursor.hide~calledCursorHide"}, "columnno": 6, "filename": "progress.spec.js", "range": [912, 986], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.hide", "scope": "static"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000217", "name": "Base.cursor.CR"}, "columnno": 8, "filename": "progress.spec.js", "range": [1462, 1492], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000332", "name": "Base.cursor.CR"}, "vars": {"calledCursorCR": "Base.cursor.CR~calledCursorCR"}, "columnno": 8, "filename": "progress.spec.js", "range": [2280, 2354], "lineno": 74, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "show", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000481", "name": "Base.cursor.show"}, "vars": {"calledCursorShow": "Base.cursor.show~calledCursorShow"}, "columnno": 6, "filename": "progress.spec.js", "range": [3608, 3682], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.show", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000508", "name": "epilogue"}, "vars": {"calledEpilogue": "epilogue~calledEpilogue"}, "columnno": 10, "filename": "progress.spec.js", "range": [3809, 3880], "lineno": 125, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000074", "name": "fullTitle"}, "columnno": 4, "filename": "list.spec.js", "range": [486, 545], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000081", "name": "slow"}, "columnno": 4, "filename": "list.spec.js", "range": [585, 604], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000144", "name": "epilogue"}, "columnno": 32, "filename": "list.spec.js", "range": [1040, 1063], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000201", "name": "epilogue"}, "columnno": 32, "filename": "list.spec.js", "range": [1510, 1533], "lineno": 49, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000241", "name": "Base.cursor.CR"}, "vars": {"calledCursorCR": "Base.cursor.CR~calledCursorCR"}, "columnno": 6, "filename": "list.spec.js", "range": [1804, 1874], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000267", "name": "epilogue"}, "columnno": 19, "filename": "list.spec.js", "range": [1964, 1987], "lineno": 62, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000315", "name": "Base.cursor.CR"}, "columnno": 6, "filename": "list.spec.js", "range": [2356, 2386], "lineno": 73, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000339", "name": "epilogue"}, "columnno": 32, "filename": "list.spec.js", "range": [2489, 2512], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000399", "name": "Base.cursor.CR"}, "vars": {"calledCursorCR": "Base.cursor.CR~calledCursorCR"}, "columnno": 6, "filename": "list.spec.js", "range": [3007, 3077], "lineno": 97, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000425", "name": "epilogue"}, "columnno": 19, "filename": "list.spec.js", "range": [3167, 3190], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "Base.cursor", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000459", "name": "Base.cursor.CR"}, "columnno": 6, "filename": "list.spec.js", "range": [3455, 3485], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000483", "name": "epilogue"}, "columnno": 32, "filename": "list.spec.js", "range": [3588, 3611], "lineno": 112, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000554", "name": "runner.once"}, "vars": {"err.actual": "<anonymous>~runner.once~err.actual", "err.showDiff": "<anonymous>~runner.once~err.showDiff", "checked": "<anonymous>~runner.once~checked", "err.expected": "<anonymous>~runner.once~err.expected", "err": "<anonymous>~runner.once~err"}, "columnno": 18, "filename": "list.spec.js", "range": [4097, 4569], "lineno": 129, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000616", "name": "epilogue"}, "columnno": 19, "filename": "list.spec.js", "range": [4591, 4614], "lineno": 143, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000666", "name": "epilogue"}, "vars": {"calledEpilogue": "epilogue~calledEpilogue"}, "columnno": 10, "filename": "list.spec.js", "range": [4968, 5039], "lineno": 156, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "list", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["tests"], "type": "FunctionDeclaration", "id": "astnode100000070", "name": "list"}, "vars": {"Base.useColors": "Base.useColors", "retval": "<anonymous>~list~retval"}, "columnno": 2, "filename": "base.spec.js", "range": [431, 576], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~list", "scope": "inner"}, {"comment": "", "kind": "function", "name": "generateDiff", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["actual", "expected"], "type": "FunctionDeclaration", "id": "astnode100000096", "name": "generateDiff"}, "vars": {"Base.useColors": "Base.useColors", "retval": "<anonymous>~generateDiff~retval"}, "columnno": 2, "filename": "base.spec.js", "range": [582, 765], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "<anonymous>~generateDiff", "scope": "inner"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100000148", "name": "process.stdout.write"}, "columnno": 4, "filename": "base.spec.js", "range": [892, 1047], "lineno": 36, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "inspect", "memberof": "<anonymous>~err", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001399", "name": "inspect"}, "columnno": 6, "filename": "base.spec.js", "range": [10234, 10301], "lineno": 373, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~err.inspect", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedSuite", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000092", "name": "fullTitle"}, "columnno": 8, "filename": "markdown.spec.js", "range": [735, 806], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedSuite.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000102", "name": "fullTitle"}, "columnno": 12, "filename": "markdown.spec.js", "range": [888, 967], "lineno": 31, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "fullTitle", "scope": "global"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedSuite", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000188", "name": "fullTitle"}, "columnno": 8, "filename": "markdown.spec.js", "range": [1879, 1950], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedSuite.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~expectedTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000213", "name": "fullTitle"}, "columnno": 8, "filename": "markdown.spec.js", "range": [2154, 2225], "lineno": 79, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "currentRetry", "memberof": "<anonymous>~expectedTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000220", "name": "currentRetry"}, "columnno": 8, "filename": "markdown.spec.js", "range": [2273, 2342], "lineno": 83, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.currentRetry", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~expectedTest", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000225", "name": "slow"}, "columnno": 8, "filename": "markdown.spec.js", "range": [2353, 2372], "lineno": 86, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~expectedTest.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000087", "name": "epilogue"}, "columnno": 32, "filename": "min.spec.js", "range": [600, 623], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "epilogue", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000131", "name": "epilogue"}, "vars": {"calledEpilogue": "epilogue~calledEpilogue"}, "columnno": 10, "filename": "min.spec.js", "range": [976, 1047], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "epilogue", "scope": "global"}, {"comment": "", "kind": "function", "name": "fullTitle", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000069", "name": "fullTitle"}, "columnno": 6, "filename": "tap.spec.js", "range": [456, 519], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.fullTitle", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000074", "name": "slow"}, "columnno": 6, "filename": "tap.spec.js", "range": [528, 547], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000139", "name": "runner.grepTotal"}, "vars": {"expectedString": "<anonymous>~runner.grepTotal~expectedString"}, "columnno": 8, "filename": "tap.spec.js", "range": [1000, 1117], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000228", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [1909, 1941], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000291", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [2428, 2460], "lineno": 83, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000365", "name": "runner.on"}, "columnno": 10, "filename": "tap.spec.js", "range": [3204, 3421], "lineno": 108, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000398", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [3464, 3496], "lineno": 116, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000476", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [4279, 4311], "lineno": 143, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000554", "name": "runner.on"}, "columnno": 10, "filename": "tap.spec.js", "range": [5171, 5388], "lineno": 171, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000587", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [5431, 5463], "lineno": 179, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000662", "name": "runner.once"}, "columnno": 22, "filename": "tap.spec.js", "range": [6191, 6410], "lineno": 203, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000695", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [6453, 6485], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000765", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [7050, 7082], "lineno": 229, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["string"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000881", "name": "runner.grepTotal"}, "vars": {"expectedString": "<anonymous>~runner.grepTotal~expectedString"}, "columnno": 8, "filename": "tap.spec.js", "range": [8009, 8126], "lineno": 262, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100000989", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [9059, 9091], "lineno": 292, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001052", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [9578, 9610], "lineno": 306, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001126", "name": "runner.on"}, "columnno": 10, "filename": "tap.spec.js", "range": [10354, 10571], "lineno": 331, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001159", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [10614, 10646], "lineno": 339, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001240", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [11515, 11547], "lineno": 369, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "on", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001321", "name": "runner.on"}, "columnno": 10, "filename": "tap.spec.js", "range": [12491, 12708], "lineno": 400, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.on", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001354", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [12751, 12783], "lineno": 408, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "once", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": ["event", "callback"], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001433", "name": "runner.once"}, "columnno": 22, "filename": "tap.spec.js", "range": [13633, 13852], "lineno": 436, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.once", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001466", "name": "runner.grepTotal"}, "columnno": 10, "filename": "tap.spec.js", "range": [13895, 13927], "lineno": 444, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "grepTotal", "memberof": "<anonymous>~runner", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100001536", "name": "runner.grepTotal"}, "columnno": 8, "filename": "tap.spec.js", "range": [14492, 14524], "lineno": 462, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~runner.grepTotal", "scope": "static"}, {"comment": "", "kind": "function", "name": "createMockRunner", "undocumented": true, "meta": {"code": {"paramnames": ["runStr", "ifStr1", "ifStr2", "ifStr3", "arg1", "arg2"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "createMockRunner"}, "vars": {"mockRunner": "createMockRunner~mockRunner", "runnerFunction": "createMockRunner~runnerFunction"}, "columnno": 0, "filename": "helpers.js", "range": [421, 758], "lineno": 13, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "createMockRunner", "scope": "global"}, {"comment": "", "kind": "function", "name": "createRunnerFunction", "undocumented": true, "meta": {"code": {"paramnames": ["runStr", "ifStr1", "ifStr2", "ifStr3", "arg1", "arg2"], "type": "FunctionDeclaration", "id": "astnode100000044", "name": "createRunnerFunction"}, "vars": {"test": "createRunnerFunction~test", "": null, "error": "createRunnerFunction~error", "expectedSuite": "createRunnerFunction~expectedSuite", "expectedError": "createRunnerFunction~expectedError"}, "columnno": 0, "filename": "helpers.js", "range": [762, 3049], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "createRunnerFunction", "scope": "global"}, {"comment": "", "kind": "function", "name": "makeTest", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000302", "name": "makeTest"}, "vars": {"": null}, "columnno": 0, "filename": "helpers.js", "range": [3053, 3179], "lineno": 125, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "makeTest", "scope": "global"}, {"comment": "", "kind": "function", "name": "titlePath", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000310", "name": "titlePath"}, "columnno": 4, "filename": "helpers.js", "range": [3110, 3170], "lineno": 128, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "titlePath", "scope": "global"}, {"comment": "", "kind": "function", "name": "createElements", "undocumented": true, "meta": {"code": {"paramnames": ["argObj"], "type": "FunctionDeclaration", "id": "astnode100000316", "name": "createElements"}, "vars": {"i": "createElements~i", "res": "createElements~res"}, "columnno": 0, "filename": "helpers.js", "range": [3183, 3339], "lineno": 134, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "createElements", "scope": "global"}, {"comment": "", "kind": "function", "name": "makeExpectedTest", "undocumented": true, "meta": {"code": {"paramnames": ["expectedTitle", "expectedFullTitle", "expectedDuration", "currentRetry", "expectedBody"], "type": "FunctionDeclaration", "id": "astnode100000349", "name": "makeExpectedTest"}, "vars": {"": null}, "columnno": 0, "filename": "helpers.js", "range": [3343, 3712], "lineno": 142, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [], "longname": "makeExpectedTest", "scope": "global"}, {"comment": "", "kind": "function", "name": "fullTitle", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000361", "name": "fullTitle"}, "columnno": 4, "filename": "helpers.js", "range": [3513, 3576], "lineno": 151, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "fullTitle", "scope": "global"}, {"comment": "", "kind": "function", "name": "currentRetry", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000368", "name": "currentRetry"}, "columnno": 4, "filename": "helpers.js", "range": [3616, 3677], "lineno": 155, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "currentRetry", "scope": "global"}, {"comment": "", "kind": "function", "name": "slow", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000373", "name": "slow"}, "columnno": 4, "filename": "helpers.js", "range": [3684, 3703], "lineno": 158, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "slow", "scope": "global"}, {"comment": "/**\r\n * Creates closure with reference to the reporter class constructor.\r\n *\r\n * @param {Function} ctor - Reporter class constructor\r\n * @return {createRunReporterFunction~runReporter}\r\n */", "kind": "function", "description": "Creates closure with reference to the reporter class constructor.", "returns": [{"type": {"names": ["createRunReporterFunction~runReporter"]}}], "meta": {"code": {"paramnames": ["ctor"], "type": "FunctionDeclaration", "id": "astnode100000376", "name": "createRunReporterFunction"}, "vars": {"": null, "runReporter": "createRunReporterFunction~runReporter"}, "columnno": 0, "filename": "helpers.js", "range": [3908, 5015], "lineno": 168, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [{"type": {"names": ["function"]}, "description": "Reporter class constructor", "name": "ctor"}], "longname": "createRunReporterFunction", "scope": "global", "name": "createRunReporterFunction"}, {"comment": "/**\r\n   * Run reporter using stream reassignment to capture output.\r\n   *\r\n   * @param {Object} stubSelf - Reporter-like stub instance\r\n   * @param {Runner} runner - Mock instance\r\n   * @param {Object} [options] - Reporter configuration settings\r\n   * @param {boolean} [tee=false] - Whether to echo output to screen\r\n   * @return {string[]} Lines of output written to `stdout`\r\n   */", "kind": "function", "description": "Run reporter using stream reassignment to capture output.", "memberof": "createRunReporterFunction", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "Lines of output written to `stdout`"}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000381", "name": "runReporter"}, "vars": {"": null, "stdoutWrite": "createRunReporterFunction~runReporter~stdoutWrite", "process.stdout.write": "process.stdout.write", "stdout": "createRunReporterFunction~runReporter~stdout"}, "columnno": 6, "filename": "helpers.js", "range": [4345, 4986], "lineno": 178, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "params": [{"type": {"names": ["Object"]}, "description": "Reporter-like stub instance", "name": "stubSelf"}, {"type": {"names": ["Runner"]}, "description": "Mock instance", "name": "runner"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Reporter configuration settings", "name": "options"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Whether to echo output to screen", "name": "tee"}], "longname": "createRunReporterFunction~runReporter", "scope": "inner", "name": "runReporter"}, {"comment": "", "kind": "function", "name": "write", "memberof": "process.stdout", "undocumented": true, "meta": {"code": {"paramnames": ["string", "enc", "callback"], "type": "FunctionExpression", "id": "astnode100000402", "name": "process.stdout.write"}, "columnno": 4, "filename": "helpers.js", "range": [4547, 4731], "lineno": 183, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "process.stdout.write", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000350", "name": "slow"}, "columnno": 6, "filename": "doc.spec.js", "range": [3136, 3183], "lineno": 94, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "slow", "memberof": "<anonymous>~test", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000513", "name": "slow"}, "columnno": 6, "filename": "doc.spec.js", "range": [4674, 4721], "lineno": 134, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/reporters"}, "longname": "<anonymous>~test.slow", "scope": "static"}, {"comment": "", "kind": "function", "name": "proxyLoadOptions", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000051", "name": "proxyLoadOptions"}, "vars": {"": null}, "columnno": 6, "filename": "options.spec.js", "range": [386, 772], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/node-unit/cli"}, "params": [], "longname": "proxyLoadOptions", "scope": "global"}, {"comment": "", "kind": "function", "name": "before", "memberof": "Array", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000014", "name": "before"}, "columnno": 2, "filename": "exports.spec.js", "range": [57, 109], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.before", "scope": "static"}, {"comment": "", "kind": "function", "name": "after", "memberof": "Array", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000023", "name": "after"}, "columnno": 2, "filename": "exports.spec.js", "range": [116, 354], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.after", "scope": "static"}, {"comment": "", "kind": "function", "name": "beforeEach", "memberof": "Array.\"#indexOf()\"", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000048", "name": "beforeEach"}, "columnno": 4, "filename": "exports.spec.js", "range": [382, 447], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.\"#indexOf()\".beforeEach", "scope": "static"}, {"comment": "", "kind": "function", "name": "afterEach", "memberof": "Array.\"#indexOf()\"", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000057", "name": "afterEach"}, "columnno": 4, "filename": "exports.spec.js", "range": [456, 519], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.\"#indexOf()\".afterEach", "scope": "static"}, {"comment": "", "kind": "function", "name": "\"should return -1 when the value is not present\"", "memberof": "Array.\"#indexOf()\"", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000066", "name": "\"should return -1 when the value is not present\""}, "columnno": 4, "filename": "exports.spec.js", "range": [528, 723], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.\"#indexOf()\".\"should return -1 when the value is not present\"", "scope": "static"}, {"comment": "", "kind": "function", "name": "\"should return the correct index when the value is present\"", "memberof": "Array.\"#indexOf()\"", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000103", "name": "\"should return the correct index when the value is present\""}, "columnno": 4, "filename": "exports.spec.js", "range": [732, 985], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/interfaces"}, "longname": "Array.\"#indexOf()\".\"should return the correct index when the value is present\"", "scope": "static"}, {"comment": "", "kind": "function", "name": "'.foo'", "memberof": "require.extensions", "undocumented": true, "meta": {"code": {"paramnames": ["module", "filename"], "type": "FunctionExpression", "id": "astnode100000011", "name": "require.extensions['.foo']"}, "vars": {"content": "require.extensions.'.foo'~content", "test": "require.extensions.'.foo'~test"}, "columnno": 0, "filename": "foo.fixture.js", "range": [44, 353], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/compiler-fixtures"}, "longname": "require.extensions.'.foo'", "scope": "static"}, {"comment": "/**\r\n     * Returns a test that executes Mocha in a subprocess with either\r\n     * `--exit`, `--no-exit`, or default behavior.\r\n     * @param {boolean} shouldExit - Expected result; `true` if Mocha should\r\n     *   have force-killed the process.\r\n     * @param {string} [behavior] - 'enabled' or 'disabled'\r\n     * @returns {Function}\r\n     */", "kind": "function", "description": "Returns a test that executes Mocha in a subprocess with either\r`--exit`, `--no-exit`, or default behavior.", "memberof": "<anonymous>", "returns": [{"type": {"names": ["function"]}}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001587", "name": "runExit"}, "vars": {"": null}, "columnno": 8, "filename": "options.spec.js", "range": [16617, 17528], "lineno": 590, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["boolean"]}, "description": "Expected result; `true` if Mocha should\r  have force-killed the process.", "name": "shouldExit"}, {"optional": true, "type": {"names": ["string"]}, "description": "'enabled' or 'disabled'", "name": "behavior"}], "longname": "<anonymous>~runExit", "scope": "inner", "name": "runExit"}, {"comment": "", "kind": "function", "name": "runMochaTest", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["fixture", "args", "handleResult", "done"], "type": "FunctionDeclaration", "id": "astnode100001890", "name": "runMochaTest"}, "vars": {"": null}, "columnno": 4, "filename": "options.spec.js", "range": [19586, 19835], "lineno": 692, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~runMochaTest", "scope": "inner"}, {"comment": "", "kind": "function", "name": "not", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000343", "name": "not"}, "vars": {"": null}, "columnno": 8, "filename": "reporters.spec.js", "range": [2866, 2988], "lineno": 104, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~not", "scope": "inner"}, {"comment": "", "kind": "function", "name": "versionPredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000360", "name": "versionPredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [2999, 3096], "lineno": 109, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~versionPredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "planPredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000374", "name": "planPredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [3107, 3194], "lineno": 112, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~planPredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "testLinePredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000388", "name": "testLinePredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [3205, 3322], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~testLinePredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "diagnosticPredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000410", "name": "diagnosticPredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [3333, 3418], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~diagnosticPredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "bailOutPredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000424", "name": "bailOutPredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [3429, 3519], "lineno": 121, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~bailOutPredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "anythingElsePredicate", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000438", "name": "anythingElsePredicate"}, "columnno": 8, "filename": "reporters.spec.js", "range": [3530, 3826], "lineno": 124, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~anythingElsePredicate", "scope": "inner"}, {"comment": "", "kind": "function", "name": "runFixtureAndValidateOutput", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000480", "name": "runFixtureAndValidateOutput"}, "vars": {"": null}, "columnno": 10, "filename": "reporters.spec.js", "range": [3901, 5685], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~runFixtureAndValidateOutput", "scope": "inner"}, {"comment": "", "kind": "function", "name": "occurences", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000053", "name": "occurences"}, "vars": {"pattern": "<anonymous>~occurences~pattern"}, "columnno": 10, "filename": "regression.spec.js", "range": [354, 494], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~occurences", "scope": "inner"}, {"comment": "", "kind": "function", "name": "run", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["fnPath", "outputFilter"], "type": "FunctionDeclaration", "id": "astnode100000447", "name": "run"}, "vars": {"": null}, "columnno": 2, "filename": "hook-err.spec.js", "range": [4645, 5056], "lineno": 152, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~run", "scope": "inner"}, {"comment": "", "kind": "function", "name": "onlyConsoleOutput", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000503", "name": "onlyConsoleOutput"}, "vars": {"foundSummary": "onlyConsoleOutput~foundSummary", "": null}, "columnno": 0, "filename": "hook-err.spec.js", "range": [5065, 5287], "lineno": 170, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "onlyConsoleOutput", "scope": "global"}, {"comment": "", "kind": "function", "name": "onlyErrorTitle", "undocumented": true, "meta": {"code": {"paramnames": ["line"], "type": "FunctionDeclaration", "id": "astnode100000537", "name": "onlyErrorTitle"}, "vars": {"": null, "foundErrorTitle": "onlyErrorTitle~foundErrorTitle", "foundError": "onlyErrorTitle~foundError"}, "columnno": 0, "filename": "hook-err.spec.js", "range": [5291, 5615], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "onlyErrorTitle", "scope": "global"}, {"comment": "", "kind": "function", "name": "dirLookup", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000352", "name": "dirLookup"}, "columnno": 10, "filename": "file-utils.spec.js", "range": [2590, 2684], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~dirLookup", "scope": "inner"}, {"comment": "", "kind": "function", "name": "makeTempDir", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000463", "name": "makeTempDir"}, "columnno": 2, "filename": "file-utils.spec.js", "range": [3577, 3632], "lineno": 112, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~makeTempDir", "scope": "inner"}, {"comment": "", "kind": "function", "name": "removeTempDir", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000472", "name": "removeTempDir"}, "columnno": 2, "filename": "file-utils.spec.js", "range": [3638, 3695], "lineno": 116, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "<anonymous>~removeTempDir", "scope": "inner"}, {"comment": "/**\r\n * Returns an array of diffs corresponding to exceptions thrown from specs,\r\n * given the plaintext output (-C) of a mocha run.\r\n *\r\n * @param  {string}   output\r\n * returns {string[]}\r\n */", "kind": "function", "description": "Returns an array of diffs corresponding to exceptions thrown from specs,\rgiven the plaintext output (-C) of a mocha run.", "meta": {"code": {"paramnames": ["output"], "type": "FunctionDeclaration", "id": "astnode100000028", "name": "getDiffs"}, "vars": {"i": "getDiffs~i", "diffs": "getDiffs~diffs", "inDiff": "getDiffs~inDiff", "inStackTrace": "getDiffs~inStackTrace", "": null}, "columnno": 0, "filename": "diffs.spec.js", "range": [335, 1239], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["string"]}, "description": "returns {string[]}", "name": "output"}], "longname": "getDiffs", "scope": "global", "name": "getDiffs"}, {"comment": "/**\r\n * Returns content of test/integration/fixtures/diffs/output,\r\n * post-processed for consumption by tests.\r\n * @returns {string[]} Array of diff lines\r\n */", "kind": "function", "description": "Returns content of test/integration/fixtures/diffs/output,\rpost-processed for consumption by tests.", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "Array of diff lines"}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000161", "name": "getExpectedOutput"}, "vars": {"": null, "output": "getExpectedOutput~output"}, "columnno": 0, "filename": "diffs.spec.js", "range": [1405, 1801], "lineno": 54, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "getExpectedOutput", "scope": "global", "name": "getExpectedOutput"}, {"comment": "", "kind": "function", "name": "escapeRegExp", "undocumented": true, "meta": {"code": {"paramnames": ["str"], "type": "FunctionDeclaration", "id": "astnode100000030", "name": "escapeRegExp"}, "columnno": 0, "filename": "show-plugins.spec.js", "range": [198, 320], "lineno": 9, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "escapeRegExp", "scope": "global"}, {"comment": "/**\r\n   * Invokes the mocha binary for the given fixture with color output disabled.\r\n   * Accepts an array of additional command line args to pass. The callback is\r\n   * invoked with a summary of the run, in addition to its output. The summary\r\n   * includes the number of passing, pending, and failing tests, as well as the\r\n   * exit code. Useful for testing different reporters.\r\n   *\r\n   * By default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\r\n   * want it.\r\n   * Example response:\r\n   * {\r\n   *   pending: 0,\r\n   *   passing: 0,\r\n   *   failing: 1,\r\n   *   code:    1,\r\n   *   output:  '...'\r\n   * }\r\n   *\r\n   * @param {string} fixturePath - Path to fixture .js file\r\n   * @param {string[]} args - Extra args to mocha executable\r\n   * @param {Function} fn - Callback\r\n   * @param {Object} [opts] - Options for `spawn()`\r\n   */", "kind": "function", "description": "Invokes the mocha binary for the given fixture with color output disabled.\rAccepts an array of additional command line args to pass. The callback is\rinvoked with a summary of the run, in addition to its output. The summary\rincludes the number of passing, pending, and failing tests, as well as the\rexit code. Useful for testing different reporters.\r\rBy default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\rwant it.\rExample response:\r{\r  pending: 0,\r  passing: 0,\r  failing: 1,\r  code:    1,\r  output:  '...'\r}", "memberof": "module.exports", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000038", "name": "runMocha"}, "vars": {"": null, "path": "module.exports.runMocha~path", "args": "module.exports.runMocha~args"}, "columnno": 2, "filename": "helpers.js", "range": [1064, 1415], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["string"]}, "description": "Path to fixture .js file", "name": "fixturePath"}, {"type": {"names": ["Array.<string>"]}, "description": "Extra args to mocha executable", "name": "args"}, {"type": {"names": ["function"]}, "description": "Callback", "name": "fn"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Options for `spawn()`", "name": "opts"}], "longname": "module.exports.runMocha", "scope": "static", "name": "runMocha"}, {"comment": "/**\r\n   * Invokes the mocha binary for the given fixture using the JSON reporter,\r\n   * returning the parsed output, as well as exit code.\r\n   *\r\n   * By default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\r\n   * want it.\r\n   * @param {string} fixturePath - Path from __dirname__\r\n   * @param {string[]} args - Array of args\r\n   * @param {Function} fn - Callback\r\n   * @param {Object} [opts] - Opts for `spawn()`\r\n   * @returns {*} Parsed object\r\n   */", "kind": "function", "description": "Invokes the mocha binary for the given fixture using the JSON reporter,\rreturning the parsed output, as well as exit code.\r\rBy default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\rwant it.", "memberof": "module.exports", "returns": [{"type": {"names": ["*"]}, "description": "Parsed object"}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000089", "name": "runMochaJSON"}, "vars": {"": null, "path": "module.exports.runMochaJSON~path", "args": "module.exports.runMochaJSON~args"}, "columnno": 2, "filename": "helpers.js", "range": [1895, 2541], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["string"]}, "description": "Path from __dirname__", "name": "fixturePath"}, {"type": {"names": ["Array.<string>"]}, "description": "Array of args", "name": "args"}, {"type": {"names": ["function"]}, "description": "Callback", "name": "fn"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Opts for `spawn()`", "name": "opts"}], "longname": "module.exports.runMochaJSON", "scope": "static", "name": "runMochaJSON"}, {"comment": "/**\r\n   * Invokes the mocha binary for the given fixture using the JSON reporter,\r\n   * returning the **raw** string output, as well as exit code.\r\n   *\r\n   * By default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\r\n   * want it.\r\n   * @param {string} fixturePath - Path from __dirname__\r\n   * @param {string[]} args - Array of args\r\n   * @param {Function} fn - Callback\r\n   * @param {Object} [opts] - Opts for `spawn()`\r\n   * @returns {string} Raw output\r\n   */", "kind": "function", "description": "Invokes the mocha binary for the given fixture using the JSON reporter,\rreturning the **raw** string output, as well as exit code.\r\rBy default, `STDERR` is ignored. Pass `{stdio: 'pipe'}` as `opts` if you\rwant it.", "memberof": "module.exports", "returns": [{"type": {"names": ["string"]}, "description": "Raw output"}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000156", "name": "runMochaJSONRaw"}, "vars": {"": null, "path": "module.exports.runMochaJSONRaw~path", "args": "module.exports.runMochaJSONRaw~args"}, "columnno": 2, "filename": "helpers.js", "range": [3029, 3380], "lineno": 103, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["string"]}, "description": "Path from __dirname__", "name": "fixturePath"}, {"type": {"names": ["Array.<string>"]}, "description": "Array of args", "name": "args"}, {"type": {"names": ["function"]}, "description": "Callback", "name": "fn"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Opts for `spawn()`", "name": "opts"}], "longname": "module.exports.runMochaJSONRaw", "scope": "static", "name": "runMochaJSONRaw"}, {"comment": "/**\r\n * Coerce output as returned by _spawnMochaWithListeners using JSON reporter into a JSONRunResult as\r\n * recognized by our custom unexpected assertions\r\n * @param {string} result - Raw stdout from Mocha run using JSON reporter\r\n * @private\r\n */", "kind": "function", "description": "Coerce output as returned by _spawnMochaWithListeners using JSON reporter into a JSONRunResult as\rrecognized by our custom unexpected assertions", "access": "private", "meta": {"code": {"paramnames": ["result"], "type": "FunctionDeclaration", "id": "astnode100000223", "name": "toJSONRunResult"}, "vars": {"code": "toJSONRunResult~code", "result": "toJSONRunResult~result", "result.code": "toJSONRunResult~result.code"}, "columnno": 0, "filename": "helpers.js", "range": [4631, 4775], "lineno": 161, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [{"type": {"names": ["string"]}, "description": "Raw stdout from Mocha run using JSON reporter", "name": "result"}], "longname": "toJSONRunResult", "scope": "global", "name": "toJSONRunResult"}, {"comment": "", "kind": "function", "name": "invokeMocha", "undocumented": true, "meta": {"code": {"paramnames": ["args", "fn", "opts"], "type": "FunctionDeclaration", "id": "astnode100000251", "name": "invokeMocha"}, "vars": {"args": "invokeMocha~args"}, "columnno": 0, "filename": "helpers.js", "range": [4779, 4949], "lineno": 168, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "invokeMocha", "scope": "global"}, {"comment": "", "kind": "function", "name": "invokeSubMocha", "undocumented": true, "meta": {"code": {"paramnames": ["args", "fn", "opts"], "type": "FunctionDeclaration", "id": "astnode100000280", "name": "invokeSubMocha"}, "vars": {"args": "invokeSubMocha~args"}, "columnno": 0, "filename": "helpers.js", "range": [4953, 5127], "lineno": 174, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "invokeSubMocha", "scope": "global"}, {"comment": "", "kind": "function", "name": "_spawnMochaWithListeners", "undocumented": true, "meta": {"code": {"paramnames": ["args", "fn", "opts"], "type": "FunctionDeclaration", "id": "astnode100000309", "name": "_spawnMochaWithListeners"}, "vars": {"listener": "_spawnMochaWithListeners~listener", "output": "_spawnMochaWithListeners~output", "": null, "opts": "_spawnMochaWithListeners~opts", "mocha": "_spawnMochaWithListeners~mocha"}, "columnno": 0, "filename": "helpers.js", "range": [5131, 5740], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "_spawnMochaWithListeners", "scope": "global"}, {"comment": "", "kind": "function", "name": "listener", "memberof": "_spawnMochaWithListeners", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000351", "name": "listener"}, "vars": {"output": "_spawnMochaWithListeners~listener~output"}, "columnno": 6, "filename": "helpers.js", "range": [5394, 5447], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "_spawnMochaWithListeners~listener", "scope": "inner"}, {"comment": "", "kind": "function", "name": "resolveFixturePath", "undocumented": true, "meta": {"code": {"paramnames": ["fixture"], "type": "FunctionDeclaration", "id": "astnode100000418", "name": "resolveFixturePath"}, "columnno": 0, "filename": "helpers.js", "range": [5744, 5850], "lineno": 210, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "resolveFixturePath", "scope": "global"}, {"comment": "", "kind": "function", "name": "getSummary", "undocumented": true, "meta": {"code": {"paramnames": ["res"], "type": "FunctionDeclaration", "id": "astnode100000431", "name": "getSummary"}, "vars": {"": null}, "columnno": 0, "filename": "helpers.js", "range": [5854, 6170], "lineno": 214, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "getSummary", "scope": "global"}, {"comment": "", "kind": "function", "name": "execMochaWith", "undocumented": true, "meta": {"code": {"paramnames": ["validate"], "type": "FunctionDeclaration", "id": "astnode100000371", "name": "execMochaWith"}, "vars": {"": null}, "columnno": 0, "filename": "glob.spec.js", "range": [4712, 5417], "lineno": 176, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration"}, "params": [], "longname": "execMochaWith", "scope": "global"}, {"comment": "", "kind": "function", "name": "simplereporter", "undocumented": true, "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000016", "name": "simplereporter"}, "vars": {"": null}, "columnno": 0, "filename": "simple-reporter.js", "range": [113, 630], "lineno": 6, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration/fixtures"}, "params": [], "longname": "simplereporter", "scope": "global"}, {"comment": "", "kind": "function", "name": "sleep", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["ms"], "type": "FunctionDeclaration", "id": "astnode100000040", "name": "sleep"}, "vars": {"start": "<anonymous>~sleep~start"}, "columnno": 2, "filename": "timeout.fixture.js", "range": [258, 351], "lineno": 15, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration/fixtures"}, "params": [], "longname": "<anonymous>~sleep", "scope": "inner"}, {"comment": "", "kind": "function", "name": "MemoryLeak", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000004", "name": "MemoryLeak"}, "vars": {"i": "MemoryLeak~i", "this.myArr": null}, "columnno": 0, "filename": "issue-1991.fixture.js", "range": [53, 169], "lineno": 5, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration/fixtures/regression"}, "params": [], "longname": "MemoryLeak", "scope": "global"}, {"comment": "", "kind": "function", "name": "'simple-ui'", "memberof": "Mocha.interfaces", "undocumented": true, "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000029", "name": "Mocha.interfaces['simple-ui']"}, "vars": {"": null}, "columnno": 17, "filename": "simple-ui.js", "range": [213, 776], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration/fixtures/regression/1794"}, "longname": "Mocha.interfaces.'simple-ui'", "scope": "static"}, {"comment": "/**\r\n     * Describes a specification or test-case with the given `title`\r\n     * and callback `fn` acting as a thunk.\r\n     */", "kind": "function", "description": "Describes a specification or test-case with the given `title`\rand callback `fn` acting as a thunk.", "memberof": "context", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000078", "name": "context.test"}, "vars": {"test": "context.test~test", "test.file": "context.test~test.file"}, "columnno": 4, "filename": "simple-ui.js", "range": [608, 765], "lineno": 20, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/integration/fixtures/regression/1794"}, "longname": "context.test", "scope": "static", "name": "test"}, {"comment": "", "kind": "function", "name": "fail", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001094", "name": "fail"}, "vars": {"": null}, "columnno": 10, "filename": "runnable.spec.js", "range": [8675, 8747], "lineno": 302, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fail", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fail", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001559", "name": "fail"}, "vars": {"": null}, "columnno": 10, "filename": "runnable.spec.js", "range": [13117, 13189], "lineno": 434, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fail", "scope": "inner"}, {"comment": "", "kind": "function", "name": "then", "memberof": "<anonymous>~fulfilledPromise", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001798", "name": "then"}, "columnno": 10, "filename": "runnable.spec.js", "range": [15374, 15450], "lineno": 511, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~fulfilledPromise.then", "scope": "static"}, {"comment": "", "kind": "function", "name": "then", "memberof": "<anonymous>~fulfilledPromise", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001849", "name": "then"}, "vars": {"": null}, "columnno": 10, "filename": "runnable.spec.js", "range": [15901, 16035], "lineno": 530, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~fulfilledPromise.then", "scope": "static"}, {"comment": "", "kind": "function", "name": "then", "memberof": "<anonymous>~rejectedPromise", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001912", "name": "then"}, "vars": {"": null}, "columnno": 10, "filename": "runnable.spec.js", "range": [16517, 16659], "lineno": 552, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~rejectedPromise.then", "scope": "static"}, {"comment": "", "kind": "function", "name": "then", "memberof": "<anonymous>~rejectedPromise", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001976", "name": "then"}, "vars": {"": null}, "columnno": 10, "filename": "runnable.spec.js", "range": [17200, 17331], "lineno": 574, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~rejectedPromise.then", "scope": "static"}, {"comment": "", "kind": "function", "name": "then", "memberof": "<anonymous>~foreverPendingPromise", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100002037", "name": "then"}, "columnno": 10, "filename": "runnable.spec.js", "range": [17808, 17827], "lineno": 595, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~foreverPendingPromise.then", "scope": "static"}, {"comment": "", "kind": "function", "name": "isPending", "memberof": "<anonymous>~runnable", "undocumented": true, "meta": {"code": {"paramnames": [], "funcscope": "<anonymous>", "type": "FunctionExpression", "id": "astnode100002360", "name": "runnable.isPending"}, "columnno": 6, "filename": "runnable.spec.js", "range": [20926, 20990], "lineno": 694, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~runnable.isPending", "scope": "static"}, {"comment": "", "kind": "function", "name": "reporter", "memberof": "<anonymous>~opts", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000032", "name": "reporter"}, "columnno": 14, "filename": "mocha.spec.js", "range": [178, 201], "lineno": 8, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~opts.reporter", "scope": "static"}, {"comment": "", "kind": "function", "name": "isGrowlCapable", "memberof": "<anonymous>~mocha", "undocumented": true, "meta": {"code": {"paramnames": [], "name": "mocha.isGrowlCapable", "value": "forceEnable", "type": "FunctionExpression", "id": "astnode100000557", "funcscope": "<anonymous>"}, "columnno": 8, "filename": "mocha.spec.js", "range": [4290, 4372], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~mocha.isGrowlCapable", "scope": "static"}, {"comment": "", "kind": "function", "name": "isGrowlCapable", "memberof": "<anonymous>~mocha", "undocumented": true, "meta": {"code": {"paramnames": [], "name": "mocha.isGrowlCapable", "value": "forceDisable", "type": "FunctionExpression", "id": "astnode100000599", "funcscope": "<anonymous>"}, "columnno": 8, "filename": "mocha.spec.js", "range": [4657, 4741], "lineno": 145, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~mocha.isGrowlCapable", "scope": "static"}, {"comment": "", "kind": "function", "name": "XMLHttpRequest", "memberof": "global", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000612", "name": "global.XMLHttpRequest"}, "columnno": 6, "filename": "runner.spec.js", "range": [4687, 4724], "lineno": 144, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "global.XMLHttpRequest", "scope": "static"}, {"comment": "", "kind": "function", "name": "fail", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001795", "name": "fail"}, "columnno": 6, "filename": "runner.spec.js", "range": [13419, 13475], "lineno": 425, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fail", "scope": "inner"}, {"comment": "", "kind": "function", "name": "testGrep", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["mocha"], "type": "FunctionDeclaration", "id": "astnode100000106", "name": "testGrep"}, "vars": {"": null}, "columnno": 4, "filename": "grep.spec.js", "range": [795, 979], "lineno": 27, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~testGrep", "scope": "inner"}, {"comment": "", "kind": "function", "name": "supportsFunctionNames", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000022", "name": "supportsFunctionNames"}, "vars": {"": null}, "columnno": 0, "filename": "suite.spec.js", "range": [110, 238], "lineno": 7, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "supportsFunctionNames", "scope": "global"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000619", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [4209, 4227], "lineno": 140, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000674", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [4576, 4594], "lineno": 150, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "namedFn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000740", "name": "namedFn"}, "columnno": 8, "filename": "suite.spec.js", "range": [5054, 5075], "lineno": 164, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~namedFn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000809", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [5581, 5599], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000864", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [5939, 5957], "lineno": 189, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "namedFn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000930", "name": "namedFn"}, "columnno": 8, "filename": "suite.spec.js", "range": [6413, 6434], "lineno": 203, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~namedFn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001000", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [6951, 6969], "lineno": 221, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001049", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [7310, 7328], "lineno": 231, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "namedFn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001109", "name": "namedFn"}, "columnno": 8, "filename": "suite.spec.js", "range": [7777, 7798], "lineno": 245, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~namedFn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001211", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [8599, 8617], "lineno": 272, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001266", "name": "fn"}, "columnno": 12, "filename": "suite.spec.js", "range": [8966, 8984], "lineno": 282, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "namedFn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001332", "name": "namedFn"}, "columnno": 8, "filename": "suite.spec.js", "range": [9444, 9465], "lineno": 296, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~namedFn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001854", "name": "fn"}, "columnno": 8, "filename": "suite.spec.js", "range": [14050, 14092], "lineno": 440, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001910", "name": "fn"}, "columnno": 8, "filename": "suite.spec.js", "range": [14451, 14493], "lineno": 454, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001978", "name": "fn"}, "columnno": 8, "filename": "suite.spec.js", "range": [14943, 14985], "lineno": 470, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "func", "memberof": "<anonymous>~expected", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000647", "name": "func"}, "columnno": 10, "filename": "utils.spec.js", "range": [6552, 6571], "lineno": 214, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "<anonymous>~expected.func", "scope": "static"}, {"comment": "", "kind": "function", "name": "travis", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000857", "name": "travis"}, "columnno": 10, "filename": "utils.spec.js", "range": [9104, 9126], "lineno": 306, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~travis", "scope": "inner"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001109", "name": "fn"}, "columnno": 10, "filename": "utils.spec.js", "range": [11241, 11259], "lineno": 378, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "foo", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001229", "name": "foo"}, "columnno": 19, "filename": "utils.spec.js", "range": [12138, 12156], "lineno": 403, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "foo", "scope": "global"}, {"comment": "", "kind": "function", "name": "foo", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001240", "name": "foo"}, "columnno": 19, "filename": "utils.spec.js", "range": [12260, 12278], "lineno": 408, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "foo", "scope": "global"}, {"comment": "", "kind": "function", "name": "fn", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001254", "name": "fn"}, "columnno": 10, "filename": "utils.spec.js", "range": [12459, 12477], "lineno": 415, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "params": [], "longname": "<anonymous>~fn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "toString", "memberof": "Object", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001548", "name": "Object.prototype.toString"}, "columnno": 6, "filename": "utils.spec.js", "range": [15529, 15698], "lineno": 521, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "Object#toString", "scope": "instance"}, {"comment": "", "kind": "function", "name": "then", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100001787", "name": "then"}, "columnno": 10, "filename": "utils.spec.js", "range": [17423, 17442], "lineno": 580, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "then", "scope": "global"}, {"comment": "", "kind": "function", "name": "isPending", "memberof": "_test.parent", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000361", "name": "isPending"}, "columnno": 8, "filename": "test.spec.js", "range": [2212, 2270], "lineno": 73, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/test/unit"}, "longname": "_test.parent.isPending", "scope": "static"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["filename", "options"], "type": "FunctionExpression", "id": "astnode100000011", "name": "module.exports"}, "vars": {"bpjOptions": "module.exports~bpjOptions", "fieldsToKeep": "module.exports~fieldsToKeep"}, "columnno": 0, "filename": "package-json-cullify.js", "range": [294, 545], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "getHeaderForRelation", "undocumented": true, "meta": {"code": {"paramnames": ["rel"], "type": "FunctionDeclaration", "id": "astnode100000027", "name": "getHeaderForRelation"}, "vars": {"header": "getHeaderForRelation~header"}, "columnno": 0, "filename": "netlify-headers.js", "range": [287, 560], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "params": [], "longname": "getHeaderForRelation", "scope": "global"}, {"comment": "", "kind": "function", "name": "createStream", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000014", "name": "createStream"}, "vars": {"": null}, "columnno": 0, "filename": "dedefine.js", "range": [328, 485], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "params": [], "longname": "createStream", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": ["b"], "type": "ArrowFunctionExpression", "id": "astnode100000044", "name": "module.exports"}, "vars": {"wrap": "module.exports~wrap", "": null}, "columnno": 0, "filename": "dedefine.js", "range": [489, 632], "lineno": 17, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "wrap", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000052", "name": "wrap"}, "columnno": 8, "filename": "dedefine.js", "range": [522, 591], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "params": [], "longname": "module.exports~wrap", "scope": "inner"}, {"comment": "", "kind": "function", "name": "usage", "memberof": "markdown-magic.module:config.transforms", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000036", "name": "usage"}, "vars": {"header": "markdown-magic.module:config.transforms.usage~header", "flag": "markdown-magic.module:config.transforms.usage~flag", "output": "markdown-magic.module:config.transforms.usage~output", "undefined": null, "footer": "markdown-magic.module:config.transforms.usage~footer"}, "columnno": 2, "filename": "markdown-magic.config.js", "range": [344, 798], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "longname": "markdown-magic.module:config.transforms.usage", "scope": "static"}, {"comment": "", "kind": "function", "name": "toc", "memberof": "markdown-magic.module:config.transforms", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000110", "name": "toc"}, "vars": {"": null, "IGNORED_HEADINGS_REGEXP": "markdown-magic.module:config.transforms.toc~IGNORED_HEADINGS_REGEXP"}, "columnno": 2, "filename": "markdown-magic.config.js", "range": [1134, 1605], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "longname": "markdown-magic.module:config.transforms.toc", "scope": "static"}, {"comment": "", "kind": "function", "name": "filter", "memberof": "markdown-magic.module:config", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000137", "name": "filter"}, "columnno": 8, "filename": "markdown-magic.config.js", "range": [1489, 1560], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/scripts"}, "longname": "markdown-magic.module:config~filter", "scope": "inner"}, {"comment": "", "kind": "function", "name": "init", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000043", "name": "init"}, "columnno": 2, "filename": "async-dump.js", "range": [263, 389], "lineno": 11, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/example"}, "longname": "init", "scope": "global"}, {"comment": "", "kind": "function", "name": "before", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000065", "name": "before"}, "columnno": 2, "filename": "async-dump.js", "range": [394, 452], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/example"}, "longname": "before", "scope": "global"}, {"comment": "", "kind": "function", "name": "after", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000075", "name": "after"}, "columnno": 2, "filename": "async-dump.js", "range": [457, 517], "lineno": 17, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/example"}, "longname": "after", "scope": "global"}, {"comment": "", "kind": "function", "name": "destroy", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000085", "name": "destroy"}, "columnno": 2, "filename": "async-dump.js", "range": [522, 580], "lineno": 20, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/example"}, "longname": "destroy", "scope": "global"}, {"comment": "", "kind": "function", "name": "exports", "memberof": "module", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "ArrowFunctionExpression", "id": "astnode100000101", "name": "module.exports"}, "vars": {"": null}, "columnno": 19, "filename": "async-dump.js", "range": [617, 870], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/example"}, "longname": "module.exports", "scope": "static"}, {"comment": "", "kind": "function", "name": "onloadHandler", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000043", "name": "onloadHandler"}, "vars": {"counter": "<anonymous>~onloadHandler~counter"}, "columnno": 4, "filename": "avatars.js", "range": [259, 399], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~onloadHandler", "scope": "inner"}, {"comment": "", "kind": "function", "name": "c", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b"], "type": "FunctionDeclaration", "id": "astnode100000009", "name": "c"}, "vars": {"c": "<anonymous>~c~c", "d": "<anonymous>~c~d", "c.innerHTML": "<anonymous>~c~c.innerHTML"}, "columnno": 15, "filename": "html5shiv.min.js", "range": [109, 291], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~c", "scope": "inner"}, {"comment": "", "kind": "function", "name": "d", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000056", "name": "d"}, "vars": {"a": "<anonymous>~d~a"}, "columnno": 197, "filename": "html5shiv.min.js", "range": [291, 361], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~d", "scope": "inner"}, {"comment": "", "kind": "function", "name": "e", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b"], "type": "FunctionDeclaration", "id": "astnode100000077", "name": "e"}, "vars": {"a": "<anonymous>~e~a", "c": "<anonymous>~e~c", "t.elements": "t.elements"}, "columnno": 267, "filename": "html5shiv.min.js", "range": [361, 490], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~e", "scope": "inner"}, {"comment": "", "kind": "function", "name": "f", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a"], "type": "FunctionDeclaration", "id": "astnode100000126", "name": "f"}, "vars": {"s[undefined]": null, "b": "<anonymous>~f~b", "a[undefined]": null}, "columnno": 396, "filename": "html5shiv.min.js", "range": [490, 555], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~f", "scope": "inner"}, {"comment": "", "kind": "function", "name": "g", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a", "c", "d"], "type": "FunctionDeclaration", "id": "astnode100000159", "name": "g"}, "vars": {"d.cache[undefined]": "<anonymous>~g~d.cache[undefined]", "c": "<anonymous>~g~c", "e": "<anonymous>~g~e", "d": "<anonymous>~g~d"}, "columnno": 461, "filename": "html5shiv.min.js", "range": [555, 805], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~g", "scope": "inner"}, {"comment": "", "kind": "function", "name": "h", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a", "c"], "type": "FunctionDeclaration", "id": "astnode100000256", "name": "h"}, "vars": {"a": "<anonymous>~h~a", "c": "<anonymous>~h~c", "e": "<anonymous>~h~e", "g": "<anonymous>~h~g", "i": "<anonymous>~h~i", "h": "<anonymous>~h~h"}, "columnno": 711, "filename": "html5shiv.min.js", "range": [805, 968], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~h", "scope": "inner"}, {"comment": "", "kind": "function", "name": "i", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a", "b"], "type": "FunctionDeclaration", "id": "astnode100000319", "name": "i"}, "vars": {"": null, "b.createElem": "b.createElem", "b.frag": "b.frag", "b.cache": "b.cache", "b.createFrag": "b.createFrag", "a.createDocumentFragment": "a.createDocumentFragment", "a.createElement": "a.createElement"}, "columnno": 874, "filename": "html5shiv.min.js", "range": [968, 1415], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~i", "scope": "inner"}, {"comment": "", "kind": "function", "name": "createElement", "memberof": "a", "undocumented": true, "meta": {"code": {"paramnames": ["c"], "type": "FunctionExpression", "id": "astnode100000358", "name": "a.createElement"}, "columnno": 1001, "filename": "html5shiv.min.js", "range": [1095, 1169], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "longname": "a.createElement", "scope": "static"}, {"comment": "", "kind": "function", "name": "j", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["a"], "type": "FunctionDeclaration", "id": "astnode100000427", "name": "j"}, "vars": {"a": "<anonymous>~j~a", "d": "<anonymous>~j~d", "d.hasCSS": "<anonymous>~j~d.hasCSS"}, "columnno": 1321, "filename": "html5shiv.min.js", "range": [1415, 1658], "lineno": 4, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~j", "scope": "inner"}, {"comment": "", "kind": "function", "name": "AnchorJS", "memberof": "<anonymous>", "undocumented": true, "meta": {"code": {"paramnames": ["options"], "type": "FunctionDeclaration", "id": "astnode100000064", "name": "AnchorJS"}, "vars": {"": null, "_applyRemainingDefaultOptions": "<anonymous>~AnchorJS~_applyRemainingDefaultOptions", "this.add": "<anonymous>~AnchorJS#add", "this.removeAll": "<anonymous>~AnchorJS#removeAll", "this.options": "<anonymous>~AnchorJS#options", "this.hasAnchorJSLink": "<anonymous>~AnchorJS#hasAnchorJSLink", "_addBaselineStyles": "<anonymous>~AnchorJS~_addBaselineStyles", "this.isTouchDevice": "<anonymous>~AnchorJS#isTouchDevice", "_getElements": "<anonymous>~AnchorJS~_getElements", "this.elements": "<anonymous>~AnchorJS#elements", "this.urlify": "<anonymous>~AnchorJS#urlify", "this.remove": "<anonymous>~AnchorJS#remove"}, "columnno": 2, "filename": "anchor.js", "range": [826, 15741], "lineno": 29, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~AnchorJS", "scope": "inner"}, {"comment": "/**\r\n     * Assigns options to the internal options object, and provides defaults.\r\n     * @param {Object} opts - Options object\r\n     */", "kind": "function", "description": "Assigns options to the internal options object, and provides defaults.", "memberof": "<anonymous>~AnchorJS", "meta": {"code": {"paramnames": ["opts"], "type": "FunctionDeclaration", "id": "astnode100000082", "name": "_applyRemainingDefaultOptions"}, "vars": {"opts.truncate": "opts.truncate", "opts.icon": "opts.icon", "opts.placement": "opts.placement", "opts.visible": "opts.visible", "opts.class": "opts.class"}, "columnno": 4, "filename": "anchor.js", "range": [1065, 1804], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["Object"]}, "description": "Options object", "name": "opts"}], "longname": "<anonymous>~AnchorJS~_applyRemainingDefaultOptions", "scope": "inner", "name": "_applyRemainingDefaultOptions"}, {"comment": "/**\r\n     * Checks to see if this device supports touch. Uses criteria pulled from Modernizr:\r\n     * https://github.com/Modernizr/Modernizr/blob/da22eb27631fc4957f67607fe6042e85c0a84656/feature-detects/touchevents.js#L40\r\n     * @return {Boolean} - true if the current device supports touch.\r\n     */", "kind": "function", "description": "Checks to see if this device supports touch. Uses criteria pulled from Modernizr:\rhttps://github.com/Modernizr/Modernizr/blob/da22eb27631fc4957f67607fe6042e85c0a84656/feature-detects/touchevents.js#L40", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["Boolean"]}, "description": "- true if the current device supports touch."}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000172", "name": "this.isTouchDevice"}, "columnno": 4, "filename": "anchor.js", "range": [2171, 2318], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "longname": "<anonymous>~AnchorJS#isTouchDevice", "scope": "instance", "name": "isTouchDevice"}, {"comment": "/**\r\n     * Add anchor links to page elements.\r\n     * @param  {String|Array|Nodelist} selector - A CSS selector for targeting the elements you wish to add anchor links\r\n     *                                            to. Also accepts an array or nodeList containing the relavant elements.\r\n     * @return {this}                           - The AnchorJS object\r\n     */", "kind": "function", "description": "Add anchor links to page elements.", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["this"]}, "description": "- The AnchorJS object"}], "meta": {"code": {"paramnames": ["selector"], "type": "FunctionExpression", "id": "astnode100000193", "name": "this.add"}, "vars": {"": null, "newTidyText": "<anonymous>~AnchorJS#add~newTidyText", "tidyText": "<anonymous>~AnchorJS#add~tidyText", "elsWithIds": "<anonymous>~AnchorJS#add~elsWithIds", "anchor.style.lineHeight": "<anonymous>~AnchorJS#add~anchor.style.lineHeight", "visibleOptionToUse": "<anonymous>~AnchorJS#add~visibleOptionToUse", "this.elements": "<anonymous>~AnchorJS#add#elements", "index": "<anonymous>~AnchorJS#add~index", "anchor.className": "<anonymous>~AnchorJS#add~anchor.className", "anchor.style.paddingRight": "<anonymous>~AnchorJS#add~anchor.style.paddingRight", "anchor.style.marginLeft": "<anonymous>~AnchorJS#add~anchor.style.marginLeft", "indexesToDrop": "<anonymous>~AnchorJS#add~indexesToDrop", "elements": "<anonymous>~AnchorJS#add~elements", "idList": "<anonymous>~AnchorJS#add~idList", "anchor.href": "<anonymous>~AnchorJS#add~anchor.href", "selector": "<anonymous>~AnchorJS#add~selector", "anchor.style.position": "<anonymous>~AnchorJS#add~anchor.style.position", "elementID": "<anonymous>~AnchorJS#add~elementID", "count": "<anonymous>~AnchorJS#add~count", "readableID": "<anonymous>~AnchorJS#add~readableID", "anchor.style.opacity": "<anonymous>~AnchorJS#add~anchor.style.opacity", "i": "<anonymous>~AnchorJS#add~i", "anchor.style.paddingLeft": "<anonymous>~AnchorJS#add~anchor.style.paddingLeft", "anchor.style.font": "<anonymous>~AnchorJS#add~anchor.style.font", "anchor": "<anonymous>~AnchorJS#add~anchor"}, "columnno": 4, "filename": "anchor.js", "range": [2704, 6991], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["String", "Array", "Nodelist"]}, "description": "A CSS selector for targeting the elements you wish to add anchor links\r                                           to. Also accepts an array or nodeList containing the relavant elements.", "name": "selector"}], "longname": "<anonymous>~AnchorJS#add", "scope": "instance", "name": "add"}, {"comment": "/**\r\n     * Removes all anchorjs-links from elements targed by the selector.\r\n     * @param  {String|Array|Nodelist} selector - A CSS selector string targeting elements with anchor links,\r\n     *                                       \t  \tOR a nodeList / array containing the DOM elements.\r\n     * @return {this}                           - The AnchorJS object\r\n     */", "kind": "function", "description": "Removes all anchorjs-links from elements targed by the selector.", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["this"]}, "description": "- The AnchorJS object"}], "meta": {"code": {"paramnames": ["selector"], "type": "FunctionExpression", "id": "astnode100000636", "name": "this.remove"}, "vars": {"i": "<anonymous>~AnchorJS#remove~i", "index": "<anonymous>~AnchorJS#remove~index", "elements": "<anonymous>~AnchorJS#remove~elements", "domAnchor": "<anonymous>~AnchorJS#remove~domAnchor"}, "columnno": 4, "filename": "anchor.js", "range": [7374, 7992], "lineno": 189, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["String", "Array", "Nodelist"]}, "description": "A CSS selector string targeting elements with anchor links,\r                                      \t  \tOR a nodeList / array containing the DOM elements.", "name": "selector"}], "longname": "<anonymous>~AnchorJS#remove", "scope": "instance", "name": "remove"}, {"comment": "/**\r\n     * Removes all anchorjs links. Mostly used for tests.\r\n     */", "kind": "function", "description": "Removes all anchorjs links. Mostly used for tests.", "memberof": "<anonymous>~AnchorJS", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000717", "name": "this.removeAll"}, "columnno": 4, "filename": "anchor.js", "range": [8078, 8149], "lineno": 212, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "longname": "<anonymous>~AnchorJS#removeAll", "scope": "instance", "name": "removeAll"}, {"comment": "/**\r\n     * Urlify - Refine text so it makes a good ID.\r\n     *\r\n     * To do this, we remove apostrophes, replace nonsafe characters with hyphens,\r\n     * remove extra hyphens, truncate, trim hyphens, and make lowercase.\r\n     *\r\n     * @param  {String} text - Any text. Usually pulled from the webpage element we are linking to.\r\n     * @return {String}      - hyphen-delimited text for use in IDs and URLs.\r\n     */", "kind": "function", "description": "Urlify - Refine text so it makes a good ID.\r\rTo do this, we remove apostrophes, replace nonsafe characters with hyphens,\rremove extra hyphens, truncate, trim hyphens, and make lowercase.", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["String"]}, "description": "- hyphen-delimited text for use in IDs and URLs."}], "meta": {"code": {"paramnames": ["text"], "type": "FunctionExpression", "id": "astnode100000732", "name": "this.urlify"}, "vars": {"urlText": "<anonymous>~AnchorJS#urlify~urlText", "nonsafeChars": "<anonymous>~AnchorJS#urlify~nonsafeChars"}, "columnno": 4, "filename": "anchor.js", "range": [8582, 10368], "lineno": 225, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["String"]}, "description": "Any text. Usually pulled from the webpage element we are linking to.", "name": "text"}], "longname": "<anonymous>~AnchorJS#urlify", "scope": "instance", "name": "urlify"}, {"comment": "/**\r\n     * Determines if this element already has an AnchorJS link on it.\r\n     * Uses this technique: http://stackoverflow.com/a/5898748/1154642\r\n     * @param    {HTMLElemnt}  el - a DOM node\r\n     * @return   {Boolean}     true/false\r\n     */", "kind": "function", "description": "Determines if this element already has an AnchorJS link on it.\rUses this technique: http://stackoverflow.com/a/5898748/1154642", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["Boolean"]}, "description": "true/false"}], "meta": {"code": {"paramnames": ["el"], "type": "FunctionExpression", "id": "astnode100000801", "name": "this.hasAnchorJSLink"}, "vars": {"hasLeftAnchor": "<anonymous>~AnchorJS#hasAnchorJSLink~hasLeftAnchor", "hasRightAnchor": "<anonymous>~AnchorJS#hasAnchorJSLink~hasRightAnchor"}, "columnno": 4, "filename": "anchor.js", "range": [10629, 10964], "lineno": 255, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["HTMLElemnt"]}, "description": "a DOM node", "name": "el"}], "longname": "<anonymous>~AnchorJS#hasAnchorJSLink", "scope": "instance", "name": "hasAnchorJSLink"}, {"comment": "/**\r\n     * Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).\r\n     * It also throws errors on any other inputs. Used to handle inputs to .add and .remove.\r\n     * @param  {String|Array|Nodelist} input - A CSS selector string targeting elements with anchor links,\r\n     *                                       \t OR a nodeList / array containing the DOM elements.\r\n     * @return {Array} - An array containing the elements we want.\r\n     */", "kind": "function", "description": "Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).\rIt also throws errors on any other inputs. Used to handle inputs to .add and .remove.", "memberof": "<anonymous>~AnchorJS", "returns": [{"type": {"names": ["Array"]}, "description": "- An array containing the elements we want."}], "meta": {"code": {"paramnames": ["input"], "type": "FunctionDeclaration", "id": "astnode100000859", "name": "_getElements"}, "vars": {"elements": "<anonymous>~AnchorJS~_getElements~elements"}, "columnno": 4, "filename": "anchor.js", "range": [11474, 12117], "lineno": 269, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [{"type": {"names": ["String", "Array", "Nodelist"]}, "description": "A CSS selector string targeting elements with anchor links,\r                                      \t OR a nodeList / array containing the DOM elements.", "name": "input"}], "longname": "<anonymous>~AnchorJS~_getElements", "scope": "inner", "name": "_getElements"}, {"comment": "/**\r\n     * _addBaselineStyles\r\n     * Adds baseline styles to the page, used by all AnchorJS links irregardless of configuration.\r\n     */", "kind": "function", "description": "_addBaselineStyles\rAdds baseline styles to the page, used by all AnchorJS links irregardless of configuration.", "memberof": "<anonymous>~AnchorJS", "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000918", "name": "_addBaselineStyles"}, "vars": {"firstStyleEl": "<anonymous>~AnchorJS~_addBaselineStyles~firstStyleEl", "style": "<anonymous>~AnchorJS~_addBaselineStyles~style", "style.className": "<anonymous>~AnchorJS~_addBaselineStyles~style.className", "linkRule": "<anonymous>~AnchorJS~_addBaselineStyles~linkRule", "hoverRule": "<anonymous>~AnchorJS~_addBaselineStyles~hoverRule", "anchorjsLinkFontFace": "<anonymous>~AnchorJS~_addBaselineStyles~anchorjsLinkFontFace", "pseudoElContent": "<anonymous>~AnchorJS~_addBaselineStyles~pseudoElContent"}, "columnno": 4, "filename": "anchor.js", "range": [12270, 15736], "lineno": 287, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/docs/js"}, "params": [], "longname": "<anonymous>~AnchorJS~_addBaselineStyles", "scope": "inner", "name": "_addBaselineStyles"}, {"comment": "", "kind": "function", "name": "clone", "memberof": "Test", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000077", "name": "Test.prototype.clone"}, "vars": {"test": "Test#clone~test", "test.parent": "Test#clone~test.parent", "test.ctx": "Test#clone~test.ctx", "test.file": "Test#clone~test.file"}, "columnno": 0, "filename": "test.js", "range": [682, 1077], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Test#clone", "scope": "instance"}, {"comment": "/**\r\n * Run tests with full titles matching `re`. Updates runner.total\r\n * with number of tests matched.\r\n *\r\n * @public\r\n * @memberof Mocha.Runner\r\n * @param {RegExp} re\r\n * @param {boolean} invert\r\n * @return {Runner} Runner instance.\r\n */", "kind": "function", "description": "Run tests with full titles matching `re`. Updates runner.total\rwith number of tests matched.", "memberof": "Mocha.Runner", "access": "public", "returns": [{"type": {"names": ["Runner"]}, "description": "Runner instance."}], "meta": {"code": {"paramnames": ["re", "invert"], "type": "FunctionExpression", "id": "astnode100000227", "name": "Runner.prototype.grep"}, "vars": {"this.total": "Mocha.Runner.Runner#grep#total", "this._invert": "Mocha.Runner.Runner#grep#_invert", "this._grep": "Mocha.Runner.Runner#grep#_grep"}, "columnno": 0, "filename": "runner.js", "range": [2681, 2861], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["RegExp"]}, "name": "re"}, {"type": {"names": ["boolean"]}, "name": "invert"}], "longname": "Mocha.Runner.Runner#grep", "scope": "static", "name": "Runner#grep"}, {"comment": "/**\r\n * Returns the number of tests matching the grep search for the\r\n * given suite.\r\n *\r\n * @memberof Mocha.Runner\r\n * @public\r\n * @param {Suite} suite\r\n * @return {number}\r\n */", "kind": "function", "description": "Returns the number of tests matching the grep search for the\rgiven suite.", "memberof": "Mocha.Runner", "access": "public", "returns": [{"type": {"names": ["number"]}}], "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000269", "name": "Runner.prototype.grepTotal"}, "vars": {"": null, "self": "Mocha.Runner.Runner#grepTotal~self", "total": "Mocha.Runner.Runner#grepTotal~total"}, "columnno": 0, "filename": "runner.js", "range": [3047, 3345], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "suite"}], "longname": "Mocha.Runner.Runner#grepTotal", "scope": "static", "name": "Runner#grepTotal"}, {"comment": "/**\r\n * Return a list of global properties.\r\n *\r\n * @return {Array}\r\n * @private\r\n */", "kind": "function", "description": "Return a list of global properties.", "memberof": "Mocha.Runner", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000326", "name": "Runner.prototype.globalProps"}, "vars": {"i": "Mocha.Runner#globalProps~i", "props": "Mocha.Runner#globalProps~props"}, "columnno": 0, "filename": "runner.js", "range": [3437, 3705], "lineno": 150, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runner#globalProps", "scope": "instance", "name": "globalProps"}, {"comment": "/**\r\n * Allow the given `arr` of globals.\r\n *\r\n * @public\r\n * @memberof Mocha.Runner\r\n * @param {Array} arr\r\n * @return {Runner} Runner instance.\r\n */", "kind": "function", "description": "Allow the given `arr` of globals.", "memberof": "Mocha.Runner", "access": "public", "returns": [{"type": {"names": ["Runner"]}, "description": "Runner instance."}], "meta": {"code": {"paramnames": ["arr"], "type": "FunctionExpression", "id": "astnode100000377", "name": "Runner.prototype.globals"}, "vars": {"this._globals": "Mocha.Runner.Runner#globals#_globals"}, "columnno": 0, "filename": "runner.js", "range": [3862, 4058], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array"]}, "name": "arr"}], "longname": "Mocha.Runner.Runner#globals", "scope": "static", "name": "Runner#globals"}, {"comment": "/**\r\n * Check for global variable leaks.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Check for global variable leaks.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["test"], "type": "FunctionExpression", "id": "astnode100000416", "name": "Runner.prototype.checkGlobals"}, "vars": {"leaks": "module:Runner~leaks", "globals": "Mocha.Runner#checkGlobals~globals", "ok": "module:Runner~ok", "this.prevGlobalsLength": "Mocha.Runner#prevGlobalsLength", "this._globals": "Mocha.Runner#_globals"}, "columnno": 0, "filename": "runner.js", "range": [4127, 4816], "lineno": 186, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runner#checkGlobals", "scope": "instance", "name": "checkGlobals"}, {"comment": "/**\r\n * Fail the given `test`.\r\n *\r\n * @private\r\n * @param {Test} test\r\n * @param {Error} err\r\n */", "kind": "function", "description": "Fail the given `test`.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["test", "err"], "type": "FunctionExpression", "id": "astnode100000542", "name": "Runner.prototype.fail"}, "vars": {"test.state": "module:Runner~test.state", "err.stack": "module:Runner~err.stack", "err": "module:Runner~err"}, "columnno": 0, "filename": "runner.js", "range": [4921, 5365], "lineno": 224, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Test"]}, "name": "test"}, {"type": {"names": ["Error"]}, "name": "err"}], "longname": "Mocha.Runner#fail", "scope": "instance", "name": "fail"}, {"comment": "/**\r\n * Fail the given `hook` with `err`.\r\n *\r\n * Hook failures work in the following pattern:\r\n * - If bail, run corresponding `after each` and `after` hooks,\r\n *   then exit\r\n * - Failed `before` hook skips all tests in a suite and subsuites,\r\n *   but jumps to corresponding `after` hook\r\n * - Failed `before each` hook skips remaining tests in a\r\n *   suite and jumps to corresponding `after each` hook,\r\n *   which is run only once\r\n * - Failed `after` hook does not alter\r\n *   execution order\r\n * - Failed `after each` hook skips remaining tests in a\r\n *   suite and subsuites, but executes other `after each`\r\n *   hooks\r\n *\r\n * @private\r\n * @param {Hook} hook\r\n * @param {Error} err\r\n */", "kind": "function", "description": "Fail the given `hook` with `err`.\r\rHook failures work in the following pattern:\r- If bail, run corresponding `after each` and `after` hooks,\r  then exit\r- Failed `before` hook skips all tests in a suite and subsuites,\r  but jumps to corresponding `after` hook\r- Failed `before each` hook skips remaining tests in a\r  suite and jumps to corresponding `after each` hook,\r  which is run only once\r- Failed `after` hook does not alter\r  execution order\r- Failed `after each` hook skips remaining tests in a\r  suite and subsuites, but executes other `after each`\r  hooks", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["hook", "err"], "type": "FunctionExpression", "id": "astnode100000616", "name": "Runner.prototype.failHook"}, "vars": {"hook.originalTitle": "module:Runner~hook.originalTitle", "hook.title": "module:Runner~hook.title"}, "columnno": 0, "filename": "runner.js", "range": [6068, 6346], "lineno": 267, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Hook"]}, "name": "hook"}, {"type": {"names": ["Error"]}, "name": "err"}], "longname": "Mocha.Runner#failHook", "scope": "instance", "name": "failHook"}, {"comment": "/**\r\n * Run hook `name` callbacks and then invoke `fn()`.\r\n *\r\n * @private\r\n * @param {string} name\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Run hook `name` callbacks and then invoke `fn()`.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["name", "fn"], "type": "FunctionExpression", "id": "astnode100000677", "name": "Runner.prototype.hook"}, "vars": {"": null, "suite": "Mocha.Runner#hook~suite", "self": "Mocha.Runner#hook~self", "next": "Mocha.Runner#hook~next", "hooks": "Mocha.Runner#hook~hooks"}, "columnno": 0, "filename": "runner.js", "range": [6484, 7917], "lineno": 285, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#hook", "scope": "instance", "name": "hook"}, {"comment": "", "kind": "function", "name": "next", "memberof": "Mocha.Runner#hook", "undocumented": true, "meta": {"code": {"paramnames": ["i"], "type": "FunctionDeclaration", "id": "astnode100000705", "name": "next"}, "vars": {"": null, "hook": "Mocha.Runner#hook~next~hook", "self.currentRunnable": "Mocha.Runner#hook~self.currentRunnable", "hook.ctx.currentTest": "Mocha.Runner#hook~next~hook.ctx.currentTest"}, "columnno": 2, "filename": "runner.js", "range": [6615, 7856], "lineno": 290, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#hook~next", "scope": "inner"}, {"comment": "/**\r\n * Run hook `name` for the given array of `suites`\r\n * in order, and callback `fn(err, errSuite)`.\r\n *\r\n * @private\r\n * @param {string} name\r\n * @param {Array} suites\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Run hook `name` for the given array of `suites`\rin order, and callback `fn(err, errSuite)`.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["name", "suites", "fn"], "type": "FunctionExpression", "id": "astnode100000905", "name": "Runner.prototype.hooks"}, "vars": {"self": "Mocha.Runner#hooks~self", "next": "Mocha.Runner#hooks~next", "orig": "Mocha.Runner#hooks~orig"}, "columnno": 0, "filename": "runner.js", "range": [8125, 8587], "lineno": 353, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["Array"]}, "name": "suites"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#hooks", "scope": "instance", "name": "hooks"}, {"comment": "", "kind": "function", "name": "next", "memberof": "Mocha.Runner#hooks", "undocumented": true, "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100000926", "name": "next"}, "vars": {"": null, "self.suite": "Mocha.Runner#hooks~self.suite"}, "columnno": 2, "filename": "runner.js", "range": [8230, 8559], "lineno": 357, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#hooks~next", "scope": "inner"}, {"comment": "/**\r\n * Run hooks from the top level down.\r\n *\r\n * @param {String} name\r\n * @param {Function} fn\r\n * @private\r\n */", "kind": "function", "description": "Run hooks from the top level down.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["name", "fn"], "type": "FunctionExpression", "id": "astnode100000993", "name": "Runner.prototype.hookUp"}, "vars": {"suites": "Mocha.Runner#hookUp~suites"}, "columnno": 0, "filename": "runner.js", "range": [8708, 8853], "lineno": 386, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["String"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#hookUp", "scope": "instance", "name": "hookUp"}, {"comment": "/**\r\n * Run hooks from the bottom up.\r\n *\r\n * @param {String} name\r\n * @param {Function} fn\r\n * @private\r\n */", "kind": "function", "description": "Run hooks from the bottom up.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["name", "fn"], "type": "FunctionExpression", "id": "astnode100001029", "name": "Runner.prototype.hookDown"}, "vars": {"suites": "Mocha.Runner#hookDown~suites"}, "columnno": 0, "filename": "runner.js", "range": [8969, 9106], "lineno": 398, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["String"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#hookDown", "scope": "instance", "name": "hookDown"}, {"comment": "/**\r\n * Return an array of parent Suites from\r\n * closest to furthest.\r\n *\r\n * @return {Array}\r\n * @private\r\n */", "kind": "function", "description": "Return an array of parent Suites from\rclosest to furthest.", "memberof": "Mocha.Runner", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001062", "name": "Runner.prototype.parents"}, "vars": {"suite": "module:Runner~suite", "suites": "Mocha.Runner#parents~suites"}, "columnno": 0, "filename": "runner.js", "range": [9225, 9415], "lineno": 410, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runner#parents", "scope": "instance", "name": "parents"}, {"comment": "/**\r\n * Run the current test and callback `fn(err)`.\r\n *\r\n * @param {Function} fn\r\n * @private\r\n */", "kind": "function", "description": "Run the current test and callback `fn(err)`.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100001100", "name": "Runner.prototype.runTest"}, "vars": {"test": "Mocha.Runner#runTest~test", "": null, "self": "Mocha.Runner#runTest~self", "test.allowUncaught": "Mocha.Runner#runTest~test.allowUncaught", "test.asyncOnly": "Mocha.Runner#runTest~test.asyncOnly"}, "columnno": 0, "filename": "runner.js", "range": [9521, 10071], "lineno": 426, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#runTest", "scope": "instance", "name": "runTest"}, {"comment": "/**\r\n * Run tests in the given `suite` and invoke the callback `fn()` when complete.\r\n *\r\n * @private\r\n * @param {Suite} suite\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Run tests in the given `suite` and invoke the callback `fn()` when complete.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["suite", "fn"], "type": "FunctionExpression", "id": "astnode100001210", "name": "Runner.prototype.runTests"}, "vars": {"hookErr": "Mocha.Runner#runTests~hookErr", "tests": "Mocha.Runner#runTests~tests", "this.next": "Mocha.Runner#next", "self": "Mocha.Runner#runTests~self", "this.hookErr": "Mocha.Runner#hookErr", "next": "Mocha.Runner#runTests~next", "test": "Mocha.Runner#runTests~test"}, "columnno": 0, "filename": "runner.js", "range": [10234, 14454], "lineno": 461, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "suite"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#runTests", "scope": "instance", "name": "runTests"}, {"comment": "", "kind": "function", "name": "hookErr", "memberof": "Mocha.Runner#runTests", "undocumented": true, "meta": {"code": {"paramnames": ["_", "errSuite", "after"], "type": "FunctionDeclaration", "id": "astnode100001236", "name": "hookErr"}, "vars": {"": null, "self.suite": "Mocha.Runner#runTests~self.suite", "orig": "Mocha.Runner#runTests~hookErr~orig"}, "columnno": 2, "filename": "runner.js", "range": [10358, 11108], "lineno": 466, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#runTests~hookErr", "scope": "inner"}, {"comment": "", "kind": "function", "name": "next", "memberof": "Mocha.Runner#runTests", "undocumented": true, "meta": {"code": {"paramnames": ["err", "errSuite"], "type": "FunctionDeclaration", "id": "astnode100001304", "name": "next"}, "vars": {"": null, "self.test": "Mocha.Runner#runTests~self.test", "tests": "module:Runner~tests", "test.isPending": "module:Runner~test.isPending", "test": "module:Runner~test", "match": "module:Runner~match"}, "columnno": 2, "filename": "runner.js", "range": [11114, 14390], "lineno": 492, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#runTests~next", "scope": "inner"}, {"comment": "", "kind": "function", "name": "alwaysFalse", "memberof": "module:Runner", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001712", "name": "alwaysFalse"}, "columnno": 0, "filename": "runner.js", "range": [14459, 14503], "lineno": 610, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Runner~alwaysFalse", "scope": "inner"}, {"comment": "/**\r\n * Run the given `suite` and invoke the callback `fn()` when complete.\r\n *\r\n * @private\r\n * @param {Suite} suite\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Run the given `suite` and invoke the callback `fn()` when complete.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["suite", "fn"], "type": "FunctionExpression", "id": "astnode100001718", "name": "Runner.prototype.runSuite"}, "vars": {"": null, "afterAllHookCalled": "Mocha.Runner#runSuite~afterAllHookCalled", "i": "Mocha.Runner#runSuite~i", "self": "Mocha.Runner#runSuite~self", "next": "Mocha.Runner#runSuite~next", "this.suite": "Mocha.Runner#suite", "this.nextSuite": "Mocha.Runner#nextSuite", "done": "Mocha.Runner#runSuite~done", "total": "Mocha.Runner#runSuite~total"}, "columnno": 0, "filename": "runner.js", "range": [14656, 16573], "lineno": 621, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "suite"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner#runSuite", "scope": "instance", "name": "runSuite"}, {"comment": "", "kind": "function", "name": "next", "memberof": "Mocha.Runner#runSuite", "undocumented": true, "meta": {"code": {"paramnames": ["errSuite"], "type": "FunctionDeclaration", "id": "astnode100001782", "name": "next"}, "vars": {"": null, "curr": "Mocha.Runner#runSuite~next~curr"}, "columnno": 2, "filename": "runner.js", "range": [14988, 15915], "lineno": 635, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#runSuite~next", "scope": "inner"}, {"comment": "", "kind": "function", "name": "done", "memberof": "Mocha.Runner#runSuite", "undocumented": true, "meta": {"code": {"paramnames": ["errSuite"], "type": "FunctionDeclaration", "id": "astnode100001856", "name": "done"}, "vars": {"afterAllHookCalled": "module:Runner~afterAllHookCalled", "": null, "self.suite": "Mocha.Runner#runSuite~self.suite", "self.nextSuite": "Mocha.Runner#runSuite~self.nextSuite"}, "columnno": 2, "filename": "runner.js", "range": [15921, 16413], "lineno": 669, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner#runSuite~done", "scope": "inner"}, {"comment": "/**\r\n * Handle uncaught exceptions.\r\n *\r\n * @param {Error} err\r\n * @private\r\n */", "kind": "function", "description": "Handle uncaught exceptions.", "memberof": "Mocha.Runner", "access": "private", "meta": {"code": {"paramnames": ["err"], "type": "FunctionExpression", "id": "astnode100001937", "name": "Runner.prototype.uncaught"}, "vars": {"": null, "runnable": "module:Runner~runnable", "err": "module:Runner~err", "runnable.parent": "module:Runner~runnable.parent", "alreadyPassed": "Mocha.Runner#uncaught~alreadyPassed", "err.uncaught": "module:Runner~err.uncaught", "errSuite": "Mocha.Runner#uncaught~errSuite"}, "columnno": 0, "filename": "runner.js", "range": [16660, 18599], "lineno": 706, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Error"]}, "name": "err"}], "longname": "Mocha.Runner#uncaught", "scope": "instance", "name": "uncaught"}, {"comment": "/**\r\n * Cleans up the references to all the deferred functions\r\n * (before/after/beforeEach/afterEach) and tests of a Suite.\r\n * These must be deleted otherwise a memory leak can happen,\r\n * as those functions may reference variables from closures,\r\n * thus those variables can never be garbage collected as long\r\n * as the deferred functions exist.\r\n *\r\n * @param {Suite} suite\r\n */", "kind": "function", "description": "Cleans up the references to all the deferred functions\r(before/after/beforeEach/afterEach) and tests of a Suite.\rThese must be deleted otherwise a memory leak can happen,\ras those functions may reference variables from closures,\rthus those variables can never be garbage collected as long\ras the deferred functions exist.", "memberof": "module:Runner", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100002174", "name": "cleanSuiteReferences"}, "vars": {"cleanArrReferences": "module:Runner~cleanSuiteReferences~cleanArrReferences", "i": "module:Runner~cleanSuiteReferences~i"}, "columnno": 0, "filename": "runner.js", "range": [18989, 19605], "lineno": 793, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "suite"}], "longname": "module:Runner~cleanSuiteReferences", "scope": "inner", "name": "cleanSuiteReferences"}, {"comment": "", "kind": "function", "name": "cleanArrReferences", "memberof": "module:Runner~cleanSuiteReferences", "undocumented": true, "meta": {"code": {"paramnames": ["arr"], "type": "FunctionDeclaration", "id": "astnode100002178", "name": "cleanArrReferences"}, "vars": {"i": "module:Runner~cleanSuiteReferences~cleanArrReferences~i"}, "columnno": 2, "filename": "runner.js", "range": [19031, 19146], "lineno": 794, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Runner~cleanSuiteReferences~cleanArrReferences", "scope": "inner"}, {"comment": "/**\r\n * Run the root suite and invoke `fn(failures)`\r\n * on completion.\r\n *\r\n * @public\r\n * @memberof Mocha.Runner\r\n * @param {Function} fn\r\n * @return {Runner} Runner instance.\r\n */", "kind": "function", "description": "Run the root suite and invoke `fn(failures)`\ron completion.", "memberof": "Mocha.Runner", "access": "public", "returns": [{"type": {"names": ["Runner"]}, "description": "Runner instance."}], "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100002287", "name": "Runner.prototype.run"}, "vars": {"": null, "self": "Mocha.Runner.Runner#run~self", "start": "Mocha.Runner.Runner#run~start", "uncaught": "Mocha.Runner.Runner#run~uncaught", "rootSuite": "Mocha.Runner.Runner#run~rootSuite", "fn": "module:Runner~fn"}, "columnno": 0, "filename": "runner.js", "range": [19793, 20958], "lineno": 830, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Runner.Runner#run", "scope": "static", "name": "Runner#run"}, {"comment": "", "kind": "function", "name": "uncaught", "memberof": "Mocha.Runner.Runner#run", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100002313", "name": "uncaught"}, "columnno": 2, "filename": "runner.js", "range": [19918, 19972], "lineno": 836, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner.Runner#run~uncaught", "scope": "inner"}, {"comment": "", "kind": "function", "name": "start", "memberof": "Mocha.Runner.Runner#run", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100002323", "name": "start"}, "vars": {"": null, "self.started": "Mocha.Runner.Runner#run~self.started"}, "columnno": 2, "filename": "runner.js", "range": [19978, 20370], "lineno": 840, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Runner.Runner#run~start", "scope": "inner"}, {"comment": "/**\r\n * Cleanly abort execution.\r\n *\r\n * @memberof Mocha.Runner\r\n * @public\r\n * @return {Runner} Runner instance.\r\n */", "kind": "function", "description": "Cleanly abort execution.", "memberof": "Mocha.Runner", "access": "public", "returns": [{"type": {"names": ["Runner"]}, "description": "Runner instance."}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100002448", "name": "Runner.prototype.abort"}, "vars": {"this._abort": "Mocha.Runner.Runner#abort#_abort"}, "columnno": 0, "filename": "runner.js", "range": [21083, 21186], "lineno": 892, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runner.Runner#abort", "scope": "static", "name": "Runner#abort"}, {"comment": "/**\r\n * Filter suites based on `isOnly` logic.\r\n *\r\n * @param {Array} suite\r\n * @returns {Boolean}\r\n * @private\r\n */", "kind": "function", "description": "Filter suites based on `isOnly` logic.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["Boolean"]}}], "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100002468", "name": "filterOnly"}, "vars": {"": null, "suite.suites": "module:Runner~suite.suites", "suite.tests": "module:Runner~suite.tests"}, "columnno": 0, "filename": "runner.js", "range": [21309, 22358], "lineno": 906, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array"]}, "name": "suite"}], "longname": "module:Runner~filterOnly", "scope": "inner", "name": "filterOnly"}, {"comment": "/**\r\n * Determines whether a suite has an `only` test or suite as a descendant.\r\n *\r\n * @param {Array} suite\r\n * @returns {Boolean}\r\n * @private\r\n */", "kind": "function", "description": "Determines whether a suite has an `only` test or suite as a descendant.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["Boolean"]}}], "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100002560", "name": "hasOnly"}, "columnno": 0, "filename": "runner.js", "range": [22513, 22656], "lineno": 939, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array"]}, "name": "suite"}], "longname": "module:Runner~hasOnly", "scope": "inner", "name": "hasOnly"}, {"comment": "/**\r\n * Filter leaks with the given globals flagged as `ok`.\r\n *\r\n * @private\r\n * @param {Array} ok\r\n * @param {Array} globals\r\n * @return {Array}\r\n */", "kind": "function", "description": "Filter leaks with the given globals flagged as `ok`.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": ["ok", "globals"], "type": "FunctionDeclaration", "id": "astnode100002584", "name": "filterLeaks"}, "vars": {"": null}, "columnno": 0, "filename": "runner.js", "range": [22813, 23882], "lineno": 955, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array"]}, "name": "ok"}, {"type": {"names": ["Array"]}, "name": "globals"}], "longname": "module:Runner~filterLeaks", "scope": "inner", "name": "filterLeaks"}, {"comment": "/**\r\n * Check if argument is an instance of Error object or a duck-typed equivalent.\r\n *\r\n * @private\r\n * @param {Object} err - object to check\r\n * @param {string} err.message - error message\r\n * @returns {boolean}\r\n */", "kind": "function", "description": "Check if argument is an instance of Error object or a duck-typed equivalent.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100002691", "name": "isError"}, "columnno": 0, "filename": "runner.js", "range": [24107, 24209], "lineno": 998, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Object"]}, "description": "object to check", "name": "err"}, {"type": {"names": ["string"]}, "description": "error message", "name": "err.message"}], "longname": "module:Runner~isError", "scope": "inner", "name": "isError"}, {"comment": "/**\r\n *\r\n * Converts thrown non-extensible type into proper Error.\r\n *\r\n * @private\r\n * @param {*} thrown - Non-extensible type thrown by code\r\n * @return {Error}\r\n */", "kind": "function", "description": "Converts thrown non-extensible type into proper Error.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["Error"]}}], "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100002708", "name": "thrown2Error"}, "columnno": 0, "filename": "runner.js", "range": [24382, 24522], "lineno": 1010, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["*"]}, "description": "Non-extensible type thrown by code", "name": "thrown"}], "longname": "module:Runner~thrown2Error", "scope": "inner", "name": "thrown2Error"}, {"comment": "/**\r\n * Array of globals dependent on the environment.\r\n *\r\n * @return {Array}\r\n * @private\r\n */", "kind": "function", "description": "Array of globals dependent on the environment.", "memberof": "module:Runner", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100002728", "name": "extraGlobals"}, "vars": {"": null, "parts": "module:Runner~extraGlobals~parts", "nodeVersion": "module:Runner~extraGlobals~nodeVersion"}, "columnno": 0, "filename": "runner.js", "range": [24624, 25014], "lineno": 1022, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Runner~extraGlobals", "scope": "inner", "name": "extraGlobals"}, {"comment": "/**\r\n * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\r\n *\r\n * @private\r\n * @param {Runner} runner - Runner instance\r\n * @throws {TypeError} If falsy `runner`\r\n */", "kind": "function", "description": "Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.", "memberof": "module:stats-collector", "access": "private", "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "createStatsCollector"}, "vars": {"": null, "runner.stats": "module:stats-collector~runner.stats", "stats": "module:stats-collector~createStatsCollector~stats"}, "columnno": 0, "filename": "stats-collector.js", "range": [979, 1817], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Runner"]}, "description": "Runner instance", "name": "runner"}], "longname": "module:stats-collector~createStatsCollector", "exceptions": [{"type": {"names": ["TypeError"]}, "description": "If falsy `runner`"}], "scope": "inner", "name": "createStatsCollector"}, {"comment": "/**\r\n * Initialize a new `Context`.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Initialize a new `Context`.", "memberof": "module:Context", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "Context"}, "columnno": 0, "filename": "context.js", "range": [167, 188], "lineno": 16, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Context~Context", "scope": "inner", "name": "Context"}, {"comment": "/**\r\n * Set or get the context `Runnable` to `runnable`.\r\n *\r\n * @private\r\n * @param {Runnable} runnable\r\n * @return {Context} context\r\n */", "kind": "function", "description": "Set or get the context `Runnable` to `runnable`.", "memberof": "module:Context~Context", "access": "private", "returns": [{"type": {"names": ["Context"]}, "description": "context"}], "meta": {"code": {"paramnames": ["runnable"], "type": "FunctionExpression", "id": "astnode100000014", "name": "Context.prototype.runnable"}, "vars": {"this._runnable": "module:Context~Context#runnable#_runnable", "this.test": "module:Context~Context#runnable#test"}, "columnno": 0, "filename": "context.js", "range": [333, 504], "lineno": 25, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Runnable"]}, "name": "runnable"}], "longname": "module:Context~Context#runnable", "scope": "instance", "name": "runnable"}, {"comment": "/**\r\n * Set or get test timeout `ms`.\r\n *\r\n * @private\r\n * @param {number} ms\r\n * @return {Context} self\r\n */", "kind": "function", "description": "Set or get test timeout `ms`.", "memberof": "module:Context~Context", "access": "private", "returns": [{"type": {"names": ["Context"]}, "description": "self"}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000046", "name": "Context.prototype.timeout"}, "columnno": 0, "filename": "context.js", "range": [620, 785], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "name": "ms"}], "longname": "module:Context~Context#timeout", "scope": "instance", "name": "timeout"}, {"comment": "/**\r\n * Set test timeout `enabled`.\r\n *\r\n * @private\r\n * @param {boolean} enabled\r\n * @return {Context} self\r\n */", "kind": "function", "description": "Set test timeout `enabled`.", "memberof": "module:Context~Context", "access": "private", "returns": [{"type": {"names": ["Context"]}, "description": "self"}], "meta": {"code": {"paramnames": ["enabled"], "type": "FunctionExpression", "id": "astnode100000081", "name": "Context.prototype.enableTimeouts"}, "columnno": 0, "filename": "context.js", "range": [905, 1101], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "name": "enabled"}], "longname": "module:Context~Context#enableTimeouts", "scope": "instance", "name": "enableTimeouts"}, {"comment": "/**\r\n * Set or get test slowness threshold `ms`.\r\n *\r\n * @private\r\n * @param {number} ms\r\n * @return {Context} self\r\n */", "kind": "function", "description": "Set or get test slowness threshold `ms`.", "memberof": "module:Context~Context", "access": "private", "returns": [{"type": {"names": ["Context"]}, "description": "self"}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000116", "name": "Context.prototype.slow"}, "columnno": 0, "filename": "context.js", "range": [1228, 1384], "lineno": 70, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "name": "ms"}], "longname": "module:Context~Context#slow", "scope": "instance", "name": "slow"}, {"comment": "/**\r\n * Mark a test as skipped.\r\n *\r\n * @private\r\n * @throws Pending\r\n */", "kind": "function", "description": "Mark a test as skipped.", "memberof": "module:Context~Context", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000151", "name": "Context.prototype.skip"}, "columnno": 0, "filename": "context.js", "range": [1464, 1531], "lineno": 84, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:Context~Context#skip", "exceptions": [{"description": "Pending"}], "scope": "instance", "name": "skip"}, {"comment": "/**\r\n * Set or get a number of allowed retries on failed tests\r\n *\r\n * @private\r\n * @param {number} n\r\n * @return {Context} self\r\n */", "kind": "function", "description": "Set or get a number of allowed retries on failed tests", "memberof": "module:Context~Context", "access": "private", "returns": [{"type": {"names": ["Context"]}, "description": "self"}], "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000168", "name": "Context.prototype.retries"}, "columnno": 0, "filename": "context.js", "range": [1671, 1834], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "name": "n"}], "longname": "module:Context~Context#retries", "scope": "instance", "name": "retries"}, {"comment": "/**\r\n * Get or set the test `err`.\r\n *\r\n * @memberof Hook\r\n * @public\r\n * @param {Error} err\r\n * @return {Error}\r\n */", "kind": "function", "description": "Get or set the test `err`.", "memberof": "Hook", "access": "public", "returns": [{"type": {"names": ["Error"]}}], "meta": {"code": {"paramnames": ["err"], "type": "FunctionExpression", "id": "astnode100000049", "name": "Hook.prototype.error"}, "vars": {"this._error": "Hook#_error", "err": "Hook#error~err"}, "columnno": 0, "filename": "hook.js", "range": [615, 779], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Error"]}, "name": "err"}], "longname": "Hook#error", "scope": "instance", "name": "error"}, {"comment": "/**\r\n * Initialize a new `Pending` error with the given message.\r\n *\r\n * @param {string} message\r\n */", "kind": "function", "description": "Initialize a new `Pending` error with the given message.", "meta": {"code": {"paramnames": ["message"], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "Pending"}, "vars": {"this.message": null}, "columnno": 0, "filename": "pending.js", "range": [149, 206], "lineno": 10, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "message"}], "longname": "Pending", "scope": "global", "name": "Pending"}, {"comment": "/**\r\n * Escape special characters in the given string of html.\r\n *\r\n * @private\r\n * @param  {string} html\r\n * @return {string}\r\n */", "kind": "function", "description": "Escape special characters in the given string of html.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["html"], "type": "FunctionExpression", "id": "astnode100000059", "name": "exports.escape"}, "columnno": 0, "filename": "utils.js", "range": [517, 617], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "html"}], "longname": "module:utils.escape", "scope": "static", "name": "escape"}, {"comment": "/**\r\n * Test if the given obj is type of string.\r\n *\r\n * @private\r\n * @param {Object} obj\r\n * @return {boolean}\r\n */", "kind": "function", "description": "Test if the given obj is type of string.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["obj"], "type": "FunctionExpression", "id": "astnode100000078", "name": "exports.isString"}, "columnno": 0, "filename": "utils.js", "range": [740, 812], "lineno": 44, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Object"]}, "name": "obj"}], "longname": "module:utils.isString", "scope": "static", "name": "isString"}, {"comment": "/**\r\n * Watch the given `files` for changes\r\n * and invoke `fn(file)` on modification.\r\n *\r\n * @private\r\n * @param {Array} files\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Watch the given `files` for changes\rand invoke `fn(file)` on modification.", "memberof": "module:utils", "access": "private", "meta": {"code": {"paramnames": ["files", "fn"], "type": "FunctionExpression", "id": "astnode100000091", "name": "exports.watch"}, "vars": {"": null, "options": "module:utils.watch~options"}, "columnno": 0, "filename": "utils.js", "range": [977, 1252], "lineno": 56, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array"]}, "name": "files"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "module:utils.watch", "scope": "static", "name": "watch"}, {"comment": "/**\r\n * Ignored files.\r\n *\r\n * @private\r\n * @param {string} path\r\n * @return {boolean}\r\n */", "kind": "function", "description": "Ignored files.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["path"], "type": "FunctionDeclaration", "id": "astnode100000142", "name": "ignored"}, "columnno": 0, "filename": "utils.js", "range": [1350, 1411], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "path"}], "longname": "module:utils~ignored", "scope": "inner", "name": "ignored"}, {"comment": "/**\r\n * Lookup files in the given `dir`.\r\n *\r\n * @private\r\n * @param {string} dir\r\n * @param {string[]} [ext=['.js']]\r\n * @param {Array} [ret=[]]\r\n * @return {Array}\r\n */", "kind": "function", "description": "Lookup files in the given `dir`.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": ["dir", "ext", "ret"], "type": "FunctionExpression", "id": "astnode100000155", "name": "exports.files"}, "vars": {"": null, "re": "module:utils.files~re", "ext": "module:utils~ext", "ret": "module:utils~ret"}, "columnno": 0, "filename": "utils.js", "range": [1587, 2024], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "dir"}, {"optional": true, "defaultvalue": "['.js']", "type": {"names": ["Array.<string>"]}, "name": "ext"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array"]}, "name": "ret"}], "longname": "module:utils.files", "scope": "static", "name": "files"}, {"comment": "/**\r\n * Compute a slug from the given `str`.\r\n *\r\n * @private\r\n * @param {string} str\r\n * @return {string}\r\n */", "kind": "function", "description": "Compute a slug from the given `str`.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["str"], "type": "FunctionExpression", "id": "astnode100000248", "name": "exports.slug"}, "columnno": 0, "filename": "utils.js", "range": [2142, 2265], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "str"}], "longname": "module:utils.slug", "scope": "static", "name": "slug"}, {"comment": "/**\r\n * Strip the function definition from `str`, and re-indent for pre whitespace.\r\n *\r\n * @param {string} str\r\n * @return {string}\r\n */", "kind": "function", "description": "Strip the function definition from `str`, and re-indent for pre whitespace.", "memberof": "module:utils", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["str"], "type": "FunctionExpression", "id": "astnode100000271", "name": "exports.clean"}, "vars": {"tabs": "module:utils.clean~tabs", "re": "module:utils.clean~re", "spaces": "module:utils.clean~spaces", "str": "module:utils~str"}, "columnno": 0, "filename": "utils.js", "range": [2409, 3103], "lineno": 128, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "str"}], "longname": "module:utils.clean", "scope": "static", "name": "clean"}, {"comment": "/**\r\n * Parse the given `qs`.\r\n *\r\n * @private\r\n * @param {string} qs\r\n * @return {Object}\r\n */", "kind": "function", "description": "Parse the given `qs`.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["Object"]}}], "meta": {"code": {"paramnames": ["qs"], "type": "FunctionExpression", "id": "astnode100000356", "name": "exports.parseQuery"}, "vars": {"": null}, "columnno": 0, "filename": "utils.js", "range": [3205, 3594], "lineno": 157, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "qs"}], "longname": "module:utils.parseQuery", "scope": "static", "name": "parseQuery"}, {"comment": "/**\r\n * Highlight the given string of `js`.\r\n *\r\n * @private\r\n * @param {string} js\r\n * @return {string}\r\n */", "kind": "function", "description": "Highlight the given string of `js`.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["js"], "type": "FunctionDeclaration", "id": "astnode100000423", "name": "highlight"}, "columnno": 0, "filename": "utils.js", "range": [3710, 4297], "lineno": 180, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "js"}], "longname": "module:utils~highlight", "scope": "inner", "name": "highlight"}, {"comment": "/**\r\n * Highlight the contents of tag `name`.\r\n *\r\n * @private\r\n * @param {string} name\r\n */", "kind": "function", "description": "Highlight the contents of tag `name`.", "memberof": "module:utils", "access": "private", "meta": {"code": {"paramnames": ["name"], "type": "FunctionExpression", "id": "astnode100000470", "name": "exports.highlightTags"}, "vars": {"i": "module:utils.highlightTags~i", "code": "module:utils.highlightTags~code", "len": "module:utils.highlightTags~len", "code[undefined].innerHTML": "module:utils.highlightTags~code.undefined].innerHTML"}, "columnno": 0, "filename": "utils.js", "range": [4395, 4627], "lineno": 204, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "name"}], "longname": "module:utils.highlightTags", "scope": "static", "name": "highlightTags"}, {"comment": "/**\r\n * If a value could have properties, and has none, this function is called,\r\n * which returns a string representation of the empty value.\r\n *\r\n * Functions w/ no properties return `'[Function]'`\r\n * Arrays w/ length === 0 return `'[]'`\r\n * Objects w/ no properties return `'{}'`\r\n * All else: return result of `value.toString()`\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {string} typeHint The type of the value\r\n * @returns {string}\r\n */", "kind": "function", "description": "If a value could have properties, and has none, this function is called,\rwhich returns a string representation of the empty value.\r\rFunctions w/ no properties return `'[Function]'`\rArrays w/ length === 0 return `'[]'`\rObjects w/ no properties return `'{}'`\rAll else: return result of `value.toString()`", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["value", "typeHint"], "type": "FunctionDeclaration", "id": "astnode100000519", "name": "emptyRepresentation"}, "columnno": 0, "filename": "utils.js", "range": [5105, 5358], "lineno": 225, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["*"]}, "description": "The value to inspect.", "name": "value"}, {"type": {"names": ["string"]}, "description": "The type of the value", "name": "typeHint"}], "longname": "module:utils~emptyRepresentation", "scope": "inner", "name": "emptyRepresentation"}, {"comment": "", "kind": "function", "name": "type", "memberof": "module:utils", "undocumented": true, "meta": {"code": {"paramnames": ["value"], "type": "FunctionExpression", "id": "astnode100000547", "value": "type", "name": "exports.type"}, "columnno": 12, "filename": "utils.js", "range": [5999, 6326], "lineno": 259, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:utils.type", "scope": "static"}, {"comment": "/**\r\n * Stringify `value`. Different behavior depending on type of value:\r\n *\r\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\r\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\r\n * - If `value` is an *empty* object, function, or array, return result of function\r\n *   {@link emptyRepresentation}.\r\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\r\n *   JSON.stringify().\r\n *\r\n * @private\r\n * @see exports.type\r\n * @param {*} value\r\n * @return {string}\r\n */", "kind": "function", "description": "Stringify `value`. Different behavior depending on type of value:\r\r- If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\r- If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\r- If `value` is an *empty* object, function, or array, return result of function\r  {@link emptyRepresentation}.\r- If `value` has properties, call {@link exports.canonicalize} on it, then return result of\r  JSON.stringify().", "memberof": "module:utils", "returns": [{"type": {"names": ["string"]}}], "access": "private", "see": ["exports.type"], "meta": {"code": {"paramnames": ["value"], "type": "FunctionExpression", "id": "astnode100000597", "name": "exports.stringify"}, "vars": {"": null, "json": "module:utils.stringify~json", "typeHint": "module:utils~typeHint", "value": "module:utils~value", "prop": "module:utils.stringify~prop"}, "columnno": 0, "filename": "utils.js", "range": [6944, 8016], "lineno": 288, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["*"]}, "name": "value"}], "longname": "module:utils.stringify", "scope": "static", "name": "stringify"}, {"comment": "/**\r\n * like JSON.stringify but more sense.\r\n *\r\n * @private\r\n * @param {Object}  object\r\n * @param {number=} spaces\r\n * @param {number=} depth\r\n * @returns {*}\r\n */", "kind": "function", "description": "like JSON.stringify but more sense.", "memberof": "module:utils", "access": "private", "returns": [{"type": {"names": ["*"]}}], "meta": {"code": {"paramnames": ["object", "spaces", "depth"], "type": "FunctionDeclaration", "id": "astnode100000743", "name": "jsonStringify"}, "vars": {"repeat": "module:utils~jsonStringify~repeat", "end": "module:utils~jsonStringify~end", "space": "module:utils~jsonStringify~space", "i": "module:utils~jsonStringify~i", "length": "module:utils~jsonStringify~length", "depth": "module:utils~depth", "_stringify": "module:utils~jsonStringify~_stringify", "str": "module:utils~str"}, "columnno": 0, "filename": "utils.js", "range": [8188, 10225], "lineno": 335, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Object"]}, "name": "object"}, {"optional": true, "type": {"names": ["number"]}, "name": "spaces"}, {"optional": true, "type": {"names": ["number"]}, "name": "depth"}], "longname": "module:utils~jsonStringify", "scope": "inner", "name": "jsonStringify"}, {"comment": "", "kind": "function", "name": "repeat", "memberof": "module:utils~jsonStringify", "undocumented": true, "meta": {"code": {"paramnames": ["s", "n"], "type": "FunctionDeclaration", "id": "astnode100000813", "name": "repeat"}, "columnno": 2, "filename": "utils.js", "range": [8634, 8696], "lineno": 350, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:utils~jsonStringify~repeat", "scope": "inner"}, {"comment": "", "kind": "function", "name": "_stringify", "memberof": "module:utils~jsonStringify", "undocumented": true, "meta": {"code": {"paramnames": ["val"], "type": "FunctionDeclaration", "id": "astnode100000826", "name": "_stringify"}, "vars": {"sDate": "module:utils~jsonStringify~_stringify~sDate", "json": "module:utils~json", "val": "module:utils~val"}, "columnno": 2, "filename": "utils.js", "range": [8702, 9762], "lineno": 354, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:utils~jsonStringify~_stringify", "scope": "inner"}, {"comment": "/**\r\n * Return a new Thing that has the keys in sorted order. Recursive.\r\n *\r\n * If the Thing...\r\n * - has already been seen, return string `'[Circular]'`\r\n * - is `undefined`, return string `'[undefined]'`\r\n * - is `null`, return value `null`\r\n * - is some other primitive, return the value\r\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\r\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\r\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\r\n *\r\n * @private\r\n * @see {@link exports.stringify}\r\n * @param {*} value Thing to inspect.  May or may not have properties.\r\n * @param {Array} [stack=[]] Stack of seen values\r\n * @param {string} [typeHint] Type hint\r\n * @return {(Object|Array|Function|string|undefined)}\r\n */", "kind": "function", "description": "Return a new Thing that has the keys in sorted order. Recursive.\r\rIf the Thing...\r- has already been seen, return string `'[Circular]'`\r- is `undefined`, return string `'[undefined]'`\r- is `null`, return value `null`\r- is some other primitive, return the value\r- is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\r- is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\r- is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`", "memberof": "module:utils", "returns": [{"type": {"names": ["Object", "Array", "function", "string", "undefined"]}}], "access": "private", "see": ["{@link exports.stringify}"], "meta": {"code": {"paramnames": ["value", "stack", "typeHint"], "type": "FunctionExpression", "id": "astnode100001054", "value": "canonicalize", "name": "exports.canonicalize"}, "vars": {"": null, "typeHint": "module:utils~typeHint", "prop": "module:utils.canonicalize~prop", "withStack": "module:utils.canonicalize~withStack", "stack": "module:utils~stack", "canonicalizedObj": "module:utils~canonicalizedObj"}, "columnno": 0, "filename": "utils.js", "range": [11125, 12755], "lineno": 431, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["*"]}, "description": "Thing to inspect.  May or may not have properties.", "name": "value"}, {"optional": true, "defaultvalue": "[]", "type": {"names": ["Array"]}, "description": "Stack of seen values", "name": "stack"}, {"optional": true, "type": {"names": ["string"]}, "description": "Type hint", "name": "typeHint"}], "longname": "module:utils.canonicalize", "scope": "static", "name": "canonicalize"}, {"comment": "", "kind": "function", "name": "withStack", "memberof": "module:utils.canonicalize", "undocumented": true, "meta": {"code": {"paramnames": ["value", "fn"], "type": "FunctionDeclaration", "id": "astnode100001078", "name": "withStack"}, "columnno": 2, "filename": "utils.js", "range": [11353, 11442], "lineno": 437, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:utils.canonicalize~withStack", "scope": "inner"}, {"comment": "/**\r\n * Lookup file names at the given `path`.\r\n *\r\n * @memberof Mocha.utils\r\n * @public\r\n * @param {string} filepath Base path to start searching from.\r\n * @param {string[]} extensions File extensions to look for.\r\n * @param {boolean} recursive Whether or not to recurse into subdirectories.\r\n * @todo Fix extension handling\r\n * @return {string[]} An array of paths.\r\n */", "kind": "function", "description": "Lookup file names at the given `path`.", "memberof": "Mocha.utils", "access": "public", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "An array of paths."}], "meta": {"code": {"paramnames": ["filepath", "extensions", "recursive"], "type": "FunctionExpression", "id": "astnode100001245", "value": "lookupFiles", "name": "exports.lookupFiles"}, "vars": {"files": "module:utils~files", "": null, "stat": "Mocha.utils.exports.lookupFiles~stat", "filepath": "module:utils~filepath"}, "columnno": 0, "filename": "utils.js", "range": [13134, 14436], "lineno": 509, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "description": "Base path to start searching from.", "name": "filepath"}, {"type": {"names": ["Array.<string>"]}, "description": "File extensions to look for.", "name": "extensions"}, {"type": {"names": ["boolean"]}, "description": "Whether or not to recurse into subdirectories.", "name": "recursive"}], "longname": "Mocha.utils.exports.lookupFiles", "scope": "static", "todo": ["Fix extension handling"], "name": "exports.lookupFiles"}, {"comment": "/**\r\n * Generate an undefined error with a message warning the user.\r\n *\r\n * @return {Error}\r\n */", "kind": "function", "description": "Generate an undefined error with a message warning the user.", "memberof": "module:utils", "returns": [{"type": {"names": ["Error"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001436", "name": "exports.undefinedError"}, "columnno": 0, "filename": "utils.js", "range": [14542, 14679], "lineno": 569, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:utils.undefinedError", "scope": "static", "name": "undefinedError"}, {"comment": "/**\r\n * Generate an undefined error if `err` is not defined.\r\n *\r\n * @param {Error} err\r\n * @return {Error}\r\n */", "kind": "function", "description": "Generate an undefined error if `err` is not defined.", "memberof": "module:utils", "returns": [{"type": {"names": ["Error"]}}], "meta": {"code": {"paramnames": ["err"], "type": "FunctionExpression", "id": "astnode100001447", "name": "exports.getError"}, "columnno": 0, "filename": "utils.js", "range": [14800, 14880], "lineno": 582, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Error"]}, "name": "err"}], "longname": "module:utils.getError", "scope": "static", "name": "getError"}, {"comment": "/**\r\n * Show a deprecation warning. Each distinct message is only displayed once.\r\n *\r\n * @param {string} msg\r\n */", "kind": "function", "description": "Show a deprecation warning. Each distinct message is only displayed once.", "memberof": "module:utils", "meta": {"code": {"paramnames": ["msg"], "type": "FunctionExpression", "id": "astnode100001462", "name": "exports.deprecate"}, "vars": {"msg": "module:utils~msg", "seenDeprecationMsg[undefined]": "module:utils~seenDeprecationMsg[undefined]"}, "columnno": 0, "filename": "utils.js", "range": [15001, 15193], "lineno": 591, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "msg"}], "longname": "module:utils.deprecate", "scope": "static", "name": "deprecate"}, {"comment": "/**\r\n * @summary\r\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\r\n * @description\r\n * When invoking this function you get a filter function that get the Error.stack as an input,\r\n * and return a prettify output.\r\n * (i.e: strip Mocha and internal node functions from stack trace).\r\n * @returns {Function}\r\n */", "kind": "function", "description": "When invoking this function you get a filter function that get the Error.stack as an input,\rand return a prettify output.\r(i.e: strip Mocha and internal node functions from stack trace).", "memberof": "module:utils", "summary": "This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)", "returns": [{"type": {"names": ["function"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001531", "name": "exports.stackTraceFilter"}, "vars": {"": null, "isMochaInternal": "module:utils.stackTraceFilter~isMochaInternal", "is": "module:utils.stackTraceFilter~is", "isNodeInternal": "module:utils.stackTraceFilter~isNodeInternal", "slash": "module:utils~slash", "cwd": "module:utils~cwd"}, "columnno": 0, "filename": "utils.js", "range": [15866, 17366], "lineno": 623, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:utils.stackTraceFilter", "scope": "static", "name": "stackTraceFilter"}, {"comment": "", "kind": "function", "name": "isMochaInternal", "memberof": "module:utils.stackTraceFilter", "undocumented": true, "meta": {"code": {"paramnames": ["line"], "type": "FunctionDeclaration", "id": "astnode100001598", "name": "isMochaInternal"}, "columnno": 2, "filename": "utils.js", "range": [16281, 16573], "lineno": 638, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:utils.stackTraceFilter~isMochaInternal", "scope": "inner"}, {"comment": "", "kind": "function", "name": "isNodeInternal", "memberof": "module:utils.stackTraceFilter", "undocumented": true, "meta": {"code": {"paramnames": ["line"], "type": "FunctionDeclaration", "id": "astnode100001646", "name": "isNodeInternal"}, "columnno": 2, "filename": "utils.js", "range": [16579, 16872], "lineno": 647, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:utils.stackTraceFilter~isNodeInternal", "scope": "inner"}, {"comment": "/**\r\n * Crude, but effective.\r\n * @public\r\n * @param {*} value\r\n * @returns {boolean} Whether or not `value` is a Promise\r\n */", "kind": "function", "description": "Crude, but effective.", "memberof": "module:utils", "access": "public", "returns": [{"type": {"names": ["boolean"]}, "description": "Whether or not `value` is a Promise"}], "meta": {"code": {"paramnames": ["value"], "type": "FunctionExpression", "id": "astnode100001762", "value": "isPromise", "name": "exports.isPromise"}, "columnno": 0, "filename": "utils.js", "range": [17499, 17662], "lineno": 689, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["*"]}, "name": "value"}], "longname": "module:utils.isPromise", "scope": "static", "name": "isPromise"}, {"comment": "/**\r\n * Clamps a numeric value to an inclusive range.\r\n *\r\n * @param {number} value - Value to be clamped.\r\n * @param {numer[]} range - Two element array specifying [min, max] range.\r\n * @returns {number} clamped value\r\n */", "kind": "function", "description": "Clamps a numeric value to an inclusive range.", "memberof": "module:utils", "returns": [{"type": {"names": ["number"]}, "description": "clamped value"}], "meta": {"code": {"paramnames": ["value", "range"], "type": "FunctionExpression", "id": "astnode100001787", "value": "clamp", "name": "exports.clamp"}, "columnno": 0, "filename": "utils.js", "range": [17892, 17998], "lineno": 704, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "description": "Value to be clamped.", "name": "value"}, {"type": {"names": ["Array.<numer>"]}, "description": "Two element array specifying [min, max] range.", "name": "range"}], "longname": "module:utils.clamp", "scope": "static", "name": "clamp"}, {"comment": "/**\r\n * It's a noop.\r\n * @public\r\n */", "kind": "function", "description": "It's a noop.", "memberof": "module:utils", "access": "public", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001813", "name": "exports.noop"}, "columnno": 0, "filename": "utils.js", "range": [18042, 18070], "lineno": 712, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:utils.noop", "scope": "static", "name": "noop"}, {"comment": "/**\r\n * @summary\r\n * Checks if Growl notification support seems likely.\r\n *\r\n * @description\r\n * Glosses over the distinction between an unsupported platform\r\n * and one that lacks prerequisite software installations.\r\n *\r\n * @public\r\n * @see {@link https://github.com/tj/node-growl/blob/master/README.md|Prerequisite Installs}\r\n * @see {@link Mocha#growl}\r\n * @see {@link Mocha#isGrowlCapable}\r\n * @return {boolean} whether Growl notification support can be expected\r\n */", "kind": "function", "description": "Glosses over the distinction between an unsupported platform\rand one that lacks prerequisite software installations.", "memberof": "module:Growl", "returns": [{"type": {"names": ["boolean"]}, "description": "whether Growl notification support can be expected"}], "summary": "Checks if Growl notification support seems likely.", "access": "public", "see": ["{@link https://github.com/tj/node-growl/blob/master/README.md|Prerequisite Installs}", "{@link Mocha#growl}", "{@link Mocha#isGrowlCapable}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000023", "name": "exports.isCapable"}, "columnno": 0, "filename": "growl.js", "range": [636, 737], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "module:Growl.isCapable", "scope": "static", "name": "isCapable"}, {"comment": "/**\r\n * Implements desktop notifications as a pseudo-reporter.\r\n *\r\n * @public\r\n * @see {@link Mocha#_growl}\r\n * @param {Runner} runner - Runner instance.\r\n */", "kind": "function", "description": "Implements desktop notifications as a pseudo-reporter.", "memberof": "module:Growl", "access": "public", "see": ["{@link Mocha#_growl}"], "meta": {"code": {"paramnames": ["runner"], "type": "FunctionExpression", "id": "astnode100000042", "name": "exports.notify"}, "vars": {"": null, "sendNotification": "module:Growl.notify~sendNotification"}, "columnno": 0, "filename": "growl.js", "range": [903, 1049], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Runner"]}, "description": "Runner instance.", "name": "runner"}], "longname": "module:Growl.notify", "scope": "static", "name": "notify"}, {"comment": "", "kind": "function", "name": "sendNotification", "memberof": "module:Growl.notify", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000050", "name": "sendNotification"}, "columnno": 6, "filename": "growl.js", "range": [946, 1004], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Growl.notify~sendNotification", "scope": "inner"}, {"comment": "/**\r\n * Displays the notification.\r\n *\r\n * @private\r\n * @param {Runner} runner - Runner instance.\r\n */", "kind": "function", "description": "Displays the notification.", "memberof": "module:Growl", "access": "private", "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000065", "name": "display"}, "vars": {"growl": "module:Growl~display~growl", "stats": "module:Growl~display~stats", "title": "module:Growl~title", "symbol": "module:Growl~display~symbol", "_message": "module:Growl~_message", "message": "module:Growl~message", "options": "module:Growl~display~options"}, "columnno": 0, "filename": "growl.js", "range": [1158, 1844], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Runner"]}, "description": "Runner instance.", "name": "runner"}], "longname": "module:Growl~display", "scope": "inner", "name": "display"}, {"comment": "", "kind": "function", "name": "onCompletion", "memberof": "module:Growl", "undocumented": true, "meta": {"code": {"paramnames": ["err", "stdout", "stderr"], "type": "FunctionDeclaration", "id": "astnode100000177", "name": "onCompletion"}, "vars": {"message": "module:Growl~onCompletion~message"}, "columnno": 0, "filename": "growl.js", "range": [2454, 2747], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Growl~onCompletion", "scope": "inner"}, {"comment": "/**\r\n * Returns Mocha logo image path.\r\n *\r\n * @private\r\n * @return {string} Pathname of Mocha logo\r\n */", "kind": "function", "description": "Returns Mocha logo image path.", "memberof": "module:Growl", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "Pathname of Mocha logo"}], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000206", "name": "logo"}, "columnno": 0, "filename": "growl.js", "range": [2857, 2946], "lineno": 111, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Growl~logo", "scope": "inner", "name": "logo"}, {"comment": "/**\r\n * @summary\r\n * Locates a binary in the user's `PATH` environment variable.\r\n *\r\n * @description\r\n * Takes a list of command names and searches the path for each executable\r\n * file that would be run had these commands actually been invoked.\r\n *\r\n * @private\r\n * @param {string[]} binaries - Names of binary files to search for.\r\n * @return {string} absolute path of first binary found, or empty string if none\r\n */", "kind": "function", "description": "Takes a list of command names and searches the path for each executable\rfile that would be run had these commands actually been invoked.", "memberof": "module:Growl", "summary": "Locates a binary in the user's `PATH` environment variable.", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "absolute path of first binary found, or empty string if none"}], "meta": {"code": {"paramnames": ["binaries"], "type": "FunctionDeclaration", "id": "astnode100000218", "name": "which"}, "vars": {"binary": "module:Growl~which~binary", "paths": "module:Growl~which~paths", "i": "module:Growl~which~i", "n": "module:Growl~which~n", "plen": "module:Growl~which~plen", "blen": "module:Growl~which~blen", "loc": "module:Growl~which~loc"}, "columnno": 0, "filename": "growl.js", "range": [3372, 3743], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array.<string>"]}, "description": "Names of binary files to search for.", "name": "binaries"}], "longname": "module:Growl~which", "scope": "inner", "name": "which"}, {"comment": "/**\r\n * @summary\r\n * Gets platform-specific Growl support binaries.\r\n *\r\n * @description\r\n * Somewhat brittle dependency on `growl` package implementation, but it\r\n * rarely changes.\r\n *\r\n * @private\r\n * @see {@link https://github.com/tj/node-growl/blob/master/lib/growl.js#L28-L126|setupCmd}\r\n * @return {string[]} names of Growl support binaries\r\n */", "kind": "function", "description": "Somewhat brittle dependency on `growl` package implementation, but it\rrarely changes.", "memberof": "module:Growl", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "names of Growl support binaries"}], "summary": "Gets platform-specific Growl support binaries.", "access": "private", "see": ["{@link https://github.com/tj/node-growl/blob/master/lib/growl.js#L28-L126|setupCmd}"], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000296", "name": "getSupportBinaries"}, "vars": {"binaries": "module:Growl~getSupportBinaries~binaries"}, "columnno": 0, "filename": "growl.js", "range": [4101, 4324], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "module:Growl~getSupportBinaries", "scope": "inner", "name": "getSupportBinaries"}, {"comment": "/**\r\n * @summary\r\n * Set timeout threshold value (msecs).\r\n *\r\n * @description\r\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\r\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\r\n * If clamped value matches either range endpoint, timeouts will be disabled.\r\n *\r\n * @private\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\r\n * @param {number|string} ms - Timeout threshold value.\r\n * @returns {Runnable} this\r\n * @chainable\r\n */", "kind": "function", "description": "A string argument can use shorthand (e.g., \"2s\") and will be converted.\rThe value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\rIf clamped value matches either range endpoint, timeouts will be disabled.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Runnable", "returns": [{"type": {"names": ["Runnable"]}, "description": "this"}], "summary": "Set timeout threshold value (msecs).", "access": "private", "see": ["{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}"], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000168", "name": "Runnable.prototype.timeout"}, "vars": {"this._enableTimeouts": "Runnable#_enableTimeouts", "range": "Runnable#timeout~range", "INT_MAX": "Runnable#timeout~INT_MAX", "ms": "Runnable#timeout~ms", "this._timeout": "Runnable#_timeout"}, "columnno": 0, "filename": "runnable.js", "range": [1886, 2416], "lineno": 67, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "description": "Timeout threshold value.", "name": "ms"}], "longname": "Runnable#timeout", "scope": "instance", "name": "timeout"}, {"comment": "/**\r\n * Set or get slow `ms`.\r\n *\r\n * @private\r\n * @param {number|string} ms\r\n * @return {Runnable|number} ms or Runnable instance.\r\n */", "kind": "function", "description": "Set or get slow `ms`.", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["Runnable", "number"]}, "description": "ms or Runnable instance."}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000268", "name": "Runnable.prototype.slow"}, "vars": {"this._slow": "Runnable#_slow", "ms": "Runnable#slow~ms"}, "columnno": 0, "filename": "runnable.js", "range": [2559, 2815], "lineno": 99, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "name": "ms"}], "longname": "Runnable#slow", "scope": "instance", "name": "slow"}, {"comment": "/**\r\n * Set and get whether timeout is `enabled`.\r\n *\r\n * @private\r\n * @param {boolean} enabled\r\n * @return {Runnable|boolean} enabled or Runnable instance.\r\n */", "kind": "function", "description": "Set and get whether timeout is `enabled`.", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["Runnable", "boolean"]}, "description": "enabled or Runnable instance."}], "meta": {"code": {"paramnames": ["enabled"], "type": "FunctionExpression", "id": "astnode100000318", "name": "Runnable.prototype.enableTimeouts"}, "vars": {"this._enableTimeouts": "Runnable#_enableTimeouts"}, "columnno": 0, "filename": "runnable.js", "range": [2983, 3199], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "name": "enabled"}], "longname": "Runnable#enableTimeouts", "scope": "instance", "name": "enableTimeouts"}, {"comment": "/**\r\n * Halt and mark as pending.\r\n *\r\n * @memberof Mocha.Runnable\r\n * @public\r\n */", "kind": "function", "description": "Halt and mark as pending.", "memberof": "Mocha.Runnable", "access": "public", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000351", "name": "Runnable.prototype.skip"}, "columnno": 0, "filename": "runnable.js", "range": [3289, 3365], "lineno": 133, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runnable.Runnable#skip", "scope": "static", "name": "Runnable#skip"}, {"comment": "/**\r\n * Check if this runnable or its parent suite is marked as pending.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Check if this runnable or its parent suite is marked as pending.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000364", "name": "Runnable.prototype.isPending"}, "columnno": 0, "filename": "runnable.js", "range": [3466, 3580], "lineno": 142, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#isPending", "scope": "instance", "name": "isPending"}, {"comment": "/**\r\n * Return `true` if this Runnable has failed.\r\n * @return {boolean}\r\n * @private\r\n */", "kind": "function", "description": "Return `true` if this Runnable has failed.", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000388", "name": "Runnable.prototype.isFailed"}, "columnno": 0, "filename": "runnable.js", "range": [3677, 3778], "lineno": 151, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#isFailed", "scope": "instance", "name": "isFailed"}, {"comment": "/**\r\n * Return `true` if this Runnable has passed.\r\n * @return {boolean}\r\n * @private\r\n */", "kind": "function", "description": "Return `true` if this Runnable has passed.", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000409", "name": "Runnable.prototype.isPassed"}, "columnno": 0, "filename": "runnable.js", "range": [3875, 3976], "lineno": 160, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#isPassed", "scope": "instance", "name": "isPassed"}, {"comment": "/**\r\n * Set or get number of retries.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Set or get number of retries.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000430", "name": "Runnable.prototype.retries"}, "vars": {"this._retries": "Runnable#_retries"}, "columnno": 0, "filename": "runnable.js", "range": [4042, 4169], "lineno": 169, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#retries", "scope": "instance", "name": "retries"}, {"comment": "/**\r\n * Set or get current retry\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Set or get current retry", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000456", "name": "Runnable.prototype.currentRetry"}, "vars": {"this._currentRetry": "Runnable#_currentRetry"}, "columnno": 0, "filename": "runnable.js", "range": [4230, 4372], "lineno": 181, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#currentRetry", "scope": "instance", "name": "currentRetry"}, {"comment": "/**\r\n * Return the full title generated by recursively concatenating the parent's\r\n * full title.\r\n *\r\n * @memberof Mocha.Runnable\r\n * @public\r\n * @return {string}\r\n */", "kind": "function", "description": "Return the full title generated by recursively concatenating the parent's\rfull title.", "memberof": "Mocha.Runnable", "access": "public", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000482", "name": "Runnable.prototype.fullTitle"}, "columnno": 0, "filename": "runnable.js", "range": [4547, 4631], "lineno": 196, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runnable.Runnable#fullTitle", "scope": "static", "name": "Runnable#fullTitle"}, {"comment": "/**\r\n * Return the title path generated by concatenating the parent's title path with the title.\r\n *\r\n * @memberof Mocha.Runnable\r\n * @public\r\n * @return {string}\r\n */", "kind": "function", "description": "Return the title path generated by concatenating the parent's title path with the title.", "memberof": "Mocha.Runnable", "access": "public", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000500", "name": "Runnable.prototype.titlePath"}, "columnno": 0, "filename": "runnable.js", "range": [4805, 4907], "lineno": 207, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Runnable.Runnable#titlePath", "scope": "static", "name": "Runnable#titlePath"}, {"comment": "/**\r\n * Clear the timeout.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Clear the timeout.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000523", "name": "Runnable.prototype.clearTimeout"}, "columnno": 0, "filename": "runnable.js", "range": [4962, 5040], "lineno": 216, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#clearTimeout", "scope": "instance", "name": "clearTimeout"}, {"comment": "/**\r\n * Inspect the runnable void of private properties.\r\n *\r\n * @private\r\n * @return {string}\r\n */", "kind": "function", "description": "Inspect the runnable void of private properties.", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000538", "name": "Runnable.prototype.inspect"}, "vars": {"": null}, "columnno": 0, "filename": "runnable.js", "range": [5146, 5483], "lineno": 226, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#inspect", "scope": "instance", "name": "inspect"}, {"comment": "/**\r\n * Reset the timeout.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Reset the timeout.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000582", "name": "Runnable.prototype.resetTimeout"}, "vars": {"": null, "self": "Runnable#resetTimeout~self", "ms": "Runnable#resetTimeout~ms", "this.timer": "Runnable#timer"}, "columnno": 0, "filename": "runnable.js", "range": [5538, 5896], "lineno": 250, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#resetTimeout", "scope": "instance", "name": "resetTimeout"}, {"comment": "/**\r\n * Set or get a list of whitelisted globals for this test run.\r\n *\r\n * @private\r\n * @param {string[]} globals\r\n */", "kind": "function", "description": "Set or get a list of whitelisted globals for this test run.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": ["globals"], "type": "FunctionExpression", "id": "astnode100000649", "name": "Runnable.prototype.globals"}, "vars": {"this._allowedGlobals": "Runnable#_allowedGlobals"}, "columnno": 0, "filename": "runnable.js", "range": [6022, 6175], "lineno": 273, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array.<string>"]}, "name": "globals"}], "longname": "Runnable#globals", "scope": "instance", "name": "globals"}, {"comment": "/**\r\n * Run the test and invoke `fn(err)`.\r\n *\r\n * @param {Function} fn\r\n * @private\r\n */", "kind": "function", "description": "Run the test and invoke `fn(err)`.", "memberof": "Runnable", "access": "private", "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100000675", "name": "Runnable.prototype.run"}, "vars": {"": null, "multiple": "Runnable#run~multiple", "self": "Runnable#run~self", "emitted": "Runnable#run~emitted", "ctx": "Runnable#run~ctx", "start": "Runnable#run~start", "finished": "Runnable#run~finished", "callFnAsync": "Runnable#run~callFnAsync", "done": "Runnable#run~done", "this.callback": "Runnable#callback", "callFn": "Runnable#run~callFn", "this.skip": "Runnable#skip"}, "columnno": 0, "filename": "runnable.js", "range": [6271, 9852], "lineno": 286, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["function"]}, "name": "fn"}], "longname": "Runnable#run", "scope": "instance", "name": "run"}, {"comment": "", "kind": "function", "name": "multiple", "memberof": "Runnable#run", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000718", "name": "multiple"}, "vars": {"msg": "Runnable#run~multiple~msg", "emitted": "Runnable#run~multiple~emitted", "err.message": "err.message"}, "columnno": 2, "filename": "runnable.js", "range": [6564, 6882], "lineno": 299, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Runnable#run~multiple", "scope": "inner"}, {"comment": "", "kind": "function", "name": "done", "memberof": "Runnable#run", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000768", "name": "done"}, "vars": {"self.duration": "Runnable#run~self.duration", "finished": "Runnable#run~done~finished", "err": "Runnable#run~done~err", "ms": "Runnable#run~done~ms"}, "columnno": 2, "filename": "runnable.js", "range": [6903, 7277], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Runnable#run~done", "scope": "inner"}, {"comment": "", "kind": "function", "name": "skip", "memberof": "Runnable", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000853", "value": "asyncSkip", "name": "this.skip"}, "columnno": 4, "filename": "runnable.js", "range": [7491, 7792], "lineno": 341, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Runnable#skip", "scope": "instance"}, {"comment": "", "kind": "function", "name": "callFn", "memberof": "Runnable#run", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100000956", "name": "callFn"}, "vars": {"": null, "result": "Runnable#run~callFn~result"}, "columnno": 2, "filename": "runnable.js", "range": [8365, 9092], "lineno": 382, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Runnable#run~callFn", "scope": "inner"}, {"comment": "", "kind": "function", "name": "callFnAsync", "memberof": "Runnable#run", "undocumented": true, "meta": {"code": {"paramnames": ["fn"], "type": "FunctionDeclaration", "id": "astnode100001021", "name": "callFnAsync"}, "vars": {"": null, "result": "Runnable#run~callFnAsync~result"}, "columnno": 2, "filename": "runnable.js", "range": [9098, 9849], "lineno": 410, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Runnable#run~callFnAsync", "scope": "inner"}, {"comment": "/**\r\n * Instantiates a \"timeout\" error\r\n *\r\n * @param {number} ms - Timeout (in milliseconds)\r\n * @returns {Error} a \"timeout\" error\r\n * @private\r\n */", "kind": "function", "description": "Instantiates a \"timeout\" error", "memberof": "Runnable", "access": "private", "returns": [{"type": {"names": ["Error"]}, "description": "a \"timeout\" error"}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100001108", "name": "Runnable.prototype._timeoutError"}, "vars": {"msg": "Runnable#_timeoutError~msg"}, "columnno": 0, "filename": "runnable.js", "range": [10009, 10311], "lineno": 443, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "description": "Timeout (in milliseconds)", "name": "ms"}], "longname": "Runnable#_timeoutError", "scope": "instance", "name": "_timeoutError"}, {"comment": "", "kind": "function", "name": "Mocha", "undocumented": true, "meta": {"code": {"paramnames": ["options"], "type": "FunctionDeclaration", "id": "astnode100000152", "name": "Mocha"}, "vars": {"options.color": "Mocha~options.color", "this.files": null, "": null, "this.options": null, "this.suite": null, "options": "Mocha~options"}, "columnno": 0, "filename": "mocha.js", "range": [3041, 4545], "lineno": 87, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha", "scope": "global"}, {"comment": "/**\r\n * Enables or disables bailing on the first failure.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-b---bail|CLI option}\r\n * @param {boolean} [bail=true] - Whether to bail on first error.\r\n * @returns {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables or disables bailing on the first failure.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#-b---bail|CLI option}"], "meta": {"code": {"paramnames": ["bail"], "type": "FunctionExpression", "id": "astnode100000365", "name": "Mocha.prototype.bail"}, "vars": {"bail": "Mocha#bail~bail"}, "columnno": 0, "filename": "mocha.js", "range": [4796, 4931], "lineno": 156, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"optional": true, "defaultvalue": true, "type": {"names": ["boolean"]}, "description": "Whether to bail on first error.", "name": "bail"}], "longname": "Mocha#bail", "scope": "instance", "name": "bail"}, {"comment": "/**\r\n * @summary\r\n * Adds `file` to be loaded for execution.\r\n *\r\n * @description\r\n * Useful for generic setup code that must be included within test suite.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#--file-file|CLI option}\r\n * @param {string} file - Pathname of file to be loaded.\r\n * @returns {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Useful for generic setup code that must be included within test suite.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "summary": "Adds `file` to be loaded for execution.", "access": "public", "see": ["{@link https://mochajs.org/#--file-file|CLI option}"], "meta": {"code": {"paramnames": ["file"], "type": "FunctionExpression", "id": "astnode100000395", "name": "Mocha.prototype.addFile"}, "columnno": 0, "filename": "mocha.js", "range": [5275, 5362], "lineno": 177, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "description": "Pathname of file to be loaded.", "name": "file"}], "longname": "Mocha#addFile", "scope": "instance", "name": "addFile"}, {"comment": "/**\r\n * Sets reporter to `reporter`, defaults to \"spec\".\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-r---reporter-name|CLI option}\r\n * @see {@link https://mochajs.org/#reporters|Reporters}\r\n * @param {String|Function} reporter - Reporter name or constructor.\r\n * @param {Object} [reporterOptions] - Options used to configure the reporter.\r\n * @returns {Mocha} this\r\n * @chainable\r\n * @throws {Error} if requested reporter cannot be loaded\r\n * @example\r\n *\r\n * // Use XUnit reporter and direct its output to file\r\n * mocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });\r\n */", "kind": "function", "description": "Sets reporter to `reporter`, defaults to \"spec\".", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#-r---reporter-name|CLI option}", "{@link https://mochajs.org/#reporters|Reporters}"], "meta": {"code": {"paramnames": ["reporter", "reporterOptions"], "type": "FunctionExpression", "id": "astnode100000415", "name": "Mocha.prototype.reporter"}, "vars": {"_reporter": "Mocha#reporter~_reporter", "this._reporter": "Mocha#reporter#_reporter", "this.options.reporterOptions": "Mocha#reporter#options.reporterOptions", "reporter": "Mocha#reporter~reporter"}, "columnno": 0, "filename": "mocha.js", "range": [5967, 7689], "lineno": 198, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["String", "function"]}, "description": "Reporter name or constructor.", "name": "reporter"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Options used to configure the reporter.", "name": "reporterOptions"}], "examples": ["// Use XUnit reporter and direct its output to file\rmocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });"], "longname": "Mocha#reporter", "exceptions": [{"type": {"names": ["Error"]}, "description": "if requested reporter cannot be loaded"}], "scope": "instance", "name": "reporter"}, {"comment": "/**\r\n * Sets test UI `name`, defaults to \"bdd\".\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-u---ui-name|CLI option}\r\n * @see {@link https://mochajs.org/#interfaces|Interface DSLs}\r\n * @param {string} [name=bdd] - Interface name.\r\n * @returns {Mocha} this\r\n * @chainable\r\n * @throws {Error} if requested interface cannot be loaded\r\n */", "kind": "function", "description": "Sets test UI `name`, defaults to \"bdd\".", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#-u---ui-name|CLI option}", "{@link https://mochajs.org/#interfaces|Interface DSLs}"], "meta": {"code": {"paramnames": ["name"], "type": "FunctionExpression", "id": "astnode100000596", "name": "Mocha.prototype.ui"}, "vars": {"": null, "this._ui": "Mocha#ui#_ui", "name": "Mocha#ui~name"}, "columnno": 0, "filename": "mocha.js", "range": [8040, 9231], "lineno": 261, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"optional": true, "defaultvalue": "bdd", "type": {"names": ["string"]}, "description": "Interface name.", "name": "name"}], "longname": "Mocha#ui", "exceptions": [{"type": {"names": ["Error"]}, "description": "if requested interface cannot be loaded"}], "scope": "instance", "name": "ui"}, {"comment": "/**\r\n * @summary\r\n * Loads `files` prior to execution.\r\n *\r\n * @description\r\n * The implementation relies on Node's `require` to execute\r\n * the test interface functions and will be subject to its cache.\r\n *\r\n * @private\r\n * @see {@link Mocha#addFile}\r\n * @param {Function} [fn] - Callback invoked upon completion.\r\n */", "kind": "function", "description": "The implementation relies on Node's `require` to execute\rthe test interface functions and will be subject to its cache.", "memberof": "Mocha", "summary": "Loads `files` prior to execution.", "access": "private", "see": ["{@link Mocha#addFile}"], "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100000842", "name": "Mocha.prototype.loadFiles"}, "vars": {"": null, "suite": "Mocha#loadFiles~suite", "self": "Mocha#loadFiles~self"}, "columnno": 0, "filename": "mocha.js", "range": [9557, 9902], "lineno": 305, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"optional": true, "type": {"names": ["function"]}, "description": "Callback invoked upon completion.", "name": "fn"}], "longname": "Mocha#loadFiles", "scope": "instance", "name": "loadFiles"}, {"comment": "/**\r\n * Sets `grep` filter after escaping RegExp special characters.\r\n *\r\n * @public\r\n * @see {@link Mocha#grep}\r\n * @param {string} str - Value to be converted to a regexp.\r\n * @returns {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Select tests whose full title begins with `\"foo\"` followed by a period\r\n * mocha.fgrep('foo.');\r\n */", "kind": "function", "description": "Sets `grep` filter after escaping RegExp special characters.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link Mocha#grep}"], "meta": {"code": {"paramnames": ["str"], "type": "FunctionExpression", "id": "astnode100000914", "name": "Mocha.prototype.fgrep"}, "columnno": 0, "filename": "mocha.js", "range": [10248, 10376], "lineno": 330, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "description": "Value to be converted to a regexp.", "name": "str"}], "examples": ["// Select tests whose full title begins with `\"foo\"` followed by a period\rmocha.fgrep('foo.');"], "longname": "Mocha#fgrep", "scope": "instance", "name": "fgrep"}, {"comment": "/**\r\n * @summary\r\n * Sets `grep` filter used to select specific tests for execution.\r\n *\r\n * @description\r\n * If `re` is a regexp-like string, it will be converted to regexp.\r\n * The regexp is tested against the full title of each test (i.e., the\r\n * name of the test preceded by titles of each its ancestral suites).\r\n * As such, using an <em>exact-match</em> fixed pattern against the\r\n * test name itself will not yield any matches.\r\n * <br>\r\n * <strong>Previous filter value will be overwritten on each call!</strong>\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-g---grep-pattern|CLI option}\r\n * @see {@link Mocha#fgrep}\r\n * @see {@link Mocha#invert}\r\n * @param {RegExp|String} re - Regular expression used to select tests.\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Select tests whose full title contains `\"match\"`, ignoring case\r\n * mocha.grep(/match/i);\r\n * @example\r\n *\r\n * // Same as above but with regexp-like string argument\r\n * mocha.grep('/match/i');\r\n * @example\r\n *\r\n * // ## Anti-example\r\n * // Given embedded test `it('only-this-test')`...\r\n * mocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!\r\n */", "kind": "function", "description": "If `re` is a regexp-like string, it will be converted to regexp.\rThe regexp is tested against the full title of each test (i.e., the\rname of the test preceded by titles of each its ancestral suites).\rAs such, using an <em>exact-match</em> fixed pattern against the\rtest name itself will not yield any matches.\r<br>\r<strong>Previous filter value will be overwritten on each call!</strong>", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "summary": "Sets `grep` filter used to select specific tests for execution.", "access": "public", "see": ["{@link https://mochajs.org/#-g---grep-pattern|CLI option}", "{@link Mocha#fgrep}", "{@link Mocha#invert}"], "meta": {"code": {"paramnames": ["re"], "type": "FunctionExpression", "id": "astnode100000940", "name": "Mocha.prototype.grep"}, "vars": {"this.options.grep": "Mocha#grep#options.grep", "arg": "Mocha#grep~arg"}, "columnno": 0, "filename": "mocha.js", "range": [11548, 11860], "lineno": 371, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["RegExp", "String"]}, "description": "Regular expression used to select tests.", "name": "re"}], "examples": ["// Select tests whose full title contains `\"match\"`, ignoring case\rmocha.grep(/match/i);", "// Same as above but with regexp-like string argument\rmocha.grep('/match/i');", "// ## Anti-example\r// Given embedded test `it('only-this-test')`...\rmocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!"], "longname": "Mocha#grep", "scope": "instance", "name": "grep"}, {"comment": "/**\r\n * Inverts `grep` matches.\r\n *\r\n * @public\r\n * @see {@link Mocha#grep}\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Select tests whose full title does *not* contain `\"match\"`, ignoring case\r\n * mocha.grep(/match/i).invert();\r\n */", "kind": "function", "description": "Inverts `grep` matches.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link Mocha#grep}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000995", "name": "Mocha.prototype.invert"}, "vars": {"this.options.invert": "Mocha#invert#options.invert"}, "columnno": 0, "filename": "mocha.js", "range": [12120, 12207], "lineno": 394, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "examples": ["// Select tests whose full title does *not* contain `\"match\"`, ignoring case\rmocha.grep(/match/i).invert();"], "longname": "Mocha#invert", "scope": "instance", "name": "invert"}, {"comment": "/**\r\n * Enables or disables ignoring global leaks.\r\n *\r\n * @public\r\n * @see {@link Mocha#checkLeaks}\r\n * @param {boolean} ignoreLeaks - Whether to ignore global leaks.\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Ignore global leaks\r\n * mocha.ignoreLeaks(true);\r\n */", "kind": "function", "description": "Enables or disables ignoring global leaks.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link Mocha#checkLeaks}"], "meta": {"code": {"paramnames": ["ignoreLeaks"], "type": "FunctionExpression", "id": "astnode100001014", "name": "Mocha.prototype.ignoreLeaks"}, "vars": {"this.options.ignoreLeaks": "Mocha#ignoreLeaks#options.ignoreLeaks"}, "columnno": 0, "filename": "mocha.js", "range": [12499, 12623], "lineno": 412, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to ignore global leaks.", "name": "ignoreLeaks"}], "examples": ["// Ignore global leaks\rmocha.ignoreLeaks(true);"], "longname": "Mocha#ignoreLeaks", "scope": "instance", "name": "ignoreLeaks"}, {"comment": "/**\r\n * Enables checking for global variables leaked while running tests.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#--check-leaks|CLI option}\r\n * @see {@link Mocha#ignoreLeaks}\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables checking for global variables leaked while running tests.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#--check-leaks|CLI option}", "{@link Mocha#ignoreLeaks}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001036", "name": "Mocha.prototype.checkLeaks"}, "vars": {"this.options.ignoreLeaks": "Mocha#checkLeaks#options.ignoreLeaks"}, "columnno": 0, "filename": "mocha.js", "range": [12862, 12959], "lineno": 426, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#checkLeaks", "scope": "instance", "name": "checkLeaks"}, {"comment": "/**\r\n * Displays full stack trace upon test failure.\r\n *\r\n * @public\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Displays full stack trace upon test failure.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001055", "name": "Mocha.prototype.fullTrace"}, "vars": {"this.options.fullStackTrace": "Mocha#fullTrace#options.fullStackTrace"}, "columnno": 0, "filename": "mocha.js", "range": [13079, 13177], "lineno": 438, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#fullTrace", "scope": "instance", "name": "fullTrace"}, {"comment": "/**\r\n * Enables desktop notification support if prerequisite software installed.\r\n *\r\n * @public\r\n * @see {@link Mocha#isGrowlCapable}\r\n * @see {@link Mocha#_growl}\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables desktop notification support if prerequisite software installed.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link Mocha#isGrowlCapable}", "{@link Mocha#_growl}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001074", "name": "Mocha.prototype.growl"}, "vars": {"this.options.growl": "Mocha#growl#options.growl", "detail": "Mocha#growl~detail"}, "columnno": 0, "filename": "mocha.js", "range": [13393, 13741], "lineno": 452, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#growl", "scope": "instance", "name": "growl"}, {"comment": "/**\r\n * Specifies whitelist of variable names to be expected in global scope.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#--globals-names|CLI option}\r\n * @see {@link Mocha#checkLeaks}\r\n * @param {String[]|String} globals - Accepted global variable name(s).\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Specify variables to be expected in global scope\r\n * mocha.globals(['jQuery', 'MyLib']);\r\n */", "kind": "function", "description": "Specifies whitelist of variable names to be expected in global scope.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#--globals-names|CLI option}", "{@link Mocha#checkLeaks}"], "meta": {"code": {"paramnames": ["globals"], "type": "FunctionExpression", "id": "astnode100001141", "name": "Mocha.prototype.globals"}, "vars": {"this.options.globals": "Mocha#globals#options.globals"}, "columnno": 0, "filename": "mocha.js", "range": [14745, 14881], "lineno": 501, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Array.<String>", "String"]}, "description": "Accepted global variable name(s).", "name": "globals"}], "examples": ["// Specify variables to be expected in global scope\rmocha.globals(['jQuery', 'MyLib']);"], "longname": "Mocha#globals", "scope": "instance", "name": "globals"}, {"comment": "/**\r\n * Enables or disables TTY color output by screen-oriented reporters.\r\n *\r\n * @public\r\n * @param {boolean} colors - Whether to enable color output.\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables or disables TTY color output by screen-oriented reporters.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": ["colors"], "type": "FunctionExpression", "id": "astnode100001171", "name": "Mocha.prototype.useColors"}, "vars": {"this.options.useColors": "Mocha#useColors#options.useColors"}, "columnno": 0, "filename": "mocha.js", "range": [15085, 15224], "lineno": 514, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to enable color output.", "name": "colors"}], "longname": "Mocha#useColors", "scope": "instance", "name": "useColors"}, {"comment": "/**\r\n * Determines if reporter should use inline diffs (rather than +/-)\r\n * in test failure output.\r\n *\r\n * @public\r\n * @param {boolean} inlineDiffs - Whether to use inline diffs.\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Determines if reporter should use inline diffs (rather than +/-)\rin test failure output.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": ["inlineDiffs"], "type": "FunctionExpression", "id": "astnode100001196", "name": "Mocha.prototype.useInlineDiffs"}, "vars": {"this.options.useInlineDiffs": "Mocha#useInlineDiffs#options.useInlineDiffs"}, "columnno": 0, "filename": "mocha.js", "range": [15456, 15606], "lineno": 530, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to use inline diffs.", "name": "inlineDiffs"}], "longname": "Mocha#useInlineDiffs", "scope": "instance", "name": "useInlineDiffs"}, {"comment": "/**\r\n * Determines if reporter should include diffs in test failure output.\r\n *\r\n * @public\r\n * @param {boolean} hideDiff - Whether to hide diffs.\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Determines if reporter should include diffs in test failure output.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": ["hideDiff"], "type": "FunctionExpression", "id": "astnode100001220", "name": "Mocha.prototype.hideDiff"}, "vars": {"this.options.hideDiff": "Mocha#hideDiff#options.hideDiff"}, "columnno": 0, "filename": "mocha.js", "range": [15804, 15933], "lineno": 543, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to hide diffs.", "name": "hideDiff"}], "longname": "Mocha#hideDiff", "scope": "instance", "name": "hideDiff"}, {"comment": "/**\r\n * @summary\r\n * Sets timeout threshold value.\r\n *\r\n * @description\r\n * A string argument can use shorthand (such as \"2s\") and will be converted.\r\n * If the value is `0`, timeouts will be disabled.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-t---timeout-ms|CLI option}\r\n * @see {@link https://mochajs.org/#--no-timeouts|CLI option}\r\n * @see {@link https://mochajs.org/#timeouts|Timeouts}\r\n * @see {@link Mocha#enableTimeouts}\r\n * @param {number|string} msecs - Timeout threshold value.\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Sets timeout to one second\r\n * mocha.timeout(1000);\r\n * @example\r\n *\r\n * // Same as above but using string argument\r\n * mocha.timeout('1s');\r\n */", "kind": "function", "description": "A string argument can use shorthand (such as \"2s\") and will be converted.\rIf the value is `0`, timeouts will be disabled.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "summary": "Sets timeout threshold value.", "access": "public", "see": ["{@link https://mochajs.org/#-t---timeout-ms|CLI option}", "{@link https://mochajs.org/#--no-timeouts|CLI option}", "{@link https://mochajs.org/#timeouts|Timeouts}", "{@link Mocha#enableTimeouts}"], "meta": {"code": {"paramnames": ["msecs"], "type": "FunctionExpression", "id": "astnode100001244", "name": "Mocha.prototype.timeout"}, "columnno": 0, "filename": "mocha.js", "range": [16649, 16741], "lineno": 573, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "description": "Timeout threshold value.", "name": "msecs"}], "examples": ["// Sets timeout to one second\rmocha.timeout(1000);", "// Same as above but using string argument\rmocha.timeout('1s');"], "longname": "Mocha#timeout", "scope": "instance", "name": "timeout"}, {"comment": "/**\r\n * Sets the number of times to retry failed tests.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#retry-tests|Retry Tests}\r\n * @param {number} retry - Number of times to retry failed tests.\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Allow any failed test to retry one more time\r\n * mocha.retries(1);\r\n */", "kind": "function", "description": "Sets the number of times to retry failed tests.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#retry-tests|Retry Tests}"], "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100001264", "name": "Mocha.prototype.retries"}, "columnno": 0, "filename": "mocha.js", "range": [17084, 17168], "lineno": 591, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "description": "Number of times to retry failed tests.", "name": "retry"}], "examples": ["// Allow any failed test to retry one more time\rmocha.retries(1);"], "longname": "Mocha#retries", "scope": "instance", "name": "retries"}, {"comment": "/**\r\n * Sets slowness threshold value.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-s---slow-ms|CLI option}\r\n * @param {number} msecs - Slowness threshold value.\r\n * @return {Mocha} this\r\n * @chainable\r\n * @example\r\n *\r\n * // Sets \"slow\" threshold to half a second\r\n * mocha.slow(500);\r\n * @example\r\n *\r\n * // Same as above but using string argument\r\n * mocha.slow('0.5s');\r\n */", "kind": "function", "description": "Sets slowness threshold value.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#-s---slow-ms|CLI option}"], "meta": {"code": {"paramnames": ["msecs"], "type": "FunctionExpression", "id": "astnode100001284", "name": "Mocha.prototype.slow"}, "columnno": 0, "filename": "mocha.js", "range": [17562, 17648], "lineno": 613, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number"]}, "description": "Slowness threshold value.", "name": "msecs"}], "examples": ["// Sets \"slow\" threshold to half a second\rmocha.slow(500);", "// Same as above but using string argument\rmocha.slow('0.5s');"], "longname": "Mocha#slow", "scope": "instance", "name": "slow"}, {"comment": "/**\r\n * Enables or disables timeouts.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#-t---timeout-ms|CLI option}\r\n * @see {@link https://mochajs.org/#--no-timeouts|CLI option}\r\n * @param {boolean} enableTimeouts - Whether to enable timeouts.\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables or disables timeouts.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "access": "public", "see": ["{@link https://mochajs.org/#-t---timeout-ms|CLI option}", "{@link https://mochajs.org/#--no-timeouts|CLI option}"], "meta": {"code": {"paramnames": ["enableTimeouts"], "type": "FunctionExpression", "id": "astnode100001304", "name": "Mocha.prototype.enableTimeouts"}, "columnno": 0, "filename": "mocha.js", "range": [17947, 18139], "lineno": 628, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "description": "Whether to enable timeouts.", "name": "enableTimeouts"}], "longname": "Mocha#enableTimeouts", "scope": "instance", "name": "enableTimeouts"}, {"comment": "/**\r\n * Forces all tests to either accept a `done` callback or return a promise.\r\n *\r\n * @public\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Forces all tests to either accept a `done` callback or return a promise.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001333", "name": "Mocha.prototype.asyncOnly"}, "vars": {"this.options.asyncOnly": "Mocha#asyncOnly#options.asyncOnly"}, "columnno": 0, "filename": "mocha.js", "range": [18287, 18380], "lineno": 642, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#asyncOnly", "scope": "instance", "name": "asyncOnly"}, {"comment": "/**\r\n * Disables syntax highlighting (in browser).\r\n *\r\n * @public\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Disables syntax highlighting (in browser).", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001352", "name": "Mocha.prototype.noHighlighting"}, "vars": {"this.options.noHighlighting": "Mocha#noHighlighting#options.noHighlighting"}, "columnno": 0, "filename": "mocha.js", "range": [18498, 18601], "lineno": 654, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#noHighlighting", "scope": "instance", "name": "noHighlighting"}, {"comment": "/**\r\n * Enables uncaught errors to propagate (in browser).\r\n *\r\n * @public\r\n * @return {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Enables uncaught errors to propagate (in browser).", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001371", "name": "Mocha.prototype.allowUncaught"}, "vars": {"this.options.allowUncaught": "Mocha#allowUncaught#options.allowUncaught"}, "columnno": 0, "filename": "mocha.js", "range": [18727, 18828], "lineno": 666, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#allowUncaught", "scope": "instance", "name": "allowUncaught"}, {"comment": "/**\r\n * @summary\r\n * Delays root suite execution.\r\n *\r\n * @description\r\n * Used to perform asynch operations before any suites are run.\r\n *\r\n * @public\r\n * @see {@link https://mochajs.org/#delayed-root-suite|delayed root suite}\r\n * @returns {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Used to perform asynch operations before any suites are run.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "summary": "Delays root suite execution.", "access": "public", "see": ["{@link https://mochajs.org/#delayed-root-suite|delayed root suite}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001390", "value": "delay", "name": "Mocha.prototype.delay"}, "vars": {"this.options.delay": "Mocha#delay#options.delay"}, "columnno": 0, "filename": "mocha.js", "range": [19108, 19199], "lineno": 683, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#delay", "scope": "instance", "name": "delay"}, {"comment": "/**\r\n * Causes tests marked `only` to fail the suite.\r\n *\r\n * @public\r\n * @returns {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Causes tests marked `only` to fail the suite.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001410", "name": "Mocha.prototype.forbidOnly"}, "vars": {"this.options.forbidOnly": "Mocha#forbidOnly#options.forbidOnly"}, "columnno": 0, "filename": "mocha.js", "range": [19321, 19416], "lineno": 695, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#forbidOnly", "scope": "instance", "name": "forbidOnly"}, {"comment": "/**\r\n * Causes pending tests and tests marked `skip` to fail the suite.\r\n *\r\n * @public\r\n * @returns {Mocha} this\r\n * @chainable\r\n */", "kind": "function", "description": "Causes pending tests and tests marked `skip` to fail the suite.", "tags": [{"originalTitle": "chainable", "text": "", "title": "chainable"}], "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Mocha"]}, "description": "this"}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001429", "name": "Mocha.prototype.forbidPending"}, "vars": {"this.options.forbidPending": "Mocha#forbidPending#options.forbidPending"}, "columnno": 0, "filename": "mocha.js", "range": [19556, 19657], "lineno": 707, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha#forbidPending", "scope": "instance", "name": "forbidPending"}, {"comment": "/**\r\n * @summary\r\n * Runs tests and invokes `fn()` when complete.\r\n *\r\n * @description\r\n * To run tests multiple times (or to run tests in files that are\r\n * already in the `require` cache), make sure to clear them from\r\n * the cache first!\r\n *\r\n * @public\r\n * @see {@link Mocha#loadFiles}\r\n * @see {@link Runner#run}\r\n * @param {DoneCB} [fn] - Callback invoked when test execution completed.\r\n * @return {Runner} runner instance\r\n */", "kind": "function", "description": "To run tests multiple times (or to run tests in files that are\ralready in the `require` cache), make sure to clear them from\rthe cache first!", "memberof": "Mocha", "returns": [{"type": {"names": ["Runner"]}, "description": "runner instance"}], "summary": "Runs tests and invokes `fn()` when complete.", "access": "public", "see": ["{@link Mocha#loadFiles}", "{@link Runner#run}"], "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100001470", "name": "Mocha.prototype.run"}, "vars": {"runner.allowUncaught": "Mocha#run~runner.allowUncaught", "runner.asyncOnly": "Mocha#run~runner.asyncOnly", "reporter": "Mocha#run~reporter", "options.files": "Mocha#run~options.files", "runner.forbidOnly": "Mocha#run~runner.forbidOnly", "exports.reporters.Base.inlineDiffs": "Mocha#run#reporters.Base.inlineDiffs", "runner.forbidPending": "Mocha#run~runner.forbidPending", "runner": "Mocha#run~runner", "done": "Mocha#run~done", "runner.fullStackTrace": "Mocha#run~runner.fullStackTrace", "exports.reporters.Base.useColors": "Mocha#run#reporters.Base.useColors", "runner.ignoreLeaks": "Mocha#run~runner.ignoreLeaks", "suite": "Mocha#run~suite", "exports.reporters.Base.hideDiff": "Mocha#run#reporters.Base.hideDiff", "options": "Mocha#run~options"}, "columnno": 0, "filename": "mocha.js", "range": [20549, 21735], "lineno": 748, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"optional": true, "type": {"names": ["DoneCB"]}, "description": "Callback invoked when test execution completed.", "name": "fn"}], "longname": "Mocha#run", "scope": "instance", "name": "run"}, {"comment": "", "kind": "function", "name": "done", "memberof": "Mocha#run", "undocumented": true, "meta": {"code": {"paramnames": ["failures"], "type": "FunctionDeclaration", "id": "astnode100001664", "name": "done"}, "columnno": 2, "filename": "mocha.js", "range": [21562, 21702], "lineno": 778, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha#run~done", "scope": "inner"}, {"comment": "/**\r\n * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\r\n * with the same title is already present, that suite is returned to provide\r\n * nicer reporter and more flexible meta-testing.\r\n *\r\n * @memberof Mocha\r\n * @public\r\n * @param {Suite} parent\r\n * @param {string} title\r\n * @return {Suite}\r\n */", "kind": "function", "description": "Create a new `Suite` with the given `title` and parent `Suite`. When a suite\rwith the same title is already present, that suite is returned to provide\rnicer reporter and more flexible meta-testing.", "memberof": "Mocha", "access": "public", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"paramnames": ["parent", "title"], "type": "FunctionExpression", "id": "astnode100000053", "name": "exports.create"}, "vars": {"suite": "Mocha.exports.create~suite", "suite.parent": "Mocha.exports.create~suite.parent", "title": "module:Suite~title"}, "columnno": 0, "filename": "suite.js", "range": [708, 898], "lineno": 33, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "parent"}, {"type": {"names": ["string"]}, "name": "title"}], "longname": "Mocha.exports.create", "scope": "static", "name": "exports.create"}, {"comment": "", "kind": "function", "name": "Context", "memberof": "Mocha.Suite", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000119", "name": "Context"}, "columnno": 2, "filename": "suite.js", "range": [1415, 1436], "lineno": 59, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [], "longname": "Mocha.Suite~Context", "scope": "inner"}, {"comment": "/**\r\n * Return a clone of this `Suite`.\r\n *\r\n * @private\r\n * @return {Suite}\r\n */", "kind": "function", "description": "Return a clone of this `Suite`.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000239", "name": "Suite.prototype.clone"}, "vars": {"suite.ctx": "Mocha.Suite#clone~suite.ctx", "suite": "Mocha.Suite#clone~suite"}, "columnno": 0, "filename": "suite.js", "range": [2068, 2378], "lineno": 91, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite#clone", "scope": "instance", "name": "clone"}, {"comment": "/**\r\n * Set or get timeout `ms` or short-hand such as \"2s\".\r\n *\r\n * @private\r\n * @param {number|string} ms\r\n * @return {Suite|number} for chaining\r\n */", "kind": "function", "description": "Set or get timeout `ms` or short-hand such as \"2s\".", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite", "number"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000315", "name": "Suite.prototype.timeout"}, "vars": {"this._enableTimeouts": "Mocha.Suite#_enableTimeouts", "ms": "module:Suite~ms", "this._timeout": "Mocha.Suite#_timeout"}, "columnno": 0, "filename": "suite.js", "range": [2536, 2858], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "name": "ms"}], "longname": "Mocha.Suite#timeout", "scope": "instance", "name": "timeout"}, {"comment": "/**\r\n * Set or get number of times to retry a failed test.\r\n *\r\n * @private\r\n * @param {number|string} n\r\n * @return {Suite|number} for chaining\r\n */", "kind": "function", "description": "Set or get number of times to retry a failed test.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite", "number"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000377", "name": "Suite.prototype.retries"}, "vars": {"this._retries": "Mocha.Suite#_retries"}, "columnno": 0, "filename": "suite.js", "range": [3014, 3200], "lineno": 132, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "name": "n"}], "longname": "Mocha.Suite#retries", "scope": "instance", "name": "retries"}, {"comment": "/**\r\n * Set or get timeout to `enabled`.\r\n *\r\n * @private\r\n * @param {boolean} enabled\r\n * @return {Suite|boolean} self or enabled\r\n */", "kind": "function", "description": "Set or get timeout to `enabled`.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite", "boolean"]}, "description": "self or enabled"}], "meta": {"code": {"paramnames": ["enabled"], "type": "FunctionExpression", "id": "astnode100000415", "name": "Suite.prototype.enableTimeouts"}, "vars": {"this._enableTimeouts": "Mocha.Suite#_enableTimeouts"}, "columnno": 0, "filename": "suite.js", "range": [3342, 3555], "lineno": 148, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "name": "enabled"}], "longname": "Mocha.Suite#enableTimeouts", "scope": "instance", "name": "enableTimeouts"}, {"comment": "/**\r\n * Set or get slow `ms` or short-hand such as \"2s\".\r\n *\r\n * @private\r\n * @param {number|string} ms\r\n * @return {Suite|number} for chaining\r\n */", "kind": "function", "description": "Set or get slow `ms` or short-hand such as \"2s\".", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite", "number"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["ms"], "type": "FunctionExpression", "id": "astnode100000448", "name": "Suite.prototype.slow"}, "vars": {"this._slow": "Mocha.Suite#_slow", "ms": "module:Suite~ms"}, "columnno": 0, "filename": "suite.js", "range": [3710, 3934], "lineno": 164, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["number", "string"]}, "name": "ms"}], "longname": "Mocha.Suite#slow", "scope": "instance", "name": "slow"}, {"comment": "/**\r\n * Set or get whether to bail after first error.\r\n *\r\n * @private\r\n * @param {boolean} bail\r\n * @return {Suite|number} for chaining\r\n */", "kind": "function", "description": "Set or get whether to bail after first error.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite", "number"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["bail"], "type": "FunctionExpression", "id": "astnode100000493", "name": "Suite.prototype.bail"}, "vars": {"this._bail": "Mocha.Suite#_bail"}, "columnno": 0, "filename": "suite.js", "range": [4082, 4246], "lineno": 183, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["boolean"]}, "name": "bail"}], "longname": "Mocha.Suite#bail", "scope": "instance", "name": "bail"}, {"comment": "/**\r\n * Check if this suite or its parent suite is marked as pending.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Check if this suite or its parent suite is marked as pending.", "memberof": "Mocha.Suite", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000526", "name": "Suite.prototype.isPending"}, "columnno": 0, "filename": "suite.js", "range": [4344, 4455], "lineno": 197, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite#isPending", "scope": "instance", "name": "isPending"}, {"comment": "/**\r\n * Generic hook-creator.\r\n * @private\r\n * @param {string} title - Title of hook\r\n * @param {Function} fn - Hook callback\r\n * @returns {Hook} A new hook\r\n */", "kind": "function", "description": "Generic hook-creator.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Hook"]}, "description": "A new hook"}], "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000550", "name": "Suite.prototype._createHook"}, "vars": {"hook": "Mocha.Suite#_createHook~hook", "hook.parent": "Mocha.Suite#_createHook~hook.parent", "hook.ctx": "Mocha.Suite#_createHook~hook.ctx", "hook.file": "Mocha.Suite#_createHook~hook.file"}, "columnno": 0, "filename": "suite.js", "range": [4623, 4941], "lineno": 208, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "description": "Title of hook", "name": "title"}, {"type": {"names": ["function"]}, "description": "Hook callback", "name": "fn"}], "longname": "Mocha.Suite#_createHook", "scope": "instance", "name": "_createHook"}, {"comment": "/**\r\n * Run `fn(test[, done])` before running tests.\r\n *\r\n * @private\r\n * @param {string} title\r\n * @param {Function} fn\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Run `fn(test[, done])` before running tests.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000628", "name": "Suite.prototype.beforeAll"}, "vars": {"hook": "Mocha.Suite#beforeAll~hook", "fn": "module:Suite~fn", "title": "module:Suite~title"}, "columnno": 0, "filename": "suite.js", "range": [5106, 5477], "lineno": 228, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "title"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Suite#beforeAll", "scope": "instance", "name": "beforeAll"}, {"comment": "/**\r\n * Run `fn(test[, done])` after running tests.\r\n *\r\n * @private\r\n * @param {string} title\r\n * @param {Function} fn\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Run `fn(test[, done])` after running tests.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000700", "name": "Suite.prototype.afterAll"}, "vars": {"hook": "Mocha.Suite#afterAll~hook", "fn": "module:Suite~fn", "title": "module:Suite~title"}, "columnno": 0, "filename": "suite.js", "range": [5641, 6008], "lineno": 252, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "title"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Suite#afterAll", "scope": "instance", "name": "afterAll"}, {"comment": "/**\r\n * Run `fn(test[, done])` before each test case.\r\n *\r\n * @private\r\n * @param {string} title\r\n * @param {Function} fn\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Run `fn(test[, done])` before each test case.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000772", "name": "Suite.prototype.beforeEach"}, "vars": {"hook": "Mocha.Suite#beforeEach~hook", "fn": "module:Suite~fn", "title": "module:Suite~title"}, "columnno": 0, "filename": "suite.js", "range": [6174, 6549], "lineno": 276, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "title"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Suite#beforeEach", "scope": "instance", "name": "beforeEach"}, {"comment": "/**\r\n * Run `fn(test[, done])` after each test case.\r\n *\r\n * @private\r\n * @param {string} title\r\n * @param {Function} fn\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Run `fn(test[, done])` after each test case.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000844", "name": "Suite.prototype.afterEach"}, "vars": {"hook": "Mocha.Suite#afterEach~hook", "fn": "module:Suite~fn", "title": "module:Suite~title"}, "columnno": 0, "filename": "suite.js", "range": [6714, 7085], "lineno": 300, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["string"]}, "name": "title"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Suite#afterEach", "scope": "instance", "name": "afterEach"}, {"comment": "/**\r\n * Add a test `suite`.\r\n *\r\n * @private\r\n * @param {Suite} suite\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Add a test `suite`.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000916", "name": "Suite.prototype.addSuite"}, "vars": {"suite.parent": "module:Suite~suite.parent"}, "columnno": 0, "filename": "suite.js", "range": [7199, 7516], "lineno": 323, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Suite"]}, "name": "suite"}], "longname": "Mocha.Suite#addSuite", "scope": "instance", "name": "addSuite"}, {"comment": "/**\r\n * Add a `test` to this suite.\r\n *\r\n * @private\r\n * @param {Test} test\r\n * @return {Suite} for chaining\r\n */", "kind": "function", "description": "Add a `test` to this suite.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}, "description": "for chaining"}], "meta": {"code": {"paramnames": ["test"], "type": "FunctionExpression", "id": "astnode100000994", "name": "Suite.prototype.addTest"}, "vars": {"test.parent": "module:Suite~test.parent", "test.ctx": "module:Suite~test.ctx"}, "columnno": 0, "filename": "suite.js", "range": [7636, 7938], "lineno": 342, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["Test"]}, "name": "test"}], "longname": "Mocha.Suite#addTest", "scope": "instance", "name": "addTest"}, {"comment": "/**\r\n * Return the full title generated by recursively concatenating the parent's\r\n * full title.\r\n *\r\n * @memberof Mocha.Suite\r\n * @public\r\n * @return {string}\r\n */", "kind": "function", "description": "Return the full title generated by recursively concatenating the parent's\rfull title.", "memberof": "Mocha.Suite", "access": "public", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001071", "name": "Suite.prototype.fullTitle"}, "columnno": 0, "filename": "suite.js", "range": [8110, 8191], "lineno": 362, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite.Suite#fullTitle", "scope": "static", "name": "Suite#fullTitle"}, {"comment": "/**\r\n * Return the title path generated by recursively concatenating the parent's\r\n * title path.\r\n *\r\n * @memberof Mocha.Suite\r\n * @public\r\n * @return {string}\r\n */", "kind": "function", "description": "Return the title path generated by recursively concatenating the parent's\rtitle path.", "memberof": "Mocha.Suite", "access": "public", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001089", "name": "Suite.prototype.titlePath"}, "vars": {"result": "module:Suite~result"}, "columnno": 0, "filename": "suite.js", "range": [8363, 8581], "lineno": 374, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite.Suite#titlePath", "scope": "static", "name": "Suite#titlePath"}, {"comment": "/**\r\n * Return the total number of tests.\r\n *\r\n * @memberof Mocha.Suite\r\n * @public\r\n * @return {number}\r\n */", "kind": "function", "description": "Return the total number of tests.", "memberof": "Mocha.Suite", "access": "public", "returns": [{"type": {"names": ["number"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001136", "name": "Suite.prototype.total"}, "vars": {"": null}, "columnno": 0, "filename": "suite.js", "range": [8697, 8867], "lineno": 392, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite.Suite#total", "scope": "static", "name": "Suite#total"}, {"comment": "/**\r\n * Iterates through each suite recursively to find all tests. Applies a\r\n * function in the format `fn(test)`.\r\n *\r\n * @private\r\n * @param {Function} fn\r\n * @return {Suite}\r\n */", "kind": "function", "description": "Iterates through each suite recursively to find all tests. Applies a\rfunction in the format `fn(test)`.", "memberof": "Mocha.Suite", "access": "private", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"paramnames": ["fn"], "type": "FunctionExpression", "id": "astnode100001170", "name": "Suite.prototype.eachTest"}, "vars": {"": null}, "columnno": 0, "filename": "suite.js", "range": [9056, 9216], "lineno": 408, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "params": [{"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.Suite#eachTest", "scope": "instance", "name": "eachTest"}, {"comment": "/**\r\n * This will run the root suite if we happen to be running in delayed mode.\r\n */", "kind": "function", "description": "This will run the root suite if we happen to be running in delayed mode.", "memberof": "Mocha.Suite", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100001206", "value": "run", "name": "Suite.prototype.run"}, "columnno": 0, "filename": "suite.js", "range": [9308, 9397], "lineno": 419, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib"}, "longname": "Mocha.Suite#run", "scope": "instance", "name": "run"}, {"comment": "", "kind": "function", "name": "appendToStack", "memberof": "Mocha.reporters.HTML", "undocumented": true, "meta": {"code": {"paramnames": ["el"], "type": "FunctionDeclaration", "id": "astnode100000791", "name": "appendToStack"}, "columnno": 2, "filename": "html.js", "range": [5859, 6041], "lineno": 220, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.HTML~appendToStack", "scope": "inner"}, {"comment": "", "kind": "function", "name": "updateStats", "memberof": "Mocha.reporters.HTML", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000808", "name": "updateStats"}, "vars": {"percent": "Mocha.reporters.HTML~updateStats~percent", "ms": "Mocha.reporters.HTML~updateStats~ms"}, "columnno": 2, "filename": "html.js", "range": [6047, 6413], "lineno": 227, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.HTML~updateStats", "scope": "inner"}, {"comment": "/**\r\n * Makes a URL, preserving querystring (\"search\") parameters.\r\n *\r\n * @param {string} s\r\n * @return {string} A new URL.\r\n */", "kind": "function", "description": "Makes a URL, preserving querystring (\"search\") parameters.", "memberof": "module:HTML", "returns": [{"type": {"names": ["string"]}, "description": "A new URL."}], "meta": {"code": {"paramnames": ["s"], "type": "FunctionDeclaration", "id": "astnode100000872", "name": "makeUrl"}, "vars": {"search": "module:HTML~search"}, "columnno": 0, "filename": "html.js", "range": [6551, 6908], "lineno": 248, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "s"}], "longname": "module:HTML~makeUrl", "scope": "inner", "name": "makeUrl"}, {"comment": "/**\r\n * Provide suite URL.\r\n *\r\n * @param {Object} [suite]\r\n */", "kind": "function", "description": "Provide suite URL.", "memberof": "Mocha.reporters.HTML", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000923", "name": "HTML.prototype.suiteURL"}, "columnno": 0, "filename": "html.js", "range": [6977, 7061], "lineno": 269, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "name": "suite"}], "longname": "Mocha.reporters.HTML#suiteURL", "scope": "instance", "name": "suiteURL"}, {"comment": "/**\r\n * Provide test URL.\r\n *\r\n * @param {Object} [test]\r\n */", "kind": "function", "description": "Provide test URL.", "memberof": "Mocha.reporters.HTML", "meta": {"code": {"paramnames": ["test"], "type": "FunctionExpression", "id": "astnode100000940", "name": "HTML.prototype.testURL"}, "columnno": 0, "filename": "html.js", "range": [7129, 7210], "lineno": 278, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "name": "test"}], "longname": "Mocha.reporters.HTML#testURL", "scope": "instance", "name": "testURL"}, {"comment": "/**\r\n * Adds code toggle functionality for the provided test's list element.\r\n *\r\n * @param {HTMLLIElement} el\r\n * @param {string} contents\r\n */", "kind": "function", "description": "Adds code toggle functionality for the provided test's list element.", "memberof": "Mocha.reporters.HTML", "meta": {"code": {"paramnames": ["el", "contents"], "type": "FunctionExpression", "id": "astnode100000957", "name": "HTML.prototype.addCodeToggle"}, "vars": {"h2": "Mocha.reporters.HTML#addCodeToggle~h2", "": null, "pre": "Mocha.reporters.HTML#addCodeToggle~pre", "pre.style.display": "Mocha.reporters.HTML#addCodeToggle~pre.style.display"}, "columnno": 0, "filename": "html.js", "range": [7361, 7713], "lineno": 288, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["HTMLLIElement"]}, "name": "el"}, {"type": {"names": ["string"]}, "name": "contents"}], "longname": "Mocha.reporters.HTML#addCodeToggle", "scope": "instance", "name": "addCodeToggle"}, {"comment": "/**\r\n * Display error `msg`.\r\n *\r\n * @param {string} msg\r\n */", "kind": "function", "description": "Display error `msg`.", "memberof": "module:HTML", "meta": {"code": {"paramnames": ["msg"], "type": "FunctionDeclaration", "id": "astnode100001026", "name": "error"}, "columnno": 0, "filename": "html.js", "range": [7781, 7884], "lineno": 305, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "msg"}], "longname": "module:HTML~error", "scope": "inner", "name": "error"}, {"comment": "/**\r\n * Return a DOM fragment from `html`.\r\n *\r\n * @param {string} html\r\n */", "kind": "function", "description": "Return a DOM fragment from `html`.", "memberof": "module:HTML", "meta": {"code": {"paramnames": ["html"], "type": "FunctionDeclaration", "id": "astnode100001041", "name": "fragment"}, "vars": {"i": "module:HTML~fragment~i", "div.innerHTML": "module:HTML~fragment~div.innerHTML", "div": "module:HTML~fragment~div", "args": "module:HTML~fragment~args", "": null}, "columnno": 0, "filename": "html.js", "range": [7966, 8331], "lineno": 314, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "html"}], "longname": "module:HTML~fragment", "scope": "inner", "name": "fragment"}, {"comment": "/**\r\n * Check for suites that do not have elements\r\n * with `classname`, and hide them.\r\n *\r\n * @param {text} classname\r\n */", "kind": "function", "description": "Check for suites that do not have elements\rwith `classname`, and hide them.", "memberof": "module:HTML", "meta": {"code": {"paramnames": ["classname"], "type": "FunctionDeclaration", "id": "astnode100001099", "name": "hideSuitesWithout"}, "vars": {"i": "module:HTML~hideSuitesWithout~i", "suites": "module:HTML~hideSuitesWithout~suites", "suites[undefined].className": "module:HTML~hideSuitesWithout~suites.undefined].className", "els": "module:HTML~hideSuitesWithout~els"}, "columnno": 0, "filename": "html.js", "range": [8461, 8743], "lineno": 338, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["text"]}, "name": "classname"}], "longname": "module:HTML~hideSuitesWithout", "scope": "inner", "name": "hideSuitesWithout"}, {"comment": "/**\r\n * Unhide .hidden suites.\r\n */", "kind": "function", "description": "Unhide .hidden suites.", "memberof": "module:HTML", "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100001148", "name": "unhide"}, "vars": {"i": "module:HTML~unhide~i", "els": "module:HTML~unhide~els", "els[undefined].className": "module:HTML~unhide~els.undefined].className"}, "columnno": 0, "filename": "html.js", "range": [8784, 8990], "lineno": 351, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:HTML~unhide", "scope": "inner", "name": "unhide"}, {"comment": "/**\r\n * Set an element's text contents.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} contents\r\n */", "kind": "function", "description": "Set an element's text contents.", "memberof": "module:HTML", "meta": {"code": {"paramnames": ["el", "contents"], "type": "FunctionDeclaration", "id": "astnode100001189", "name": "text"}, "vars": {"el.textContent": "module:HTML~el.textContent", "el.innerText": "module:HTML~el.innerText"}, "columnno": 0, "filename": "html.js", "range": [9101, 9237], "lineno": 364, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["HTMLElement"]}, "name": "el"}, {"type": {"names": ["string"]}, "name": "contents"}], "longname": "module:HTML~text", "scope": "inner", "name": "text"}, {"comment": "/**\r\n * Listen on `event` with callback `fn`.\r\n */", "kind": "function", "description": "Listen on `event` with callback `fn`.", "memberof": "module:HTML", "meta": {"code": {"paramnames": ["el", "event", "fn"], "type": "FunctionDeclaration", "id": "astnode100001212", "name": "on"}, "columnno": 0, "filename": "html.js", "range": [9293, 9454], "lineno": 375, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:HTML~on", "scope": "inner", "name": "on"}, {"comment": "/**\r\n * Override done to close the stream (if it's a file).\r\n *\r\n * @param failures\r\n * @param {Function} fn\r\n */", "kind": "function", "description": "Override done to close the stream (if it's a file).", "memberof": "Mocha.reporters.XUnit", "meta": {"code": {"paramnames": ["failures", "fn"], "type": "FunctionExpression", "id": "astnode100000286", "name": "XUnit.prototype.done"}, "vars": {"": null}, "columnno": 0, "filename": "xunit.js", "range": [2471, 2651], "lineno": 115, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"name": "failures"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "Mocha.reporters.XUnit#done", "scope": "instance", "name": "done"}, {"comment": "/**\r\n * Write out the given line.\r\n *\r\n * @param {string} line\r\n */", "kind": "function", "description": "Write out the given line.", "memberof": "Mocha.reporters.XUnit", "meta": {"code": {"paramnames": ["line"], "type": "FunctionExpression", "id": "astnode100000320", "name": "XUnit.prototype.write"}, "columnno": 0, "filename": "xunit.js", "range": [2725, 2979], "lineno": 130, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "line"}], "longname": "Mocha.reporters.XUnit#write", "scope": "instance", "name": "write"}, {"comment": "/**\r\n * Output tag for the given `test.`\r\n *\r\n * @param {Test} test\r\n */", "kind": "function", "description": "Output tag for the given `test.`", "memberof": "Mocha.reporters.XUnit", "meta": {"code": {"paramnames": ["test"], "type": "FunctionExpression", "id": "astnode100000372", "name": "XUnit.prototype.test"}, "vars": {"diff": "Mocha.reporters.XUnit#test~diff", "Base.useColors": "module:XUnit~Base.useColors", "attrs": "Mocha.reporters.XUnit#test~attrs", "err": "Mocha.reporters.XUnit#test~err"}, "columnno": 0, "filename": "xunit.js", "range": [3058, 3884], "lineno": 145, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Test"]}, "name": "test"}], "longname": "Mocha.reporters.XUnit#test", "scope": "instance", "name": "test"}, {"comment": "/**\r\n * HTML tag helper.\r\n *\r\n * @param name\r\n * @param attrs\r\n * @param close\r\n * @param content\r\n * @return {string}\r\n */", "kind": "function", "description": "HTML tag helper.", "memberof": "module:XUnit", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["name", "attrs", "close", "content"], "type": "FunctionDeclaration", "id": "astnode100000517", "name": "tag"}, "vars": {"pairs": "module:XUnit~tag~pairs", "tag": "module:XUnit~tag.tag", "end": "module:XUnit~tag~end", "key": "module:XUnit~tag~key"}, "columnno": 0, "filename": "xunit.js", "range": [4014, 4439], "lineno": 189, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"name": "name"}, {"name": "attrs"}, {"name": "close"}, {"name": "content"}], "longname": "module:XUnit~tag", "scope": "inner", "name": "tag"}, {"comment": "", "kind": "function", "name": "runway", "memberof": "Mocha.reporters.Landing", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000117", "name": "runway"}, "vars": {"buf": "Mocha.reporters.Landing~runway~buf"}, "columnno": 2, "filename": "landing.js", "range": [906, 1010], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Landing~runway", "scope": "inner"}, {"comment": "", "kind": "function", "name": "indent", "memberof": "Mocha.reporters.Spec", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000055", "name": "indent"}, "columnno": 2, "filename": "spec.js", "range": [534, 597], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Spec~indent", "scope": "inner"}, {"comment": "", "kind": "function", "name": "NyanCat", "memberof": "module:Nyan", "undocumented": true, "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000026", "name": "NyanCat"}, "vars": {"": null, "this.nyanCatWidth": "module:Nyan~NyanCat#nyanCatWidth", "this.colorIndex": "module:Nyan~NyanCat#colorIndex", "this.numberOfLines": "module:Nyan~NyanCat#numberOfLines", "self": "module:Nyan~NyanCat~self", "this.trajectoryWidthMax": "module:Nyan~NyanCat#trajectoryWidthMax", "this.tick": "module:Nyan~NyanCat#tick", "width": "module:Nyan~NyanCat~width", "this.scoreboardWidth": "module:Nyan~NyanCat#scoreboardWidth", "this.rainbowColors": "module:Nyan~NyanCat#rainbowColors", "this.trajectories": "module:Nyan~NyanCat#trajectories", "nyanCatWidth": "module:Nyan~NyanCat~nyanCatWidth"}, "columnno": 0, "filename": "nyan.js", "range": [411, 1267], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Nyan~NyanCat", "scope": "inner"}, {"comment": "/**\r\n * Draw the nyan cat\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Draw the nyan cat", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000214", "name": "NyanCat.prototype.draw"}, "vars": {"this.tick": "module:Nyan~NyanCat#draw#tick"}, "columnno": 0, "filename": "nyan.js", "range": [1395, 1559], "lineno": 80, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#draw", "scope": "instance", "name": "draw"}, {"comment": "/**\r\n * Draw the \"scoreboard\" showing the number\r\n * of passes, failures and pending tests.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Draw the \"scoreboard\" showing the number\rof passes, failures and pending tests.", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000252", "name": "NyanCat.prototype.drawScoreboard"}, "vars": {"draw": "module:Nyan~NyanCat#drawScoreboard~draw", "stats": "module:Nyan~NyanCat#drawScoreboard~stats"}, "columnno": 0, "filename": "nyan.js", "range": [1681, 2019], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#drawScoreboard", "scope": "instance", "name": "drawScoreboard"}, {"comment": "", "kind": "function", "name": "draw", "memberof": "module:Nyan~NyanCat#drawScoreboard", "undocumented": true, "meta": {"code": {"paramnames": ["type", "n"], "type": "FunctionDeclaration", "id": "astnode100000266", "name": "draw"}, "columnno": 2, "filename": "nyan.js", "range": [1761, 1858], "lineno": 98, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Nyan~NyanCat#drawScoreboard~draw", "scope": "inner"}, {"comment": "/**\r\n * Append the rainbow.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Append the rainbow.", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000322", "name": "NyanCat.prototype.appendRainbow"}, "vars": {"index": "module:Nyan~NyanCat#appendRainbow~index", "rainbowified": "module:Nyan~NyanCat#appendRainbow~rainbowified", "segment": "module:Nyan~NyanCat#appendRainbow~segment", "trajectory": "module:Nyan~NyanCat#appendRainbow~trajectory"}, "columnno": 0, "filename": "nyan.js", "range": [2077, 2458], "lineno": 118, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#appendRainbow", "scope": "instance", "name": "appendRainbow"}, {"comment": "/**\r\n * Draw the rainbow.\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Draw the rainbow.", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000389", "name": "NyanCat.prototype.drawRainbow"}, "vars": {"": null, "self": "module:Nyan~NyanCat#drawRainbow~self"}, "columnno": 0, "filename": "nyan.js", "range": [2514, 2773], "lineno": 137, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#drawRainbow", "scope": "instance", "name": "drawRainbow"}, {"comment": "/**\r\n * Draw the nyan cat\r\n *\r\n * @private\r\n */", "kind": "function", "description": "Draw the nyan cat", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000442", "name": "NyanCat.prototype.drawNyanCat"}, "vars": {"padding": "module:Nyan~padding", "self": "module:Nyan~NyanCat#drawNyanCat~self", "tail": "module:Nyan~NyanCat#drawNyanCat~tail", "dist": "module:Nyan~NyanCat#drawNyanCat~dist", "startWidth": "module:Nyan~NyanCat#drawNyanCat~startWidth"}, "columnno": 0, "filename": "nyan.js", "range": [2827, 3502], "lineno": 154, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#drawNyanCat", "scope": "instance", "name": "drawNyanCat"}, {"comment": "/**\r\n * Draw nyan cat face.\r\n *\r\n * @private\r\n * @return {string}\r\n */", "kind": "function", "description": "Draw nyan cat face.", "memberof": "module:Nyan~NyanCat", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000590", "name": "NyanCat.prototype.face"}, "vars": {"stats": "module:Nyan~NyanCat#face~stats"}, "columnno": 0, "filename": "nyan.js", "range": [3581, 3829], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#face", "scope": "instance", "name": "face"}, {"comment": "/**\r\n * Move cursor up `n`.\r\n *\r\n * @private\r\n * @param {number} n\r\n */", "kind": "function", "description": "Move cursor up `n`.", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000628", "name": "NyanCat.prototype.cursorUp"}, "columnno": 0, "filename": "nyan.js", "range": [3909, 3985], "lineno": 209, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "name": "n"}], "longname": "module:Nyan~NyanCat#cursorUp", "scope": "instance", "name": "cursorUp"}, {"comment": "/**\r\n * Move cursor down `n`.\r\n *\r\n * @private\r\n * @param {number} n\r\n */", "kind": "function", "description": "Move cursor down `n`.", "memberof": "module:Nyan~NyanCat", "access": "private", "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000646", "name": "NyanCat.prototype.cursorDown"}, "columnno": 0, "filename": "nyan.js", "range": [4067, 4145], "lineno": 220, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "name": "n"}], "longname": "module:Nyan~NyanCat#cursorDown", "scope": "instance", "name": "cursorDown"}, {"comment": "/**\r\n * Generate rainbow colors.\r\n *\r\n * @private\r\n * @return {Array}\r\n */", "kind": "function", "description": "Generate rainbow colors.", "memberof": "module:Nyan~NyanCat", "access": "private", "returns": [{"type": {"names": ["Array"]}}], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000664", "name": "NyanCat.prototype.generateColors"}, "vars": {"b": "module:Nyan~NyanCat#generateColors~b", "g": "module:Nyan~NyanCat#generateColors~g", "i": "module:Nyan~NyanCat#generateColors~i", "n": "module:Nyan~NyanCat#generateColors~n", "colors": "module:Nyan~NyanCat#generateColors~colors", "r": "module:Nyan~NyanCat#generateColors~r", "pi3": "module:Nyan~NyanCat#generateColors~pi3"}, "columnno": 0, "filename": "nyan.js", "range": [4226, 4629], "lineno": 230, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Nyan~NyanCat#generateColors", "scope": "instance", "name": "generateColors"}, {"comment": "/**\r\n * Apply rainbow to the given `str`.\r\n *\r\n * @private\r\n * @param {string} str\r\n * @return {string}\r\n */", "kind": "function", "description": "Apply rainbow to the given `str`.", "memberof": "module:Nyan~NyanCat", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["str"], "type": "FunctionExpression", "id": "astnode100000784", "name": "NyanCat.prototype.rainbowify"}, "vars": {"color": "module:Nyan~NyanCat#rainbowify~color", "this.colorIndex": "module:Nyan~NyanCat#rainbowify#colorIndex"}, "columnno": 0, "filename": "nyan.js", "range": [4744, 5006], "lineno": 252, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "str"}], "longname": "module:Nyan~NyanCat#rainbowify", "scope": "instance", "name": "rainbowify"}, {"comment": "/**\r\n * Stdout helper.\r\n *\r\n * @param {string} string A message to write to stdout.\r\n */", "kind": "function", "description": "Stdout helper.", "memberof": "module:Nyan", "meta": {"code": {"paramnames": ["string"], "type": "FunctionDeclaration", "id": "astnode100000833", "name": "write"}, "columnno": 0, "filename": "nyan.js", "range": [5101, 5161], "lineno": 266, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "description": "A message to write to stdout.", "name": "string"}], "longname": "module:Nyan~write", "scope": "inner", "name": "write"}, {"comment": "/**\r\n * Returns a TAP-safe title of `test`.\r\n *\r\n * @private\r\n * @param {Test} test - Test instance.\r\n * @return {String} title with any hash character removed\r\n */", "kind": "function", "description": "Returns a TAP-safe title of `test`.", "memberof": "module:TAP", "access": "private", "returns": [{"type": {"names": ["String"]}, "description": "title with any hash character removed"}], "meta": {"code": {"paramnames": ["test"], "type": "FunctionDeclaration", "id": "astnode100000219", "name": "title"}, "columnno": 0, "filename": "tap.js", "range": [1762, 1833], "lineno": 84, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Test"]}, "description": "Test instance.", "name": "test"}], "longname": "module:TAP~title", "scope": "inner", "name": "title"}, {"comment": "/**\r\n * Writes newline-terminated formatted string to reporter output stream.\r\n *\r\n * @private\r\n * @param {string} format - `printf`-like format string\r\n * @param {...*} [varArgs] - Format string arguments\r\n */", "kind": "function", "description": "Writes newline-terminated formatted string to reporter output stream.", "memberof": "module:TAP", "access": "private", "meta": {"code": {"paramnames": ["format", "varArgs"], "type": "FunctionDeclaration", "id": "astnode100000233", "name": "println"}, "vars": {"vargs": "module:TAP~println~vargs", "vargs[0]": "module:TAP~println~vargs.0]"}, "columnno": 0, "filename": "tap.js", "range": [2049, 2199], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "description": "`printf`-like format string", "name": "format"}, {"variable": true, "optional": true, "type": {"names": ["*"]}, "description": "Format string arguments", "name": "varArgs"}], "longname": "module:TAP~println", "scope": "inner", "name": "println"}, {"comment": "/**\r\n * Returns a `tapVersion`-appropriate TAP producer instance, if possible.\r\n *\r\n * @private\r\n * @param {string} tapVersion - Version of TAP specification to produce.\r\n * @returns {TAPProducer} specification-appropriate instance\r\n * @throws {Error} if specification version has no associated producer.\r\n */", "kind": "function", "description": "Returns a `tapVersion`-appropriate TAP producer instance, if possible.", "memberof": "module:TAP", "access": "private", "returns": [{"type": {"names": ["TAPProducer"]}, "description": "specification-appropriate instance"}], "meta": {"code": {"paramnames": ["tapVersion"], "type": "FunctionDeclaration", "id": "astnode100000265", "name": "createProducer"}, "vars": {"producers": "module:TAP~createProducer~producers", "producer": "module:TAP~createProducer~producer"}, "columnno": 0, "filename": "tap.js", "range": [2514, 2839], "lineno": 109, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "description": "Version of TAP specification to produce.", "name": "tapVersion"}], "longname": "module:TAP~createProducer", "exceptions": [{"type": {"names": ["Error"]}, "description": "if specification version has no associated producer."}], "scope": "inner", "name": "createProducer"}, {"comment": "/**\r\n * Writes the TAP version to reporter output stream.\r\n *\r\n * @abstract\r\n */", "kind": "function", "description": "Writes the TAP version to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000305", "name": "TAPProducer.prototype.writeVersion"}, "columnno": 0, "filename": "tap.js", "range": [3122, 3172], "lineno": 142, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:TAP~TAPProducer#writeVersion", "scope": "instance", "name": "writeVersion"}, {"comment": "/**\r\n * Writes the plan to reporter output stream.\r\n *\r\n * @abstract\r\n * @param {number} ntests - Number of tests that are planned to run.\r\n */", "kind": "function", "description": "Writes the plan to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": ["ntests"], "type": "FunctionExpression", "id": "astnode100000314", "name": "TAPProducer.prototype.writePlan"}, "columnno": 0, "filename": "tap.js", "range": [3322, 3410], "lineno": 150, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "description": "Number of tests that are planned to run.", "name": "ntests"}], "longname": "module:TAP~TAPProducer#writePlan", "scope": "instance", "name": "writePlan"}, {"comment": "/**\r\n * Writes that test passed to reporter output stream.\r\n *\r\n * @abstract\r\n * @param {number} n - Index of test that passed.\r\n * @param {Test} test - Instance containing test information.\r\n */", "kind": "function", "description": "Writes that test passed to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": ["n", "test"], "type": "FunctionExpression", "id": "astnode100000330", "name": "TAPProducer.prototype.writePass"}, "columnno": 0, "filename": "tap.js", "range": [3612, 3708], "lineno": 161, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "description": "Index of test that passed.", "name": "n"}, {"type": {"names": ["Test"]}, "description": "Instance containing test information.", "name": "test"}], "longname": "module:TAP~TAPProducer#writePass", "scope": "instance", "name": "writePass"}, {"comment": "/**\r\n * Writes that test was skipped to reporter output stream.\r\n *\r\n * @abstract\r\n * @param {number} n - Index of test that was skipped.\r\n * @param {Test} test - Instance containing test information.\r\n */", "kind": "function", "description": "Writes that test was skipped to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": ["n", "test"], "type": "FunctionExpression", "id": "astnode100000349", "name": "TAPProducer.prototype.writePending"}, "columnno": 0, "filename": "tap.js", "range": [3920, 4028], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "description": "Index of test that was skipped.", "name": "n"}, {"type": {"names": ["Test"]}, "description": "Instance containing test information.", "name": "test"}], "longname": "module:TAP~TAPProducer#writePending", "scope": "instance", "name": "writePending"}, {"comment": "/**\r\n * Writes that test failed to reporter output stream.\r\n *\r\n * @abstract\r\n * @param {number} n - Index of test that failed.\r\n * @param {Test} test - Instance containing test information.\r\n * @param {Error} err - Reason the test failed.\r\n */", "kind": "function", "description": "Writes that test failed to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": ["n", "test", "err"], "type": "FunctionExpression", "id": "astnode100000368", "name": "TAPProducer.prototype.writeFail"}, "columnno": 0, "filename": "tap.js", "range": [4279, 4384], "lineno": 184, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["number"]}, "description": "Index of test that failed.", "name": "n"}, {"type": {"names": ["Test"]}, "description": "Instance containing test information.", "name": "test"}, {"type": {"names": ["Error"]}, "description": "Reason the test failed.", "name": "err"}], "longname": "module:TAP~TAPProducer#writeFail", "scope": "instance", "name": "writeFail"}, {"comment": "/**\r\n * Writes the summary epilogue to reporter output stream.\r\n *\r\n * @abstract\r\n * @param {Object} stats - Object containing run statistics.\r\n */", "kind": "function", "description": "Writes the summary epilogue to reporter output stream.", "memberof": "module:TAP~TAPProducer", "virtual": true, "meta": {"code": {"paramnames": ["stats"], "type": "FunctionExpression", "id": "astnode100000388", "name": "TAPProducer.prototype.writeEpilogue"}, "columnno": 0, "filename": "tap.js", "range": [4538, 4836], "lineno": 194, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Object"]}, "description": "Object containing run statistics.", "name": "stats"}], "longname": "module:TAP~TAPProducer#writeEpilogue", "scope": "instance", "name": "writeEpilogue"}, {"comment": "/**\r\n   * Writes that test failed to reporter output stream, with error formatting.\r\n   * @override\r\n   */", "kind": "function", "description": "Writes that test failed to reporter output stream, with error formatting.", "memberof": "module:TAP~TAP12Producer", "meta": {"code": {"paramnames": ["n", "test", "err"], "type": "FunctionExpression", "id": "astnode100000429", "name": "this.writeFail"}, "columnno": 2, "filename": "tap.js", "range": [5258, 5525], "lineno": 219, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:TAP~TAP12Producer#writeFail", "override": true, "scope": "instance", "name": "writeFail"}, {"comment": "/**\r\n   * Writes the TAP version to reporter output stream.\r\n   * @override\r\n   */", "kind": "function", "description": "Writes the TAP version to reporter output stream.", "memberof": "module:TAP~TAP13Producer", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000492", "name": "this.writeVersion"}, "columnno": 2, "filename": "tap.js", "range": [6030, 6099], "lineno": 252, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:TAP~TAP13Producer#writeVersion", "override": true, "scope": "instance", "name": "writeVersion"}, {"comment": "/**\r\n   * Writes that test failed to reporter output stream, with error formatting.\r\n   * @override\r\n   */", "kind": "function", "description": "Writes that test failed to reporter output stream, with error formatting.", "memberof": "module:TAP~TAP13Producer", "meta": {"code": {"paramnames": ["n", "test", "err"], "type": "FunctionExpression", "id": "astnode100000503", "name": "this.writeFail"}, "vars": {"emitYamlBlock": "module:TAP~TAP13Producer#writeFail~emitYamlBlock"}, "columnno": 2, "filename": "tap.js", "range": [6216, 6763], "lineno": 260, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:TAP~TAP13Producer#writeFail", "override": true, "scope": "instance", "name": "writeFail"}, {"comment": "", "kind": "function", "name": "indent", "memberof": "module:TAP~TAP13Producer", "undocumented": true, "meta": {"code": {"paramnames": ["level"], "type": "FunctionDeclaration", "id": "astnode100000610", "name": "indent"}, "columnno": 2, "filename": "tap.js", "range": [6770, 6840], "lineno": 277, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:TAP~TAP13Producer~indent", "scope": "inner"}, {"comment": "", "kind": "function", "name": "indent", "memberof": "Mocha.reporters.Doc", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000039", "name": "indent"}, "columnno": 2, "filename": "doc.js", "range": [439, 502], "lineno": 32, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Doc~indent", "scope": "inner"}, {"comment": "/**\r\n * Writes Mocha event to reporter output stream.\r\n *\r\n * @private\r\n * @param {JSONStream~MochaEvent} event - Mocha event to be output.\r\n */", "kind": "function", "description": "Writes Mocha event to reporter output stream.", "memberof": "module:JSONStream", "access": "private", "meta": {"code": {"paramnames": ["event"], "type": "FunctionDeclaration", "id": "astnode100000128", "name": "writeEvent"}, "columnno": 0, "filename": "json-stream.js", "range": [1219, 1305], "lineno": 63, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["JSONStream~MochaEvent"]}, "description": "Mocha event to be output.", "name": "event"}], "longname": "module:JSONStream~writeEvent", "scope": "inner", "name": "writeEvent"}, {"comment": "/**\r\n * Returns an object literal representation of `test`\r\n * free of cyclic properties, etc.\r\n *\r\n * @private\r\n * @param {Test} test - Instance used as data source.\r\n * @return {Object} object containing pared-down test instance data\r\n */", "kind": "function", "description": "Returns an object literal representation of `test`\rfree of cyclic properties, etc.", "memberof": "module:JSONStream", "access": "private", "returns": [{"type": {"names": ["Object"]}, "description": "object containing pared-down test instance data"}], "meta": {"code": {"paramnames": ["test"], "type": "FunctionDeclaration", "id": "astnode100000146", "name": "clean"}, "columnno": 0, "filename": "json-stream.js", "range": [1551, 1721], "lineno": 75, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Test"]}, "description": "Instance used as data source.", "name": "test"}], "longname": "module:JSONStream~clean", "scope": "inner", "name": "clean"}, {"comment": "", "kind": "function", "name": "JSONReporter", "memberof": "module:JSON", "undocumented": true, "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000018", "name": "JSONReporter"}, "vars": {"": null, "passes": "module:JSON~JSONReporter~passes", "tests": "module:JSON~JSONReporter~tests", "self": "module:JSON~JSONReporter~self", "failures": "module:JSON~JSONReporter~failures", "pending": "module:JSON~JSONReporter~pending"}, "columnno": 0, "filename": "json.js", "range": [358, 1143], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:JSON~JSONReporter", "scope": "inner"}, {"comment": "/**\r\n * Return a plain-object representation of `test`\r\n * free of cyclic properties etc.\r\n *\r\n * @private\r\n * @param {Object} test\r\n * @return {Object}\r\n */", "kind": "function", "description": "Return a plain-object representation of `test`\rfree of cyclic properties etc.", "memberof": "module:JSON", "access": "private", "returns": [{"type": {"names": ["Object"]}}], "meta": {"code": {"paramnames": ["test"], "type": "FunctionDeclaration", "id": "astnode100000169", "name": "clean"}, "vars": {"err": "module:JSON~err"}, "columnno": 0, "filename": "json.js", "range": [1306, 1598], "lineno": 74, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Object"]}, "name": "test"}], "longname": "module:JSON~clean", "scope": "inner", "name": "clean"}, {"comment": "/**\r\n * Replaces any circular references inside `obj` with '[object Object]'\r\n *\r\n * @private\r\n * @param {Object} obj\r\n * @return {Object}\r\n */", "kind": "function", "description": "Replaces any circular references inside `obj` with '[object Object]'", "memberof": "module:JSON", "access": "private", "returns": [{"type": {"names": ["Object"]}}], "meta": {"code": {"paramnames": ["obj"], "type": "FunctionDeclaration", "id": "astnode100000216", "name": "cleanCycles"}, "vars": {"": null, "cache": "module:JSON~cleanCycles~cache"}, "columnno": 0, "filename": "json.js", "range": [1747, 2155], "lineno": 96, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Object"]}, "name": "obj"}], "longname": "module:JSON~cleanCycles", "scope": "inner", "name": "cleanCycles"}, {"comment": "/**\r\n * Transform an Error object into a JSON object.\r\n *\r\n * @private\r\n * @param {Error} err\r\n * @return {Object}\r\n */", "kind": "function", "description": "Transform an Error object into a JSON object.", "memberof": "module:JSON", "access": "private", "returns": [{"type": {"names": ["Object"]}}], "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000270", "name": "errorJSON"}, "vars": {"": null, "res": "module:JSON~errorJSON~res"}, "columnno": 0, "filename": "json.js", "range": [2280, 2437], "lineno": 120, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Error"]}, "name": "err"}], "longname": "module:JSON~errorJSON", "scope": "inner", "name": "errorJSON"}, {"comment": "", "kind": "function", "name": "color", "memberof": "module:Base", "undocumented": true, "meta": {"code": {"paramnames": ["type", "str"], "type": "FunctionExpression", "id": "astnode100000182", "name": "exports.color"}, "columnno": 13, "filename": "base.js", "range": [1715, 1884], "lineno": 97, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.color", "scope": "static"}, {"comment": "", "kind": "function", "name": "hide", "memberof": "module:Base.cursor", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000259", "name": "hide"}, "columnno": 2, "filename": "base.js", "range": [2276, 2351], "lineno": 123, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.cursor.hide", "scope": "static"}, {"comment": "", "kind": "function", "name": "show", "memberof": "module:Base.cursor", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000272", "name": "show"}, "columnno": 2, "filename": "base.js", "range": [2358, 2433], "lineno": 127, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.cursor.show", "scope": "static"}, {"comment": "", "kind": "function", "name": "deleteLine", "memberof": "module:Base.cursor", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000285", "name": "deleteLine"}, "columnno": 2, "filename": "base.js", "range": [2440, 2519], "lineno": 131, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.cursor.deleteLine", "scope": "static"}, {"comment": "", "kind": "function", "name": "beginningOfLine", "memberof": "module:Base.cursor", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000298", "name": "beginningOfLine"}, "columnno": 2, "filename": "base.js", "range": [2526, 2610], "lineno": 135, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.cursor.beginningOfLine", "scope": "static"}, {"comment": "", "kind": "function", "name": "CR", "memberof": "module:Base.cursor", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000311", "name": "CR"}, "columnno": 2, "filename": "base.js", "range": [2617, 2790], "lineno": 139, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.cursor.CR", "scope": "static"}, {"comment": "", "kind": "function", "name": "showDiff", "memberof": "module:Base", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000340", "name": "showDiff"}, "columnno": 0, "filename": "base.js", "range": [2798, 2961], "lineno": 149, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Base~showDiff", "scope": "inner"}, {"comment": "", "kind": "function", "name": "stringifyDiffObjs", "memberof": "module:Base", "undocumented": true, "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000367", "name": "stringifyDiffObjs"}, "vars": {"err.actual": "module:Base~err.actual", "err.expected": "module:Base~err.expected"}, "columnno": 0, "filename": "base.js", "range": [2965, 3175], "lineno": 158, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Base~stringifyDiffObjs", "scope": "inner"}, {"comment": "", "kind": "function", "name": "generateDiff", "memberof": "module:Base", "undocumented": true, "meta": {"code": {"paramnames": ["actual", "expected"], "type": "FunctionExpression", "id": "astnode100000417", "name": "exports.generateDiff"}, "columnno": 20, "filename": "base.js", "range": [3458, 3616], "lineno": 175, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "module:Base.generateDiff", "scope": "static"}, {"comment": "/**\r\n * Output the given `failures` as a list.\r\n *\r\n * @public\r\n * @memberof Mocha.reporters.Base\r\n * @variation 1\r\n * @param {Array} failures\r\n */", "kind": "function", "description": "Output the given `failures` as a list.", "memberof": "Mocha.reporters.Base", "variation": "1", "access": "public", "meta": {"code": {"paramnames": ["failures"], "type": "FunctionExpression", "id": "astnode100000439", "name": "exports.list"}, "vars": {"": null}, "columnno": 0, "filename": "base.js", "range": [3773, 5535], "lineno": 190, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Array"]}, "name": "failures"}], "longname": "Mocha.reporters.Base.exports.list(1)", "scope": "static", "name": "exports.list"}, {"comment": "/**\r\n * Output common epilogue used by many of\r\n * the bundled reporters.\r\n *\r\n * @memberof Mocha.reporters.Base\r\n * @public\r\n */", "kind": "function", "description": "Output common epilogue used by many of\rthe bundled reporters.", "memberof": "Mocha.reporters.Base", "access": "public", "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000840", "name": "Base.prototype.epilogue"}, "vars": {"fmt": "module:Base~fmt", "stats": "Mocha.reporters.Base.Base#epilogue~stats"}, "columnno": 0, "filename": "base.js", "range": [6535, 7187], "lineno": 303, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "longname": "Mocha.reporters.Base.Base#epilogue", "scope": "static", "name": "Base#epilogue"}, {"comment": "/**\r\n * Pad the given `str` to `len`.\r\n *\r\n * @private\r\n * @param {string} str\r\n * @param {string} len\r\n * @return {string}\r\n */", "kind": "function", "description": "Pad the given `str` to `len`.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["str", "len"], "type": "FunctionDeclaration", "id": "astnode100000960", "name": "pad"}, "vars": {"str": "module:Base~str"}, "columnno": 0, "filename": "base.js", "range": [7322, 7426], "lineno": 345, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "str"}, {"type": {"names": ["string"]}, "name": "len"}], "longname": "module:Base~pad", "scope": "inner", "name": "pad"}, {"comment": "/**\r\n * Returns an inline diff between 2 strings with coloured ANSI output.\r\n *\r\n * @private\r\n * @param {String} actual\r\n * @param {String} expected\r\n * @return {string} Diff\r\n */", "kind": "function", "description": "Returns an inline diff between 2 strings with coloured ANSI output.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "Diff"}], "meta": {"code": {"paramnames": ["actual", "expected"], "type": "FunctionDeclaration", "id": "astnode100000987", "name": "inlineDiff"}, "vars": {"msg": "module:Base~msg", "width": "module:Base~inlineDiff~width", "lines": "module:Base~inlineDiff~lines", "": null}, "columnno": 0, "filename": "base.js", "range": [7611, 8181], "lineno": 358, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["String"]}, "name": "actual"}, {"type": {"names": ["String"]}, "name": "expected"}], "longname": "module:Base~inlineDiff", "scope": "inner", "name": "inlineDiff"}, {"comment": "/**\r\n * Returns a unified diff between two strings with coloured ANSI output.\r\n *\r\n * @private\r\n * @param {String} actual\r\n * @param {String} expected\r\n * @return {string} The diff.\r\n */", "kind": "function", "description": "Returns a unified diff between two strings with coloured ANSI output.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "The diff."}], "meta": {"code": {"paramnames": ["actual", "expected"], "type": "FunctionDeclaration", "id": "astnode100001084", "name": "unifiedDiff"}, "vars": {"msg": "module:Base~unifiedDiff~msg", "lines": "module:Base~unifiedDiff~lines", "cleanUp": "module:Base~unifiedDiff~cleanUp", "indent": "module:Base~unifiedDiff~indent", "notBlank": "module:Base~unifiedDiff~notBlank"}, "columnno": 0, "filename": "base.js", "range": [8373, 9229], "lineno": 395, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["String"]}, "name": "actual"}, {"type": {"names": ["String"]}, "name": "expected"}], "longname": "module:Base~unifiedDiff", "scope": "inner", "name": "unifiedDiff"}, {"comment": "", "kind": "function", "name": "cleanUp", "memberof": "module:Base~unifiedDiff", "undocumented": true, "meta": {"code": {"paramnames": ["line"], "type": "FunctionDeclaration", "id": "astnode100001093", "name": "cleanUp"}, "columnno": 2, "filename": "base.js", "range": [8443, 8804], "lineno": 397, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Base~unifiedDiff~cleanUp", "scope": "inner"}, {"comment": "", "kind": "function", "name": "notBlank", "memberof": "module:Base~unifiedDiff", "undocumented": true, "meta": {"code": {"paramnames": ["line"], "type": "FunctionDeclaration", "id": "astnode100001147", "name": "notBlank"}, "columnno": 2, "filename": "base.js", "range": [8808, 8896], "lineno": 412, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "module:Base~unifiedDiff~notBlank", "scope": "inner"}, {"comment": "/**\r\n * Return a character diff for `err`.\r\n *\r\n * @private\r\n * @param {String} actual\r\n * @param {String} expected\r\n * @return {string} the diff\r\n */", "kind": "function", "description": "Return a character diff for `err`.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["string"]}, "description": "the diff"}], "meta": {"code": {"paramnames": ["actual", "expected"], "type": "FunctionDeclaration", "id": "astnode100001212", "name": "errorDiff"}, "vars": {"": null}, "columnno": 0, "filename": "base.js", "range": [9385, 9735], "lineno": 438, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["String"]}, "name": "actual"}, {"type": {"names": ["String"]}, "name": "expected"}], "longname": "module:Base~errorDiff", "scope": "inner", "name": "errorDiff"}, {"comment": "/**\r\n * Color lines for `str`, using the color `name`.\r\n *\r\n * @private\r\n * @param {string} name\r\n * @param {string} str\r\n * @return {string}\r\n */", "kind": "function", "description": "Color lines for `str`, using the color `name`.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["string"]}}], "meta": {"code": {"paramnames": ["name", "str"], "type": "FunctionDeclaration", "id": "astnode100001262", "name": "colorLines"}, "vars": {"": null}, "columnno": 0, "filename": "base.js", "range": [9887, 10038], "lineno": 461, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["string"]}, "name": "str"}], "longname": "module:Base~colorLines", "scope": "inner", "name": "colorLines"}, {"comment": "/**\r\n * Check that a / b have the same type.\r\n *\r\n * @private\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {boolean}\r\n */", "kind": "function", "description": "Check that a / b have the same type.", "memberof": "module:Base", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["a", "b"], "type": "FunctionDeclaration", "id": "astnode100001296", "name": "sameType"}, "columnno": 0, "filename": "base.js", "range": [10265, 10348], "lineno": 483, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [{"type": {"names": ["Object"]}, "name": "a"}, {"type": {"names": ["Object"]}, "name": "b"}], "longname": "module:Base~sameType", "scope": "inner", "name": "sameType"}, {"comment": "", "kind": "function", "name": "title", "memberof": "Mocha.reporters.Markdown", "undocumented": true, "meta": {"code": {"paramnames": ["str"], "type": "FunctionDeclaration", "id": "astnode100000047", "name": "title"}, "columnno": 2, "filename": "markdown.js", "range": [546, 620], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Markdown~title", "scope": "inner"}, {"comment": "", "kind": "function", "name": "mapTOC", "memberof": "Mocha.reporters.Markdown", "undocumented": true, "meta": {"code": {"paramnames": ["suite", "obj"], "type": "FunctionDeclaration", "id": "astnode100000063", "name": "mapTOC"}, "vars": {"": null, "obj": "module:Markdown~obj", "key": "Mocha.reporters.Markdown~mapTOC~key", "ret": "Mocha.reporters.Markdown~mapTOC~ret", "obj[undefined]": "module:Markdown~obj.undefined]"}, "columnno": 2, "filename": "markdown.js", "range": [626, 874], "lineno": 43, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Markdown~mapTOC", "scope": "inner"}, {"comment": "", "kind": "function", "name": "stringifyTOC", "memberof": "Mocha.reporters.Markdown", "undocumented": true, "meta": {"code": {"paramnames": ["obj", "level"], "type": "FunctionDeclaration", "id": "astnode100000111", "name": "stringifyTOC"}, "vars": {"link": "module:Markdown~link", "buf": "module:Markdown~buf", "key": "Mocha.reporters.Markdown~stringifyTOC~key"}, "columnno": 2, "filename": "markdown.js", "range": [880, 1336], "lineno": 55, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Markdown~stringifyTOC", "scope": "inner"}, {"comment": "", "kind": "function", "name": "generateTOC", "memberof": "Mocha.reporters.Markdown", "undocumented": true, "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100000197", "name": "generateTOC"}, "vars": {"obj": "Mocha.reporters.Markdown~generateTOC~obj"}, "columnno": 2, "filename": "markdown.js", "range": [1342, 1444], "lineno": 73, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/reporters"}, "params": [], "longname": "Mocha.reporters.Markdown~generateTOC", "scope": "inner"}, {"comment": "", "kind": "function", "name": "yaml", "memberof": "module:config.parsers", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000048", "name": "yaml"}, "columnno": 2, "filename": "config.js", "range": [837, 922], "lineno": 35, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:config.parsers.yaml", "scope": "static"}, {"comment": "", "kind": "function", "name": "js", "memberof": "module:config.parsers", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000063", "name": "js"}, "columnno": 2, "filename": "config.js", "range": [927, 960], "lineno": 37, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:config.parsers.js", "scope": "static"}, {"comment": "", "kind": "function", "name": "json", "memberof": "module:config.parsers", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000069", "name": "json"}, "columnno": 2, "filename": "config.js", "range": [965, 1079], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:config.parsers.json", "scope": "static"}, {"comment": "/**\r\n * Loads and parses, based on file extension, a config file.\r\n * \"JSON\" files may have comments.\r\n * @param {string} filepath - Config file path to load\r\n * @returns {Object} Parsed config object\r\n * @private\r\n */", "kind": "function", "description": "Loads and parses, based on file extension, a config file.\r\"JSON\" files may have comments.", "memberof": "module:config", "access": "private", "returns": [{"type": {"names": ["Object"]}, "description": "Parsed config object"}], "meta": {"code": {"paramnames": ["filepath"], "type": "ArrowFunctionExpression", "id": "astnode100000087", "name": "exports.loadConfig"}, "vars": {"ext": "module:config.loadConfig~ext", "config": "module:config~config"}, "columnno": 0, "filename": "config.js", "range": [1308, 1720], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string"]}, "description": "Config file path to load", "name": "filepath"}], "longname": "module:config.loadConfig", "scope": "static", "name": "loadConfig"}, {"comment": "/**\r\n * Find (\"find up\") config file starting at `cwd`\r\n * @param {string} [cwd] - Current working directory\r\n * @returns {string|null} Filepath to config, if found\r\n */", "kind": "function", "description": "Find (\"find up\") config file starting at `cwd`", "memberof": "module:config", "returns": [{"type": {"names": ["string", "null"]}, "description": "Filepath to config, if found"}], "meta": {"code": {"paramnames": ["cwd"], "type": "ArrowFunctionExpression", "id": "astnode100000158", "name": "exports.findConfig"}, "vars": {"filepath": "module:config.findConfig~filepath"}, "columnno": 0, "filename": "config.js", "range": [1896, 2090], "lineno": 73, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["string"]}, "description": "Current working directory", "name": "cwd"}], "longname": "module:config.findConfig", "scope": "static", "name": "findConfig"}, {"comment": "", "kind": "function", "name": "builder", "memberof": "module:run", "undocumented": true, "meta": {"code": {"paramnames": ["yargs"], "type": "ArrowFunctionExpression", "id": "astnode100000097", "name": "exports.builder"}, "vars": {"": null}, "columnno": 0, "filename": "run.js", "range": [879, 7965], "lineno": 42, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:run.builder", "scope": "static"}, {"comment": "", "kind": "function", "name": "coerce", "memberof": "module:run~grep", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000294", "name": "coerce"}, "columnno": 8, "filename": "run.js", "range": [3507, 3547], "lineno": 132, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:run~grep.coerce", "scope": "static"}, {"comment": "", "kind": "function", "name": "coerce", "memberof": "module:run~\"reporter-option\"", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000418", "name": "coerce"}, "vars": {"": null}, "columnno": 8, "filename": "run.js", "range": [5207, 5549], "lineno": 188, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:run~\"reporter-option\".coerce", "scope": "static"}, {"comment": "", "kind": "function", "name": "handler", "memberof": "module:run", "undocumented": true, "meta": {"code": {"paramnames": ["argv"], "type": "ArrowFunctionExpression", "id": "astnode100000680", "name": "exports.handler"}, "vars": {"files": "module:run.handler~files", "mocha": "module:run.handler~mocha"}, "columnno": 0, "filename": "run.js", "range": [7970, 8187], "lineno": 279, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:run.handler", "scope": "static"}, {"comment": "/**\r\n * - Accepts an `Array` of arguments\r\n * - Modifies {@link https://nodejs.org/api/modules.html#modules_module_paths Node.js' search path} for easy loading of consumer modules\r\n * - Sets {@linkcode https://nodejs.org/api/errors.html#errors_error_stacktracelimit Error.stackTraceLimit} to `Infinity`\r\n * @summary Mocha's main entry point from the command-line.\r\n * @param {string[]} argv - Array of arguments to parse, or by default the lovely `process.argv.slice(2)`\r\n */", "kind": "function", "description": "- Accepts an `Array` of arguments\r- Modifies {@link https://nodejs.org/api/modules.html#modules_module_paths Node.js' search path} for easy loading of consumer modules\r- Sets {@linkcode https://nodejs.org/api/errors.html#errors_error_stacktracelimit Error.stackTraceLimit} to `Infinity`", "memberof": "module:cli", "summary": "Mocha's main entry point from the command-line.", "meta": {"code": {"paramnames": ["argv"], "type": "ArrowFunctionExpression", "id": "astnode100000065", "name": "exports.main"}, "vars": {"": null, "Error.stackTraceLimit": "module:cli~Error.stackTraceLimit"}, "columnno": 0, "filename": "cli.js", "range": [1148, 2327], "lineno": 28, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Array.<string>"]}, "description": "Array of arguments to parse, or by default the lovely `process.argv.slice(2)`", "name": "argv"}], "longname": "module:cli.main", "scope": "static", "name": "main"}, {"comment": "", "kind": "function", "name": "builder", "memberof": "module:init", "undocumented": true, "meta": {"code": {"paramnames": ["yargs"], "type": "ArrowFunctionExpression", "id": "astnode100000035", "name": "exports.builder"}, "columnno": 0, "filename": "init.js", "range": [298, 402], "lineno": 18, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:init.builder", "scope": "static"}, {"comment": "", "kind": "function", "name": "handler", "memberof": "module:init", "undocumented": true, "meta": {"code": {"paramnames": ["argv"], "type": "ArrowFunctionExpression", "id": "astnode100000052", "name": "exports.handler"}, "vars": {"srcdir": "module:init.handler~srcdir", "tmpl": "module:init.handler~tmpl", "css": "module:init.handler~css", "destdir": "module:init.handler~destdir", "js": "module:init.handler~js"}, "columnno": 0, "filename": "init.js", "range": [407, 1006], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:init.handler", "scope": "static"}, {"comment": "/**\r\n * Dumps a sorted list of the enumerable, lower-case keys of some object\r\n * to `STDOUT`.\r\n * @param {Object} obj - Object, ostensibly having some enumerable keys\r\n * @ignore\r\n * @private\r\n */", "access": "private", "kind": "function", "description": "Dumps a sorted list of the enumerable, lower-case keys of some object\rto `STDOUT`.", "memberof": "module:one-and-dones", "ignore": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000017", "name": "showKeys"}, "vars": {"keys": "module:one-and-dones~showKeys~keys", "": null, "maxKeyLength": "module:one-and-dones~showKeys~maxKeyLength"}, "columnno": 6, "filename": "one-and-dones.js", "range": [556, 1076], "lineno": 21, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Object"]}, "description": "Object, ostensibly having some enumerable keys", "name": "obj"}], "longname": "module:one-and-dones~showKeys", "scope": "inner", "name": "showKeys"}, {"comment": "/**\r\n   * Dump list of built-in interfaces\r\n   * @private\r\n   */", "kind": "function", "description": "Dump list of built-in interfaces", "memberof": "module:one-and-dones.ONE_AND_DONES", "access": "private", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000132", "name": "interfaces"}, "columnno": 2, "filename": "one-and-dones.js", "range": [1254, 1311], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:one-and-dones.ONE_AND_DONES.interfaces", "scope": "static", "name": "interfaces"}, {"comment": "/**\r\n   * Dump list of built-in reporters\r\n   * @private\r\n   */", "kind": "function", "description": "Dump list of built-in reporters", "memberof": "module:one-and-dones.ONE_AND_DONES", "access": "private", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000141", "name": "reporters"}, "columnno": 2, "filename": "one-and-dones.js", "range": [1383, 1438], "lineno": 58, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:one-and-dones.ONE_AND_DONES.reporters", "scope": "static", "name": "reporters"}, {"comment": "/**\r\n * Mocha has historical support for various `node` and V8 flags which might not\r\n * appear in `process.allowedNodeEnvironmentFlags`.\r\n * These include:\r\n *   - `--preserve-symlinks`\r\n *   - `--harmony-*`\r\n *   - `--gc-global`\r\n *   - `--trace-*`\r\n *   - `--es-staging`\r\n *   - `--use-strict`\r\n *   - `--v8-*` (but *not* `--v8-options`)\r\n * @summary Whether or not to pass a flag along to the `node` executable.\r\n * @param {string} flag - Flag to test\r\n * @returns {boolean}\r\n * @private\r\n */", "kind": "function", "description": "Mocha has historical support for various `node` and V8 flags which might not\rappear in `process.allowedNodeEnvironmentFlags`.\rThese include:\r  - `--preserve-symlinks`\r  - `--harmony-*`\r  - `--gc-global`\r  - `--trace-*`\r  - `--es-staging`\r  - `--use-strict`\r  - `--v8-*` (but *not* `--v8-options`)", "memberof": "module:node-flags", "summary": "Whether or not to pass a flag along to the `node` executable.", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["flag"], "type": "ArrowFunctionExpression", "id": "astnode100000021", "name": "exports.isNodeFlag"}, "columnno": 0, "filename": "node-flags.js", "range": [869, 1131], "lineno": 34, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string"]}, "description": "Flag to test", "name": "flag"}], "longname": "module:node-flags.isNodeFlag", "scope": "static", "name": "isNodeFlag"}, {"comment": "/**\r\n * Returns `true` if the flag is a \"debug-like\" flag.  These require timeouts\r\n * to be suppressed, or pausing the debugger on breakpoints will cause test failures.\r\n * @param {string} flag - Flag to test\r\n * @returns {boolean}\r\n * @private\r\n */", "kind": "function", "description": "Returns `true` if the flag is a \"debug-like\" flag.  These require timeouts\rto be suppressed, or pausing the debugger on breakpoints will cause test failures.", "memberof": "module:node-flags", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["flag"], "type": "ArrowFunctionExpression", "id": "astnode100000046", "name": "exports.impliesNoTimeouts"}, "columnno": 0, "filename": "node-flags.js", "range": [1388, 1444], "lineno": 48, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string"]}, "description": "Flag to test", "name": "flag"}], "longname": "module:node-flags.impliesNoTimeouts", "scope": "static", "name": "impliesNoTimeouts"}, {"comment": "", "kind": "function", "name": "arg", "memberof": "module:options", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000118", "name": "arg"}, "columnno": 36, "filename": "options.js", "range": [1594, 1634], "lineno": 53, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:options~arg", "scope": "inner"}, {"comment": "/**\r\n * Wrapper around `yargs-parser` which applies our settings\r\n * @param {string|string[]} args - Arguments to parse\r\n * @param  {...Object} configObjects - `configObjects` for yargs-parser\r\n * @private\r\n * @ignore\r\n */", "ignore": true, "kind": "function", "description": "Wrapper around `yargs-parser` which applies our settings", "memberof": "module:options", "access": "private", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000162", "name": "parse"}, "columnno": 6, "filename": "options.js", "range": [2305, 2562], "lineno": 76, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string", "Array.<string>"]}, "description": "Arguments to parse", "name": "args"}, {"variable": true, "type": {"names": ["Object"]}, "description": "`configObjects` for yargs-parser", "name": "configObjects"}], "longname": "module:options~parse", "scope": "inner", "name": "parse"}, {"comment": "/**\r\n * - Replaces comments with empty strings\r\n * - Replaces escaped spaces (e.g., 'xxx\\ yyy') with HTML space\r\n * - Splits on whitespace, creating array of substrings\r\n * - Filters empty string elements from array\r\n * - Replaces any HTML space with space\r\n * @summary Parses options read from run-control file.\r\n * @private\r\n * @param {string} content - Content read from run-control file.\r\n * @returns {string[]} cmdline options (and associated arguments)\r\n * @ignore\r\n */", "ignore": true, "kind": "function", "description": "- Replaces comments with empty strings\r- Replaces escaped spaces (e.g., 'xxx\\ yyy') with HTML space\r- Splits on whitespace, creating array of substrings\r- Filters empty string elements from array\r- Replaces any HTML space with space", "memberof": "module:options", "summary": "Parses options read from run-control file.", "access": "private", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "cmdline options (and associated arguments)"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000190", "name": "parseMochaOpts"}, "vars": {"": null}, "columnno": 6, "filename": "options.js", "range": [3050, 3234], "lineno": 103, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string"]}, "description": "Content read from run-control file.", "name": "content"}], "longname": "module:options~parseMochaOpts", "scope": "inner", "name": "parseMochaOpts"}, {"comment": "/**\r\n * Prepends options from run-control file to the command line arguments.\r\n *\r\n * @deprecated Deprecated in v6.0.0; This function is no longer used internally and will be removed in a future version.\r\n * @public\r\n * @alias module:lib/cli/options\r\n * @see {@link https://mochajs.org/#mochaopts|mocha.opts}\r\n */", "kind": "function", "description": "Prepends options from run-control file to the command line arguments.", "deprecated": "Deprecated in v6.0.0; This function is no longer used internally and will be removed in a future version.", "access": "public", "alias": "module:lib/cli/options", "see": ["{@link https://mochajs.org/#mochaopts|mocha.opts}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000225", "value": "getOptions", "name": "module.exports"}, "vars": {"process.argv": "module:options~process.argv", "process.env.LOADED_MOCHA_OPTS": "module:options~process.env.LOADED_MOCHA_OPTS", "options": "module:lib/cli/options~options", "optsPath": "module:lib/cli/options~optsPath"}, "columnno": 0, "filename": "options.js", "range": [3554, 4292], "lineno": 119, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "longname": "module:lib/cli/options", "scope": "global", "name": "module:lib/cli/options"}, {"comment": "/**\r\n * Given filepath in `args.opts`, attempt to load and parse a `mocha.opts` file.\r\n * @param {Object} [args] - Arguments object\r\n * @param {string|boolean} [args.opts] - Filepath to mocha.opts; defaults to whatever's in `mocharc.opts`, or `false` to skip\r\n * @returns {external:yargsParser.Arguments|void} If read, object containing parsed arguments\r\n * @memberof module:lib/cli/options\r\n * @public\r\n */", "kind": "function", "description": "Given filepath in `args.opts`, attempt to load and parse a `mocha.opts` file.", "memberof": "module:lib/cli/options", "access": "public", "returns": [{"type": {"names": ["external:yargsParser.Arguments", "void"]}, "description": "If read, object containing parsed arguments"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000336", "name": "loadMochaOpts"}, "vars": {"mochaOpts": "module:options~mochaOpts", "result": "module:options~result", "filepath": "module:options~filepath"}, "columnno": 6, "filename": "options.js", "range": [4712, 5638], "lineno": 153, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "description": "Arguments object", "name": "args"}, {"optional": true, "type": {"names": ["string", "boolean"]}, "description": "Filepath to mocha.opts; defaults to whatever's in `mocharc.opts`, or `false` to skip", "name": "args.opts"}], "longname": "module:lib/cli/options.loadMochaOpts", "scope": "static", "name": "loadMochaOpts"}, {"comment": "/**\r\n * Given path to config file in `args.config`, attempt to load & parse config file.\r\n * @param {Object} [args] - Arguments object\r\n * @param {string|boolean} [args.config] - Path to config file or `false` to skip\r\n * @public\r\n * @memberof module:lib/cli/options\r\n * @returns {external:yargsParser.Arguments|void} Parsed config, or nothing if `args.config` is `false`\r\n */", "kind": "function", "description": "Given path to config file in `args.config`, attempt to load & parse config file.", "memberof": "module:lib/cli/options", "access": "public", "returns": [{"type": {"names": ["external:yargsParser.Arguments", "void"]}, "description": "Parsed config, or nothing if `args.config` is `false`"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000447", "name": "loadRc"}, "vars": {"config": "module:lib/cli/options.loadRc~config"}, "columnno": 6, "filename": "options.js", "range": [6076, 6236], "lineno": 194, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "description": "Arguments object", "name": "args"}, {"optional": true, "type": {"names": ["string", "boolean"]}, "description": "Path to config file or `false` to skip", "name": "args.config"}], "longname": "module:lib/cli/options.loadRc", "scope": "static", "name": "loadRc"}, {"comment": "/**\r\n * Given path to `package.json` in `args.package`, attempt to load config from `mocha` prop.\r\n * @param {Object} [args] - Arguments object\r\n * @param {string|boolean} [args.config] - Path to `package.json` or `false` to skip\r\n * @public\r\n * @memberof module:lib/cli/options\r\n * @returns {external:yargsParser.Arguments|void} Parsed config, or nothing if `args.package` is `false`\r\n */", "kind": "function", "description": "Given path to `package.json` in `args.package`, attempt to load config from `mocha` prop.", "memberof": "module:lib/cli/options", "access": "public", "returns": [{"type": {"names": ["external:yargsParser.Arguments", "void"]}, "description": "Parsed config, or nothing if `args.package` is `false`"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000486", "name": "loadPkgRc"}, "vars": {"pkg": "module:lib/cli/options.loadPkgRc~pkg", "result": "module:options~result", "filepath": "module:lib/cli/options.loadPkgRc~filepath"}, "columnno": 6, "filename": "options.js", "range": [6673, 7380], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "description": "Arguments object", "name": "args"}, {"optional": true, "type": {"names": ["string", "boolean"]}, "description": "Path to `package.json` or `false` to skip", "name": "args.config"}], "longname": "module:lib/cli/options.loadPkgRc", "scope": "static", "name": "loadPkgRc"}, {"comment": "/**\r\n * Priority list:\r\n *\r\n * 1. Command-line args\r\n * 2. RC file (`.mocharc.js`, `.mocharc.ya?ml`, `mocharc.json`)\r\n * 3. `mocha` prop of `package.json`\r\n * 4. `mocha.opts`\r\n * 5. default configuration (`lib/mocharc.json`)\r\n *\r\n * If a {@link module:lib/cli/one-and-dones.ONE_AND_DONE_ARGS \"one-and-done\" option} is present in the `argv` array, no external config files will be read.\r\n * @summary Parses options read from `mocha.opts`, `.mocharc.*` and `package.json`.\r\n * @param {string|string[]} [argv] - Arguments to parse\r\n * @public\r\n * @memberof module:lib/cli/options\r\n * @returns {external:yargsParser.Arguments} Parsed args from everything\r\n */", "kind": "function", "description": "Priority list:\r\r1. Command-line args\r2. RC file (`.mocharc.js`, `.mocharc.ya?ml`, `mocharc.json`)\r3. `mocha` prop of `package.json`\r4. `mocha.opts`\r5. default configuration (`lib/mocharc.json`)\r\rIf a {@link module:lib/cli/one-and-dones.ONE_AND_DONE_ARGS \"one-and-done\" option} is present in the `argv` array, no external config files will be read.", "memberof": "module:lib/cli/options", "summary": "Parses options read from `mocha.opts`, `.mocharc.*` and `package.json`.", "access": "public", "returns": [{"type": {"names": ["external:yargsParser.Arguments"]}, "description": "Parsed args from everything"}], "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000599", "name": "loadOptions"}, "vars": {"": null, "args.package": "module:lib/cli/options.loadOptions~args.package", "optsConfig": "module:lib/cli/options.loadOptions~optsConfig", "rcConfig": "module:lib/cli/options.loadOptions~rcConfig", "args": "module:options~args", "args.opts": "module:lib/cli/options.loadOptions~args.opts", "pkgConfig": "module:lib/cli/options.loadOptions~pkgConfig", "args.config": "module:lib/cli/options.loadOptions~args.config", "args._": "module:options~args._"}, "columnno": 6, "filename": "options.js", "range": [8089, 8922], "lineno": 255, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["string", "Array.<string>"]}, "description": "Arguments to parse", "name": "argv"}], "longname": "module:lib/cli/options.loadOptions", "scope": "static", "name": "loadOptions"}, {"comment": "/**\r\n * Exits Mocha when tests + code under test has finished execution (default)\r\n * @param {number} code - Exit code; typically # of failures\r\n * @ignore\r\n * @private\r\n */", "access": "private", "kind": "function", "description": "Exits Mocha when tests + code under test has finished execution (default)", "memberof": "module:run-helpers", "ignore": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000066", "name": "exitMochaLater"}, "vars": {"": null}, "columnno": 6, "filename": "run-helpers.js", "range": [664, 770], "lineno": 27, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["number"]}, "description": "Exit code; typically # of failures", "name": "code"}], "longname": "module:run-helpers~exitMochaLater", "scope": "inner", "name": "exitMochaLater"}, {"comment": "/**\r\n * Exits Mocha when Mocha itself has finished execution, regardless of\r\n * what the tests or code under test is doing.\r\n * @param {number} code - Exit code; typically # of failures\r\n * @ignore\r\n * @private\r\n */", "access": "private", "kind": "function", "description": "Exits Mocha when Mocha itself has finished execution, regardless of\rwhat the tests or code under test is doing.", "memberof": "module:run-helpers", "ignore": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000091", "name": "exitMocha"}, "vars": {"": null, "process.exitCode": "module:run-helpers~process.exitCode", "draining": "module:run-helpers~exitMocha~draining", "done": "module:run-helpers~exitMocha~done", "streams": "module:run-helpers~exitMocha~streams", "clampedCode": "module:run-helpers~exitMocha~clampedCode"}, "columnno": 6, "filename": "run-helpers.js", "range": [998, 1763], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["number"]}, "description": "Exit code; typically # of failures", "name": "code"}], "longname": "module:run-helpers~exitMocha", "scope": "inner", "name": "exitMocha"}, {"comment": "", "kind": "function", "name": "done", "memberof": "module:run-helpers~exitMocha", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000116", "name": "done"}, "columnno": 8, "filename": "run-helpers.js", "range": [1459, 1543], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers~exitMocha~done", "scope": "inner"}, {"comment": "/**\r\n * Hide the cursor.\r\n * @ignore\r\n * @private\r\n */", "access": "private", "kind": "function", "description": "Hide the cursor.", "memberof": "module:run-helpers", "ignore": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000164", "name": "hideCursor"}, "columnno": 6, "filename": "run-helpers.js", "range": [1830, 1893], "lineno": 73, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers~hideCursor", "scope": "inner", "name": "hideCursor"}, {"comment": "/**\r\n * Show the cursor.\r\n * @ignore\r\n * @private\r\n */", "access": "private", "kind": "function", "description": "Show the cursor.", "memberof": "module:run-helpers", "ignore": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000177", "name": "showCursor"}, "columnno": 6, "filename": "run-helpers.js", "range": [1960, 2023], "lineno": 82, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers~showCursor", "scope": "inner", "name": "showCursor"}, {"comment": "/**\r\n * Stop cursor business\r\n * @private\r\n */", "kind": "function", "description": "Stop cursor business", "memberof": "module:run-helpers", "access": "private", "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000190", "name": "stop"}, "columnno": 6, "filename": "run-helpers.js", "range": [2082, 2137], "lineno": 90, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers~stop", "scope": "inner", "name": "stop"}, {"comment": "/**\r\n * Coerce a comma-delimited string (or array thereof) into a flattened array of\r\n * strings\r\n * @param {string|string[]} str - Value to coerce\r\n * @returns {string[]} Array of strings\r\n * @private\r\n */", "kind": "function", "description": "Coerce a comma-delimited string (or array thereof) into a flattened array of\rstrings", "memberof": "module:run-helpers", "access": "private", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "Array of strings"}], "meta": {"code": {"paramnames": ["str"], "type": "ArrowFunctionExpression", "id": "astnode100000203", "name": "exports.list"}, "columnno": 0, "filename": "run-helpers.js", "range": [2350, 2444], "lineno": 101, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["string", "Array.<string>"]}, "description": "Value to coerce", "name": "str"}], "longname": "module:run-helpers.list", "scope": "static", "name": "list"}, {"comment": "/**\r\n * `require()` the modules as required by `--require <require>`\r\n * @param {string[]} requires - Modules to require\r\n * @private\r\n */", "kind": "function", "description": "`require()` the modules as required by `--require <require>`", "memberof": "module:run-helpers", "access": "private", "meta": {"code": {"paramnames": ["requires"], "type": "ArrowFunctionExpression", "id": "astnode100000230", "name": "exports.handleRequires"}, "vars": {"": null}, "columnno": 0, "filename": "run-helpers.js", "range": [2589, 2924], "lineno": 109, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Array.<string>"]}, "description": "Modules to require", "name": "requires"}], "longname": "module:run-helpers.handleRequires", "scope": "static", "name": "handleRequires"}, {"comment": "/**\r\n * Smash together an array of test files in the correct order\r\n * @param {Object} [opts] - Options\r\n * @param {string[]} [opts.extension] - File extensions to use\r\n * @param {string[]} [opts.spec] - Files, dirs, globs to run\r\n * @param {string[]} [opts.exclude] - Files, dirs, globs to exclude\r\n * @param {boolean} [opts.recursive=false] - Find files recursively\r\n * @param {boolean} [opts.sort=false] - Sort test files\r\n * @returns {string[]} List of files to test\r\n * @private\r\n */", "kind": "function", "description": "Smash together an array of test files in the correct order", "memberof": "module:run-helpers", "access": "private", "returns": [{"type": {"names": ["Array.<string>"]}, "description": "List of files to test"}], "meta": {"code": {"paramnames": [""], "type": "ArrowFunctionExpression", "id": "astnode100000302", "name": "exports.handleFiles"}, "vars": {"files": "module:run-helpers~files", "": null, "fileArgs": "module:run-helpers.handleFiles~fileArgs"}, "columnno": 0, "filename": "run-helpers.js", "range": [3419, 4762], "lineno": 132, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"optional": true, "type": {"names": ["Object"]}, "description": "Options", "name": "opts"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "File extensions to use", "name": "opts.extension"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "Files, dirs, globs to run", "name": "opts.spec"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "Files, dirs, globs to exclude", "name": "opts.exclude"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Find files recursively", "name": "opts.recursive"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Sort test files", "name": "opts.sort"}], "longname": "module:run-helpers.handleFiles", "scope": "static", "name": "handleFiles"}, {"comment": "/**\r\n * Give Mocha files and tell it to run\r\n * @param {Mocha} mocha - Mocha instance\r\n * @param {Options} [opts] - Options\r\n * @param {string[]} [opts.files] - List of test files\r\n * @param {boolean} [opts.exit] - Whether or not to force-exit after tests are complete\r\n * @returns {Runner}\r\n * @private\r\n */", "kind": "function", "description": "Give Mocha files and tell it to run", "memberof": "module:run-helpers", "access": "private", "returns": [{"type": {"names": ["Runner"]}}], "meta": {"code": {"paramnames": ["mocha", ""], "type": "ArrowFunctionExpression", "id": "astnode100000510", "name": "exports.singleRun"}, "vars": {"mocha.files": "module:run-helpers~mocha.files"}, "columnno": 0, "filename": "run-helpers.js", "range": [5077, 5225], "lineno": 196, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Mocha"]}, "description": "Mocha instance", "name": "mocha"}, {"optional": true, "type": {"names": ["Options"]}, "description": "Options", "name": "opts"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "List of test files", "name": "opts.files"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Whether or not to force-exit after tests are complete", "name": "opts.exit"}], "longname": "module:run-helpers.singleRun", "scope": "static", "name": "singleRun"}, {"comment": "/**\r\n * Run Mocha in \"watch\" mode\r\n * @param {Mocha} mocha - Mocha instance\r\n * @param {Object} [opts] - Options\r\n * @param {string[]} [opts.extension] - List of extensions to watch\r\n * @param {string|RegExp} [opts.grep] - Grep for test titles\r\n * @param {string} [opts.ui=bdd] - User interface\r\n * @param {string[]} [files] - Array of test files\r\n * @private\r\n */", "kind": "function", "description": "Run Mocha in \"watch\" mode", "memberof": "module:run-helpers", "access": "private", "meta": {"code": {"paramnames": ["mocha", ""], "type": "ArrowFunctionExpression", "id": "astnode100000544", "name": "exports.watchRun"}, "vars": {"": null, "runner": "module:run-helpers.watchRun~runner", "loadAndRun": "module:run-helpers.watchRun~loadAndRun", "watchFiles": "module:run-helpers.watchRun~watchFiles", "runAgain": "module:run-helpers.watchRun~runAgain", "purge": "module:run-helpers.watchRun~purge", "rerun": "module:run-helpers.watchRun~rerun"}, "columnno": 0, "filename": "run-helpers.js", "range": [5596, 6720], "lineno": 211, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Mocha"]}, "description": "Mocha instance", "name": "mocha"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Options", "name": "opts"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "List of extensions to watch", "name": "opts.extension"}, {"optional": true, "type": {"names": ["string", "RegExp"]}, "description": "Grep for test titles", "name": "opts.grep"}, {"optional": true, "defaultvalue": "bdd", "type": {"names": ["string"]}, "description": "User interface", "name": "opts.ui"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "Array of test files", "name": "files"}], "longname": "module:run-helpers.watchRun", "scope": "static", "name": "watchRun"}, {"comment": "", "kind": "function", "name": "loadAndRun", "memberof": "module:run-helpers.watchRun", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000619", "name": "loadAndRun"}, "vars": {"runner": "module:run-helpers~runner", "": null, "runAgain": "module:run-helpers~runAgain", "mocha.files": "module:run-helpers~mocha.files"}, "columnno": 8, "filename": "run-helpers.js", "range": [5946, 6215], "lineno": 228, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers.watchRun~loadAndRun", "scope": "inner"}, {"comment": "", "kind": "function", "name": "purge", "memberof": "module:run-helpers.watchRun", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000664", "name": "purge"}, "vars": {"": null}, "columnno": 8, "filename": "run-helpers.js", "range": [6228, 6326], "lineno": 243, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers.watchRun~purge", "scope": "inner"}, {"comment": "", "kind": "function", "name": "rerun", "memberof": "module:run-helpers.watchRun", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000687", "name": "rerun"}, "vars": {"mocha.suite.ctx": "module:run-helpers~mocha.suite.ctx", "mocha.suite": "module:run-helpers~mocha.suite"}, "columnno": 8, "filename": "run-helpers.js", "range": [6358, 6571], "lineno": 251, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers.watchRun~rerun", "scope": "inner"}, {"comment": "/**\r\n * Actually run tests\r\n * @param {Mocha} mocha - Mocha instance\r\n * @param {Object} [opts] - Options\r\n * @param {boolean} [opts.watch=false] - Enable watch mode\r\n * @param {string[]} [opts.extension] - List of extensions to watch\r\n * @param {string|RegExp} [opts.grep] - Grep for test titles\r\n * @param {string} [opts.ui=bdd] - User interface\r\n * @param {boolean} [opts.exit=false] - Force-exit Mocha when tests done\r\n * @param {string[]} [files] - Array of test files\r\n * @private\r\n */", "kind": "function", "description": "Actually run tests", "memberof": "module:run-helpers", "access": "private", "meta": {"code": {"paramnames": ["mocha", "", "files"], "type": "ArrowFunctionExpression", "id": "astnode100000761", "name": "exports.runMocha"}, "columnno": 0, "filename": "run-helpers.js", "range": [7218, 7487], "lineno": 285, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Mocha"]}, "description": "Mocha instance", "name": "mocha"}, {"optional": true, "type": {"names": ["Object"]}, "description": "Options", "name": "opts"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Enable watch mode", "name": "opts.watch"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "List of extensions to watch", "name": "opts.extension"}, {"optional": true, "type": {"names": ["string", "RegExp"]}, "description": "Grep for test titles", "name": "opts.grep"}, {"optional": true, "defaultvalue": "bdd", "type": {"names": ["string"]}, "description": "User interface", "name": "opts.ui"}, {"optional": true, "defaultvalue": false, "type": {"names": ["boolean"]}, "description": "Force-exit Mocha when tests done", "name": "opts.exit"}, {"optional": true, "type": {"names": ["Array.<string>"]}, "description": "Array of test files", "name": "files"}], "longname": "module:run-helpers.runMocha", "scope": "static", "name": "runMocha"}, {"comment": "/**\r\n * Used for `--reporter` and `--ui`.  Ensures there's only one, and asserts\r\n * that it actually exists.\r\n * @todo XXX This must get run after requires are processed, as it'll prevent\r\n * interfaces from loading.\r\n * @param {Object} opts - Options object\r\n * @param {string} key - Resolvable module name or path\r\n * @param {Object} [map] - An object perhaps having key `key`\r\n * @private\r\n */", "kind": "function", "description": "Used for `--reporter` and `--ui`.  Ensures there's only one, and asserts\rthat it actually exists.", "memberof": "module:run-helpers", "access": "private", "meta": {"code": {"paramnames": ["opts", "key", "map"], "type": "ArrowFunctionExpression", "id": "astnode100000824", "name": "exports.validatePlugin"}, "vars": {"unknownError": "module:run-helpers.validatePlugin~unknownError", "": null, "opts[undefined]": "module:run-helpers~opts[undefined]"}, "columnno": 0, "filename": "run-helpers.js", "range": [7891, 8576], "lineno": 307, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [{"type": {"names": ["Object"]}, "description": "Options object", "name": "opts"}, {"type": {"names": ["string"]}, "description": "Resolvable module name or path", "name": "key"}, {"optional": true, "type": {"names": ["Object"]}, "description": "An object perhaps having key `key`", "name": "map"}], "longname": "module:run-helpers.validatePlugin", "scope": "static", "todo": ["XXX This must get run after requires are processed, as it'll prevent\rinterfaces from loading."], "name": "validatePlugin"}, {"comment": "", "kind": "function", "name": "unknownError", "memberof": "module:run-helpers.validatePlugin", "undocumented": true, "meta": {"code": {"type": "ArrowFunctionExpression", "id": "astnode100000854", "name": "unknownError"}, "columnno": 8, "filename": "run-helpers.js", "range": [8070, 8134], "lineno": 312, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/cli"}, "params": [], "longname": "module:run-helpers.validatePlugin~unknownError", "scope": "inner"}, {"comment": "/**\r\n * QUnit-style interface:\r\n *\r\n *     suite('Array');\r\n *\r\n *     test('#length', function() {\r\n *       var arr = [1,2,3];\r\n *       ok(arr.length == 3);\r\n *     });\r\n *\r\n *     test('#indexOf()', function() {\r\n *       var arr = [1,2,3];\r\n *       ok(arr.indexOf(1) == 0);\r\n *       ok(arr.indexOf(2) == 1);\r\n *       ok(arr.indexOf(3) == 2);\r\n *     });\r\n *\r\n *     suite('String');\r\n *\r\n *     test('#length', function() {\r\n *       ok('foo'.length == 3);\r\n *     });\r\n *\r\n * @param {Suite} suite Root suite.\r\n */", "kind": "function", "description": "QUnit-style interface:\r\r    suite('Array');\r\r    test('#length', function() {\r      var arr = [1,2,3];\r      ok(arr.length == 3);\r    });\r\r    test('#indexOf()', function() {\r      var arr = [1,2,3];\r      ok(arr.indexOf(1) == 0);\r      ok(arr.indexOf(2) == 1);\r      ok(arr.indexOf(3) == 2);\r    });\r\r    suite('String');\r\r    test('#length', function() {\r      ok('foo'.length == 3);\r    });", "memberof": "module", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000011", "value": "qUnitInterface", "name": "module.exports"}, "vars": {"": null, "suites": "module.exports~suites"}, "columnno": 0, "filename": "qunit.js", "range": [575, 2157], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "Root suite.", "name": "suite"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "/**\r\n     * Describe a \"suite\" with the given `title`.\r\n     */", "kind": "function", "description": "Describe a \"suite\" with the given `title`.", "memberof": "context", "meta": {"code": {"paramnames": ["title"], "type": "FunctionExpression", "id": "astnode100000094", "name": "context.suite"}, "columnno": 4, "filename": "qunit.js", "range": [1083, 1299], "lineno": 45, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.suite", "scope": "static", "name": "suite"}, {"comment": "/**\r\n     * Exclusive Suite.\r\n     */", "kind": "function", "description": "Exclusive Suite.", "memberof": "context.suite", "meta": {"code": {"paramnames": ["title"], "type": "FunctionExpression", "id": "astnode100000128", "name": "context.suite.only"}, "columnno": 4, "filename": "qunit.js", "range": [1353, 1572], "lineno": 60, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.suite.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n     * Describe a specification or test-case\r\n     * with the given `title` and callback `fn`\r\n     * acting as a thunk.\r\n     */", "kind": "function", "description": "Describe a specification or test-case\rwith the given `title` and callback `fn`\racting as a thunk.", "memberof": "context", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000164", "name": "context.test"}, "vars": {"test": "context.test~test", "test.file": "context.test~test.file"}, "columnno": 4, "filename": "qunit.js", "range": [1723, 1882], "lineno": 77, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.test", "scope": "static", "name": "test"}, {"comment": "/**\r\n     * Exclusive test-case.\r\n     */", "kind": "function", "description": "Exclusive test-case.", "memberof": "context.test", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000196", "name": "context.test.only"}, "columnno": 4, "filename": "qunit.js", "range": [1940, 2052], "lineno": 88, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.test.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n * TDD-style interface:\r\n *\r\n *      suite('Array', function() {\r\n *        suite('#indexOf()', function() {\r\n *          suiteSetup(function() {\r\n *\r\n *          });\r\n *\r\n *          test('should return -1 when not present', function() {\r\n *\r\n *          });\r\n *\r\n *          test('should return the index when present', function() {\r\n *\r\n *          });\r\n *\r\n *          suiteTeardown(function() {\r\n *\r\n *          });\r\n *        });\r\n *      });\r\n *\r\n * @param {Suite} suite Root suite.\r\n */", "kind": "function", "description": "TDD-style interface:\r\r     suite('Array', function() {\r       suite('#indexOf()', function() {\r         suiteSetup(function() {\r\r         });\r\r         test('should return -1 when not present', function() {\r\r         });\r\r         test('should return the index when present', function() {\r\r         });\r\r         suiteTeardown(function() {\r\r         });\r       });\r     });", "memberof": "module", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000011", "name": "module.exports"}, "vars": {"": null, "suites": "module.exports~suites"}, "columnno": 0, "filename": "tdd.js", "range": [552, 2342], "lineno": 30, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "Root suite.", "name": "suite"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "/**\r\n     * Describe a \"suite\" with the given `title` and callback `fn` containing\r\n     * nested suites and/or tests.\r\n     */", "kind": "function", "description": "Describe a \"suite\" with the given `title` and callback `fn` containing\rnested suites and/or tests.", "memberof": "context", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000093", "name": "context.suite"}, "columnno": 4, "filename": "tdd.js", "range": [1115, 1266], "lineno": 46, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.suite", "scope": "static", "name": "suite"}, {"comment": "/**\r\n     * Pending suite.\r\n     */", "kind": "function", "description": "Pending suite.", "memberof": "context.suite", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000116", "name": "context.suite.skip"}, "columnno": 4, "filename": "tdd.js", "range": [1316, 1470], "lineno": 57, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.suite.skip", "scope": "static", "name": "skip"}, {"comment": "/**\r\n     * Exclusive test-case.\r\n     */", "kind": "function", "description": "Exclusive test-case.", "memberof": "context.suite", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000141", "name": "context.suite.only"}, "columnno": 4, "filename": "tdd.js", "range": [1526, 1680], "lineno": 68, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.suite.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n     * Describe a specification or test-case with the given `title` and\r\n     * callback `fn` acting as a thunk.\r\n     */", "kind": "function", "description": "Describe a specification or test-case with the given `title` and\rcallback `fn` acting as a thunk.", "memberof": "context", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000166", "name": "context.test"}, "vars": {"test": "context.test~test", "suite": "context.test~suite", "fn": "context.test~fn", "test.file": "context.test~test.file"}, "columnno": 4, "filename": "tdd.js", "range": [1821, 2067], "lineno": 80, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.test", "scope": "static", "name": "test"}, {"comment": "/**\r\n     * Exclusive test-case.\r\n     */", "kind": "function", "description": "Exclusive test-case.", "memberof": "context.test", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000212", "name": "context.test.only"}, "columnno": 4, "filename": "tdd.js", "range": [2125, 2237], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.test.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n * BDD-style interface:\r\n *\r\n *      describe('Array', function() {\r\n *        describe('#indexOf()', function() {\r\n *          it('should return -1 when not present', function() {\r\n *            // ...\r\n *          });\r\n *\r\n *          it('should return the index when present', function() {\r\n *            // ...\r\n *          });\r\n *        });\r\n *      });\r\n *\r\n * @param {Suite} suite Root suite.\r\n */", "kind": "function", "description": "BDD-style interface:\r\r     describe('Array', function() {\r       describe('#indexOf()', function() {\r         it('should return -1 when not present', function() {\r           // ...\r         });\r\r         it('should return the index when present', function() {\r           // ...\r         });\r       });\r     });", "memberof": "module", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000011", "value": "bddInterface", "name": "module.exports"}, "vars": {"": null, "suites": "module.exports~suites"}, "columnno": 0, "filename": "bdd.js", "range": [463, 2582], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "Root suite.", "name": "suite"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "context", "memberof": "context", "undocumented": true, "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000098", "name": "context.context"}, "columnno": 23, "filename": "bdd.js", "range": [1060, 1213], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.context", "scope": "static"}, {"comment": "", "kind": "function", "name": "context.describe.skip", "memberof": "context.xdescribe", "undocumented": true, "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000129", "name": "context.describe.skip"}, "columnno": 43, "filename": "bdd.js", "range": [1307, 1485], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.xdescribe.context.describe.skip", "scope": "static"}, {"comment": "/**\r\n     * Exclusive suite.\r\n     */", "kind": "function", "description": "Exclusive suite.", "memberof": "context.describe", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000154", "name": "context.describe.only"}, "columnno": 4, "filename": "bdd.js", "range": [1539, 1696], "lineno": 66, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.describe.only", "scope": "static", "name": "only"}, {"comment": "", "kind": "function", "name": "specify", "memberof": "context", "undocumented": true, "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000183", "name": "context.specify"}, "vars": {"test": "context.specify~test", "suite": "context.specify~suite", "fn": "context.specify~fn", "test.file": "context.specify~test.file"}, "columnno": 17, "filename": "bdd.js", "range": [1860, 2109], "lineno": 80, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.specify", "scope": "static"}, {"comment": "/**\r\n     * Exclusive test-case.\r\n     */", "kind": "function", "description": "Exclusive test-case.", "memberof": "context.it", "meta": {"code": {"paramnames": ["title", "fn"], "type": "FunctionExpression", "id": "astnode100000229", "name": "context.it.only"}, "columnno": 4, "filename": "bdd.js", "range": [2167, 2275], "lineno": 95, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.it.only", "scope": "static", "name": "only"}, {"comment": "", "kind": "function", "name": "context.it.skip", "memberof": "context.xit", "undocumented": true, "meta": {"code": {"paramnames": ["title"], "type": "FunctionExpression", "id": "astnode100000262", "name": "context.it.skip"}, "columnno": 37, "filename": "bdd.js", "range": [2364, 2439], "lineno": 103, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.xit.context.it.skip", "scope": "static"}, {"comment": "/**\r\n     * Number of attempts to retry.\r\n     */", "kind": "function", "description": "Number of attempts to retry.", "memberof": "context.it", "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000278", "name": "context.it.retries"}, "columnno": 4, "filename": "bdd.js", "range": [2503, 2571], "lineno": 110, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "longname": "context.it.retries", "scope": "static", "name": "retries"}, {"comment": "/**\r\n * Functions common to more than one interface.\r\n *\r\n * @param {Suite[]} suites\r\n * @param {Context} context\r\n * @param {Mocha} mocha\r\n * @return {Object} An object containing common functions.\r\n */", "kind": "function", "description": "Functions common to more than one interface.", "memberof": "module", "returns": [{"type": {"names": ["Object"]}, "description": "An object containing common functions."}], "meta": {"code": {"paramnames": ["suites", "context", "mocha"], "type": "FunctionExpression", "id": "astnode100000017", "name": "module.exports"}, "vars": {"": null, "shouldBeTested": "module.exports~shouldBeTested"}, "columnno": 0, "filename": "common.js", "range": [292, 5090], "lineno": 14, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Array.<Suite>"]}, "name": "suites"}, {"type": {"names": ["Context"]}, "name": "context"}, {"type": {"names": ["Mocha"]}, "name": "mocha"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "/**\r\n   * Check if the suite should be tested.\r\n   *\r\n   * @private\r\n   * @param {Suite} suite - suite to check\r\n   * @returns {boolean}\r\n   */", "kind": "function", "description": "Check if the suite should be tested.", "memberof": "module.exports", "access": "private", "returns": [{"type": {"names": ["boolean"]}}], "meta": {"code": {"paramnames": ["suite"], "type": "FunctionDeclaration", "id": "astnode100000026", "name": "shouldBeTested"}, "columnno": 2, "filename": "common.js", "range": [494, 700], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "suite to check", "name": "suite"}], "longname": "module.exports~shouldBeTested", "scope": "inner", "name": "shouldBeTested"}, {"comment": "/**\r\n     * This is only present if flag --delay is passed into Mocha. It triggers\r\n     * root suite execution.\r\n     *\r\n     * @param {Suite} suite The root suite.\r\n     * @return {Function} A function which runs the root suite\r\n     */", "kind": "function", "description": "This is only present if flag --delay is passed into Mocha. It triggers\rroot suite execution.", "returns": [{"type": {"names": ["function"]}, "description": "A function which runs the root suite"}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000065", "value": "runWithSuite", "name": "runWithSuite"}, "vars": {"": null}, "columnno": 4, "filename": "common.js", "range": [964, 1078], "lineno": 39, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "The root suite.", "name": "suite"}], "longname": "runWithSuite", "scope": "global", "name": "runWithSuite"}, {"comment": "/**\r\n     * Execute before running tests.\r\n     *\r\n     * @param {string} name\r\n     * @param {Function} fn\r\n     */", "kind": "function", "description": "Execute before running tests.", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000079", "name": "before"}, "columnno": 4, "filename": "common.js", "range": [1209, 1282], "lineno": 51, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "before", "scope": "global", "name": "before"}, {"comment": "/**\r\n     * Execute after running tests.\r\n     *\r\n     * @param {string} name\r\n     * @param {Function} fn\r\n     */", "kind": "function", "description": "Execute after running tests.", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000093", "name": "after"}, "columnno": 4, "filename": "common.js", "range": [1412, 1483], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "after", "scope": "global", "name": "after"}, {"comment": "/**\r\n     * Execute before each test case.\r\n     *\r\n     * @param {string} name\r\n     * @param {Function} fn\r\n     */", "kind": "function", "description": "Execute before each test case.", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000107", "name": "beforeEach"}, "columnno": 4, "filename": "common.js", "range": [1615, 1693], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "beforeEach", "scope": "global", "name": "beforeEach"}, {"comment": "/**\r\n     * Execute after each test case.\r\n     *\r\n     * @param {string} name\r\n     * @param {Function} fn\r\n     */", "kind": "function", "description": "Execute after each test case.", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000121", "name": "afterEach"}, "columnno": 4, "filename": "common.js", "range": [1824, 1900], "lineno": 81, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["string"]}, "name": "name"}, {"type": {"names": ["function"]}, "name": "fn"}], "longname": "afterEach", "scope": "global", "name": "afterEach"}, {"comment": "/**\r\n       * Create an exclusive Suite; convenience function\r\n       * See docstring for create() below.\r\n       *\r\n       * @param {Object} opts\r\n       * @returns {Suite}\r\n       */", "kind": "function", "description": "Create an exclusive Suite; convenience function\rSee docstring for create() below.", "memberof": "suite", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000137", "value": "only", "name": "only"}, "vars": {"opts.isOnly": "opts.isOnly"}, "columnno": 6, "filename": "common.js", "range": [2117, 2217], "lineno": 93, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Object"]}, "name": "opts"}], "longname": "suite.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n       * Create a Suite, but skip it; convenience function\r\n       * See docstring for create() below.\r\n       *\r\n       * @param {Object} opts\r\n       * @returns {Suite}\r\n       */", "kind": "function", "description": "Create a Suite, but skip it; convenience function\rSee docstring for create() below.", "memberof": "suite", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000154", "value": "skip", "name": "skip"}, "vars": {"opts.pending": "opts.pending"}, "columnno": 6, "filename": "common.js", "range": [2422, 2523], "lineno": 105, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Object"]}, "name": "opts"}], "longname": "suite.skip", "scope": "static", "name": "skip"}, {"comment": "/**\r\n       * Creates a suite.\r\n       *\r\n       * @param {Object} opts Options\r\n       * @param {string} opts.title Title of Suite\r\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\r\n       * @param {boolean} [opts.pending] Is Suite pending?\r\n       * @param {string} [opts.file] Filepath where this Suite resides\r\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\r\n       * @returns {Suite}\r\n       */", "kind": "function", "description": "Creates a suite.", "memberof": "suite", "returns": [{"type": {"names": ["Suite"]}}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000171", "value": "create", "name": "create"}, "vars": {"suite": "suite.create~suite", "suite.file": "suite.create~suite.file", "suite.parent._onlySuites": "suite.create~suite.parent._onlySuites", "suite.pending": "suite.create~suite.pending", "result": "suite.create~result"}, "columnno": 6, "filename": "common.js", "range": [2981, 4429], "lineno": 121, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Object"]}, "description": "Options", "name": "opts"}, {"type": {"names": ["string"]}, "description": "Title of Suite", "name": "opts.title"}, {"optional": true, "type": {"names": ["function"]}, "description": "Suite Function (not always applicable)", "name": "opts.fn"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Is Suite pending?", "name": "opts.pending"}, {"optional": true, "type": {"names": ["string"]}, "description": "Filepath where this Suite resides", "name": "opts.file"}, {"optional": true, "type": {"names": ["boolean"]}, "description": "Is Suite exclusive?", "name": "opts.isOnly"}], "longname": "suite.create", "scope": "static", "name": "create"}, {"comment": "/**\r\n       * Exclusive test-case.\r\n       *\r\n       * @param {Object} mocha\r\n       * @param {Function} test\r\n       * @returns {*}\r\n       */", "kind": "function", "description": "Exclusive test-case.", "memberof": "test", "returns": [{"type": {"names": ["*"]}}], "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000357", "name": "only"}, "vars": {"test.parent._onlyTests": "test.parent._onlyTests"}, "columnno": 6, "filename": "common.js", "range": [4611, 4742], "lineno": 172, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Object"]}, "name": "mocha"}, {"type": {"names": ["function"]}, "name": "test"}], "longname": "test.only", "scope": "static", "name": "only"}, {"comment": "/**\r\n       * Pending test case.\r\n       *\r\n       * @param {string} title\r\n       */", "kind": "function", "description": "Pending test case.", "memberof": "test", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000380", "name": "skip"}, "columnno": 6, "filename": "common.js", "range": [4846, 4908], "lineno": 182, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["string"]}, "name": "title"}], "longname": "test.skip", "scope": "static", "name": "skip"}, {"comment": "/**\r\n       * Number of retry attempts\r\n       *\r\n       * @param {number} n\r\n       */", "kind": "function", "description": "Number of retry attempts", "memberof": "test", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000390", "name": "retries"}, "columnno": 6, "filename": "common.js", "range": [5014, 5074], "lineno": 191, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["number"]}, "name": "n"}], "longname": "test.retries", "scope": "static", "name": "retries"}, {"comment": "/**\r\n * Exports-style (as Node.js module) interface:\r\n *\r\n *     exports.Array = {\r\n *       '#indexOf()': {\r\n *         'should return -1 when the value is not present': function() {\r\n *\r\n *         },\r\n *\r\n *         'should return the correct index when the value is present': function() {\r\n *\r\n *         }\r\n *       }\r\n *     };\r\n *\r\n * @param {Suite} suite Root suite.\r\n */", "kind": "function", "description": "Exports-style (as Node.js module) interface:\r\r    exports.Array = {\r      '#indexOf()': {\r        'should return -1 when the value is not present': function() {\r\r        },\r\r        'should return the correct index when the value is present': function() {\r\r        }\r      }\r    };", "memberof": "module", "meta": {"code": {"paramnames": ["suite"], "type": "FunctionExpression", "id": "astnode100000017", "name": "module.exports"}, "vars": {"suites": "module.exports~suites", "visit": "module.exports~visit"}, "columnno": 0, "filename": "exports.js", "range": [464, 1391], "lineno": 22, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [{"type": {"names": ["Suite"]}, "description": "Root suite.", "name": "suite"}], "longname": "module.exports", "scope": "static", "name": "exports"}, {"comment": "", "kind": "function", "name": "visit", "memberof": "module.exports", "undocumented": true, "meta": {"code": {"paramnames": ["obj", "file"], "type": "FunctionDeclaration", "id": "astnode100000036", "name": "visit"}, "vars": {"test": "module.exports~visit~test", "suite": "module.exports~visit~suite", "fn": "module.exports~visit~fn", "key": "module.exports~visit~key", "test.file": "module.exports~visit~test.file"}, "columnno": 2, "filename": "exports.js", "range": [562, 1388], "lineno": 27, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/interfaces"}, "params": [], "longname": "module.exports~visit", "scope": "inner"}, {"comment": "", "kind": "function", "name": "isatty", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000005", "value": "isatty", "name": "exports.isatty"}, "columnno": 0, "filename": "tty.js", "range": [17, 72], "lineno": 3, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "isatty", "scope": "global"}, {"comment": "", "kind": "function", "name": "getWindowSize", "undocumented": true, "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000015", "value": "getWindowSize", "name": "exports.getWindowSize"}, "columnno": 0, "filename": "tty.js", "range": [77, 300], "lineno": 7, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "getWindowSize", "scope": "global"}, {"comment": "/**\r\n * Initialize a new `Progress` indicator.\r\n */", "kind": "function", "description": "Initialize a new `Progress` indicator.", "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000010", "name": "Progress"}, "vars": {"this.percent": null}, "columnno": 0, "filename": "progress.js", "range": [135, 265], "lineno": 12, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [], "longname": "Progress", "scope": "global", "name": "Progress"}, {"comment": "/**\r\n * Set progress size to `size`.\r\n *\r\n * @public\r\n * @param {number} size\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Set progress size to `size`.", "memberof": "Progress", "access": "public", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["size"], "type": "FunctionExpression", "id": "astnode100000038", "name": "Progress.prototype.size"}, "vars": {"this._size": "Progress#size#_size"}, "columnno": 0, "filename": "progress.js", "range": [395, 478], "lineno": 26, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["number"]}, "name": "size"}], "longname": "Progress#size", "scope": "instance", "name": "size"}, {"comment": "/**\r\n * Set text to `text`.\r\n *\r\n * @public\r\n * @param {string} text\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Set text to `text`.", "memberof": "Progress", "access": "public", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["text"], "type": "FunctionExpression", "id": "astnode100000056", "name": "Progress.prototype.text"}, "vars": {"this._text": "Progress#text#_text"}, "columnno": 0, "filename": "progress.js", "range": [600, 683], "lineno": 38, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["string"]}, "name": "text"}], "longname": "Progress#text", "scope": "instance", "name": "text"}, {"comment": "/**\r\n * Set font size to `size`.\r\n *\r\n * @public\r\n * @param {number} size\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Set font size to `size`.", "memberof": "Progress", "access": "public", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["size"], "type": "FunctionExpression", "id": "astnode100000074", "name": "Progress.prototype.fontSize"}, "vars": {"this._fontSize": "Progress#fontSize#_fontSize"}, "columnno": 0, "filename": "progress.js", "range": [810, 901], "lineno": 50, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["number"]}, "name": "size"}], "longname": "Progress#fontSize", "scope": "instance", "name": "fontSize"}, {"comment": "/**\r\n * Set font to `family`.\r\n *\r\n * @param {string} family\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Set font to `family`.", "memberof": "Progress", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["family"], "type": "FunctionExpression", "id": "astnode100000092", "name": "Progress.prototype.font"}, "vars": {"this._font": "Progress#font#_font"}, "columnno": 0, "filename": "progress.js", "range": [1015, 1102], "lineno": 61, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["string"]}, "name": "family"}], "longname": "Progress#font", "scope": "instance", "name": "font"}, {"comment": "/**\r\n * Update percentage to `n`.\r\n *\r\n * @param {number} n\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Update percentage to `n`.", "memberof": "Progress", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["n"], "type": "FunctionExpression", "id": "astnode100000110", "name": "Progress.prototype.update"}, "vars": {"this.percent": "Progress#update#percent"}, "columnno": 0, "filename": "progress.js", "range": [1215, 1296], "lineno": 72, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["number"]}, "name": "n"}], "longname": "Progress#update", "scope": "instance", "name": "update"}, {"comment": "/**\r\n * Draw on `ctx`.\r\n *\r\n * @param {CanvasRenderingContext2d} ctx\r\n * @return {Progress} Progress instance.\r\n */", "kind": "function", "description": "Draw on `ctx`.", "memberof": "Progress", "returns": [{"type": {"names": ["Progress"]}, "description": "Progress instance."}], "meta": {"code": {"paramnames": ["ctx"], "type": "FunctionExpression", "id": "astnode100000128", "name": "Progress.prototype.draw"}, "vars": {"rad": "Progress#draw~rad", "ctx.font": "ctx.font", "text": "Progress#draw~text", "percent": "Progress#draw~percent", "ctx.strokeStyle": "ctx.strokeStyle", "fontSize": "Progress#draw~fontSize", "w": "Progress#draw~w", "half": "Progress#draw~half", "y": "Progress#draw~y", "x": "Progress#draw~x", "angle": "Progress#draw~angle", "size": "Progress#draw~size"}, "columnno": 0, "filename": "progress.js", "range": [1418, 2351], "lineno": 83, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["CanvasRenderingContext2d"]}, "name": "ctx"}], "longname": "Progress#draw", "scope": "instance", "name": "draw"}, {"comment": "/**\r\n * Checks if browser notification support exists.\r\n *\r\n * @public\r\n * @see {@link https://caniuse.com/#feat=notifications|Browser support (notifications)}\r\n * @see {@link https://caniuse.com/#feat=promises|Browser support (promises)}\r\n * @see {@link Mocha#growl}\r\n * @see {@link Mocha#isGrowlCapable}\r\n * @return {boolean} whether browser notification support exists\r\n */", "kind": "function", "description": "Checks if browser notification support exists.", "memberof": "module:Growl", "returns": [{"type": {"names": ["boolean"]}, "description": "whether browser notification support exists"}], "access": "public", "see": ["{@link https://caniuse.com/#feat=notifications|Browser support (notifications)}", "{@link https://caniuse.com/#feat=promises|Browser support (promises)}", "{@link Mocha#growl}", "{@link Mocha#isGrowlCapable}"], "meta": {"code": {"paramnames": [], "type": "FunctionExpression", "id": "astnode100000017", "name": "exports.isCapable"}, "vars": {"hasNotificationSupport": "module:Growl.isCapable~hasNotificationSupport", "hasPromiseSupport": "module:Growl.isCapable~hasPromiseSupport"}, "columnno": 0, "filename": "growl.js", "range": [596, 821], "lineno": 24, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "module:Growl.isCapable", "scope": "static", "name": "isCapable"}, {"comment": "/**\r\n * Implements browser notifications as a pseudo-reporter.\r\n *\r\n * @public\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/notification|Notification API}\r\n * @see {@link https://developers.google.com/web/fundamentals/push-notifications/display-a-notification|Displaying a Notification}\r\n * @see {@link Growl#isPermitted}\r\n * @see {@link Mocha#_growl}\r\n * @param {Runner} runner - Runner instance.\r\n */", "kind": "function", "description": "Implements browser notifications as a pseudo-reporter.", "memberof": "module:Growl", "access": "public", "see": ["{@link https://developer.mozilla.org/en-US/docs/Web/API/notification|Notification API}", "{@link https://developers.google.com/web/fundamentals/push-notifications/display-a-notification|Displaying a Notification}", "{@link Growl#isPermitted}", "{@link Mocha#_growl}"], "meta": {"code": {"paramnames": ["runner"], "type": "FunctionExpression", "id": "astnode100000045", "name": "exports.notify"}, "vars": {"": null, "promise": "module:Growl.notify~promise", "sendNotification": "module:Growl.notify~sendNotification"}, "columnno": 0, "filename": "growl.js", "range": [1250, 1702], "lineno": 40, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["Runner"]}, "description": "Runner instance.", "name": "runner"}], "longname": "module:Growl.notify", "scope": "static", "name": "notify"}, {"comment": "/**\r\n   * Attempt notification.\r\n   */", "kind": "function", "description": "Attempt notification.", "memberof": "module:Growl.notify", "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000058", "name": "sendNotification"}, "vars": {"": null}, "columnno": 6, "filename": "growl.js", "range": [1369, 1655], "lineno": 46, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [], "longname": "module:Growl.notify~sendNotification", "scope": "inner", "name": "sendNotification"}, {"comment": "/**\r\n * Checks if browser notification is permitted by user.\r\n *\r\n * @private\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission|Notification.permission}\r\n * @see {@link Mocha#growl}\r\n * @see {@link Mocha#isGrowlPermitted}\r\n * @returns {Promise<boolean>} promise determining if browser notification\r\n *     permissible when fulfilled.\r\n */", "kind": "function", "description": "Checks if browser notification is permitted by user.", "memberof": "module:Growl", "returns": [{"type": {"names": ["Promise.<boolean>"]}, "description": "promise determining if browser notification\r    permissible when fulfilled."}], "access": "private", "see": ["{@link https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission|Notification.permission}", "{@link Mocha#growl}", "{@link Mocha#isGrowlPermitted}"], "meta": {"code": {"paramnames": [], "type": "FunctionDeclaration", "id": "astnode100000098", "name": "isPermitted"}, "vars": {"": null, "permitted": "module:Growl~isPermitted~permitted"}, "columnno": 0, "filename": "growl.js", "range": [2086, 2511], "lineno": 69, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [], "longname": "module:Growl~isPermitted", "scope": "inner", "name": "isPermitted"}, {"comment": "", "kind": "function", "name": "granted", "memberof": "module:Growl~isPermitted~permitted", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000105", "value": "allow", "name": "granted"}, "columnno": 4, "filename": "growl.js", "range": [2137, 2208], "lineno": 71, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "module:Growl~isPermitted~permitted.granted", "scope": "static"}, {"comment": "", "kind": "function", "name": "denied", "memberof": "module:Growl~isPermitted~permitted", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000115", "value": "deny", "name": "denied"}, "columnno": 4, "filename": "growl.js", "range": [2215, 2285], "lineno": 74, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "module:Growl~isPermitted~permitted.denied", "scope": "static"}, {"comment": "", "kind": "function", "name": "default", "memberof": "module:Growl~isPermitted~permitted", "undocumented": true, "meta": {"code": {"type": "FunctionExpression", "id": "astnode100000125", "value": "ask", "name": "default"}, "vars": {"": null}, "columnno": 4, "filename": "growl.js", "range": [2292, 2452], "lineno": 77, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "longname": "module:Growl~isPermitted~permitted.default", "scope": "static"}, {"comment": "/**\r\n * @summary\r\n * Determines if notification should proceed.\r\n *\r\n * @description\r\n * Notification shall <strong>not</strong> proceed unless `value` is true.\r\n *\r\n * `value` will equal one of:\r\n * <ul>\r\n *   <li><code>true</code> (from `isPermitted`)</li>\r\n *   <li><code>false</code> (from `isPermitted`)</li>\r\n *   <li><code>undefined</code> (from `Promise.race`)</li>\r\n * </ul>\r\n *\r\n * @private\r\n * @param {boolean|undefined} value - Determines if notification permissible.\r\n * @returns {Promise<undefined>} Notification can proceed\r\n */", "kind": "function", "description": "Notification shall <strong>not</strong> proceed unless `value` is true.\r\r`value` will equal one of:\r<ul>\r  <li><code>true</code> (from `isPermitted`)</li>\r  <li><code>false</code> (from `isPermitted`)</li>\r  <li><code>undefined</code> (from `Promise.race`)</li>\r</ul>", "memberof": "module:Growl", "summary": "Determines if notification should proceed.", "access": "private", "returns": [{"type": {"names": ["Promise.<undefined>"]}, "description": "Notification can proceed"}], "meta": {"code": {"paramnames": ["value"], "type": "FunctionDeclaration", "id": "astnode100000151", "name": "canNotify"}, "vars": {"reason": "module:Growl~canNotify~reason", "why": "module:Growl~canNotify~why"}, "columnno": 0, "filename": "growl.js", "range": [3060, 3308], "lineno": 105, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["boolean", "undefined"]}, "description": "Determines if notification permissible.", "name": "value"}], "longname": "module:Growl~canNotify", "scope": "inner", "name": "canNotify"}, {"comment": "/**\r\n * Displays the notification.\r\n *\r\n * @private\r\n * @param {Runner} runner - Runner instance.\r\n */", "kind": "function", "description": "Displays the notification.", "memberof": "module:Growl", "access": "private", "meta": {"code": {"paramnames": ["runner"], "type": "FunctionDeclaration", "id": "astnode100000189", "name": "display"}, "vars": {"stats": "module:Growl~display~stats", "title": "module:Growl~title", "notification": "module:Growl~display~notification", "symbol": "module:Growl~display~symbol", "_message": "module:Growl~_message", "FORCE_DURATION": "module:Growl~display~FORCE_DURATION", "logo": "module:Growl~display~logo", "message": "module:Growl~message", "options": "module:Growl~display~options"}, "columnno": 0, "filename": "growl.js", "range": [3416, 4417], "lineno": 120, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["Runner"]}, "description": "Runner instance.", "name": "runner"}], "longname": "module:Growl~display", "scope": "inner", "name": "display"}, {"comment": "/**\r\n * As notifications are tangential to our purpose, just log the error.\r\n *\r\n * @private\r\n * @param {Error} err - Why notification didn't happen.\r\n */", "kind": "function", "description": "As notifications are tangential to our purpose, just log the error.", "memberof": "module:Growl", "access": "private", "meta": {"code": {"paramnames": ["err"], "type": "FunctionDeclaration", "id": "astnode100000331", "name": "notPermitted"}, "columnno": 0, "filename": "growl.js", "range": [4577, 4662], "lineno": 165, "path": "/home/zcl/Desktop/parametermismatch/dataset/mocha/lib/browser"}, "params": [{"type": {"names": ["Error"]}, "description": "Why notification didn't happen.", "name": "err"}], "longname": "module:Growl~notPermitted", "scope": "inner", "name": "notPermitted"}]